

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Tricorn
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class TricornEntities : DbContext
{
    public TricornEntities()
        : base("name=TricornEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<Accounts_Process> Accounts_Process { get; set; }

    public DbSet<ART_CUSTOMER> ART_CUSTOMER { get; set; }

    public DbSet<ART_DELQUOTATION> ART_DELQUOTATION { get; set; }

    public DbSet<ART_LTEXT> ART_LTEXT { get; set; }

    public DbSet<ART_PLNAME> ART_PLNAME { get; set; }

    public DbSet<Audit> Audits { get; set; }

    public DbSet<AuditItem> AuditItems { get; set; }

    public DbSet<Batch> Batches { get; set; }

    public DbSet<BatchTrace> BatchTraces { get; set; }

    public DbSet<BuildBom> BuildBoms { get; set; }

    public DbSet<BuildMaster> BuildMasters { get; set; }

    public DbSet<CA_CAPACITY> CA_CAPACITY { get; set; }

    public DbSet<CA_HOLIDAY> CA_HOLIDAY { get; set; }

    public DbSet<CA_WEEKPLAN> CA_WEEKPLAN { get; set; }

    public DbSet<CalibKeysDetail> CalibKeysDetails { get; set; }

    public DbSet<CalibrationEquipment> CalibrationEquipments { get; set; }

    public DbSet<CalibrationHistory> CalibrationHistories { get; set; }

    public DbSet<CalibrationProcedure> CalibrationProcedures { get; set; }

    public DbSet<CalibrationUsage> CalibrationUsages { get; set; }

    public DbSet<Client> Clients { get; set; }

    public DbSet<CompanyPartMat> CompanyPartMats { get; set; }

    public DbSet<Complaint> Complaints { get; set; }

    public DbSet<Concession> Concessions { get; set; }

    public DbSet<Contact> Contacts { get; set; }

    public DbSet<Cost_Centre> Cost_Centre { get; set; }

    public DbSet<CP_Calendar> CP_Calendar { get; set; }

    public DbSet<CP_Daily> CP_Daily { get; set; }

    public DbSet<CP_Weekly> CP_Weekly { get; set; }

    public DbSet<CU_ACCOUNT> CU_ACCOUNT { get; set; }

    public DbSet<CU_BEM> CU_BEM { get; set; }

    public DbSet<CU_CNTRY> CU_CNTRY { get; set; }

    public DbSet<CU_COTYP> CU_COTYP { get; set; }

    public DbSet<CU_INFO> CU_INFO { get; set; }

    public DbSet<CU_MAIL> CU_MAIL { get; set; }

    public DbSet<CU_PERS> CU_PERS { get; set; }

    public DbSet<CU_VERS> CU_VERS { get; set; }

    public DbSet<CustomCommand> CustomCommands { get; set; }

    public DbSet<Customer> Customers { get; set; }

    public DbSet<Customer_Currency> Customer_Currency { get; set; }

    public DbSet<CustomerSatisfaction> CustomerSatisfactions { get; set; }

    public DbSet<CustomerSatisfactionDetail> CustomerSatisfactionDetails { get; set; }

    public DbSet<DashboardItemRight> DashboardItemRights { get; set; }

    public DbSet<DashboardItem> DashboardItems { get; set; }

    public DbSet<DashboardPage> DashboardPages { get; set; }

    public DbSet<DashBudget> DashBudgets { get; set; }

    public DbSet<DashFinancialYear> DashFinancialYears { get; set; }

    public DbSet<DashRanx> DashRanges { get; set; }

    public DbSet<DashTarget> DashTargets { get; set; }

    public DbSet<DashTargetType> DashTargetTypes { get; set; }

    public DbSet<DefaultWorkingHr> DefaultWorkingHrs { get; set; }

    public DbSet<Discount> Discounts { get; set; }

    public DbSet<DItem> DItems { get; set; }

    public DbSet<DItemBuiltPartTrace> DItemBuiltPartTraces { get; set; }

    public DbSet<DItemMatTrace> DItemMatTraces { get; set; }

    public DbSet<DItemPartTrace> DItemPartTraces { get; set; }

    public DbSet<DItemSubConTrace> DItemSubConTraces { get; set; }

    public DbSet<DItemToolTrace> DItemToolTraces { get; set; }

    public DbSet<DMethod> DMethods { get; set; }

    public DbSet<DNote> DNotes { get; set; }

    public DbSet<DocNote> DocNotes { get; set; }

    public DbSet<DocumentLinkCategory> DocumentLinkCategories { get; set; }

    public DbSet<DocumentLink> DocumentLinks { get; set; }

    public DbSet<dtproperty> dtproperties { get; set; }

    public DbSet<EAddress> EAddresses { get; set; }

    public DbSet<Employee> Employees { get; set; }

    public DbSet<Employee_Details> Employee_Details { get; set; }

    public DbSet<FactoryDayPlan> FactoryDayPlans { get; set; }

    public DbSet<FAG_DETAIL> FAG_DETAIL { get; set; }

    public DbSet<FAG_SALESMAN> FAG_SALESMAN { get; set; }

    public DbSet<FAG_TRANSACTIONLOCKING> FAG_TRANSACTIONLOCKING { get; set; }

    public DbSet<FAG_UNILOG> FAG_UNILOG { get; set; }

    public DbSet<FI_ACCOUNT> FI_ACCOUNT { get; set; }

    public DbSet<FinancialHeader> FinancialHeaders { get; set; }

    public DbSet<GKN_PROJECT> GKN_PROJECT { get; set; }

    public DbSet<Image> Images { get; set; }

    public DbSet<IN_KASSE> IN_KASSE { get; set; }

    public DbSet<Industry> Industries { get; set; }

    public DbSet<Interface_Detail_Fields> Interface_Detail_Fields { get; set; }

    public DbSet<InterfaceType> InterfaceTypes { get; set; }

    public DbSet<InvItem> InvItems { get; set; }

    public DbSet<Invoice> Invoices { get; set; }

    public DbSet<IS_CAL> IS_CAL { get; set; }

    public DbSet<IS_NUM> IS_NUM { get; set; }

    public DbSet<IS_SETUP> IS_SETUP { get; set; }

    public DbSet<JD_ADDINFO> JD_ADDINFO { get; set; }

    public DbSet<JD_BASE> JD_BASE { get; set; }

    public DbSet<JD_BINARY> JD_BINARY { get; set; }

    public DbSet<JD_BOM> JD_BOM { get; set; }

    public DbSet<JD_BOXDATA> JD_BOXDATA { get; set; }

    public DbSet<JD_CAPDOMAIN> JD_CAPDOMAIN { get; set; }

    public DbSet<JD_CAPDOMLINK> JD_CAPDOMLINK { get; set; }

    public DbSet<JD_EAI_LOGBOOK> JD_EAI_LOGBOOK { get; set; }

    public DbSet<JD_EAI_LOGCONFIG> JD_EAI_LOGCONFIG { get; set; }

    public DbSet<JD_EXCHANGE_PLAN> JD_EXCHANGE_PLAN { get; set; }

    public DbSet<JD_EXCHANGE_USER> JD_EXCHANGE_USER { get; set; }

    public DbSet<JD_MDC_FUNCTIONS> JD_MDC_FUNCTIONS { get; set; }

    public DbSet<JD_MDC_LAYOUTDATA> JD_MDC_LAYOUTDATA { get; set; }

    public DbSet<JD_MDC_LAYOUTS> JD_MDC_LAYOUTS { get; set; }

    public DbSet<JD_MDC_LOGINS> JD_MDC_LOGINS { get; set; }

    public DbSet<JD_MESDUMP> JD_MESDUMP { get; set; }

    public DbSet<JD_MR_FRAGSHARE> JD_MR_FRAGSHARE { get; set; }

    public DbSet<JD_PALLET_BASE> JD_PALLET_BASE { get; set; }

    public DbSet<JD_REPORTS> JD_REPORTS { get; set; }

    public DbSet<JD_SYSTEM_INFO> JD_SYSTEM_INFO { get; set; }

    public DbSet<LB_DC> LB_DC { get; set; }

    public DbSet<LB_FUNCTION> LB_FUNCTION { get; set; }

    public DbSet<License> Licenses { get; set; }

    public DbSet<Location> Locations { get; set; }

    public DbSet<MaintenanceHistory> MaintenanceHistories { get; set; }

    public DbSet<MaintenanceMachine> MaintenanceMachines { get; set; }

    public DbSet<MaintenanceProcedure> MaintenanceProcedures { get; set; }

    public DbSet<Material> Materials { get; set; }

    public DbSet<MDC_EVENTSTRUCT> MDC_EVENTSTRUCT { get; set; }

    public DbSet<MDC_FUNCTIONMAPPING> MDC_FUNCTIONMAPPING { get; set; }

    public DbSet<MDC_TERMINALID> MDC_TERMINALID { get; set; }

    public DbSet<MStock> MStocks { get; set; }

    public DbSet<MWithdrawal> MWithdrawals { get; set; }

    public DbSet<Nominal_codes> Nominal_codes { get; set; }

    public DbSet<Nonconformancy> Nonconformancies { get; set; }

    public DbSet<Notifier> Notifiers { get; set; }

    public DbSet<num> nums { get; set; }

    public DbSet<OG_ORGA> OG_ORGA { get; set; }

    public DbSet<OG_ORGADOC> OG_ORGADOC { get; set; }

    public DbSet<OP_CNC> OP_CNC { get; set; }

    public DbSet<OP_SPC> OP_SPC { get; set; }

    public DbSet<OR_ART> OR_ART { get; set; }

    public DbSet<OR_CALC> OR_CALC { get; set; }

    public DbSet<OR_CHARGE> OR_CHARGE { get; set; }

    public DbSet<OR_GRPTYP> OR_GRPTYP { get; set; }

    public DbSet<OR_OPNAME> OR_OPNAME { get; set; }

    public DbSet<OR_OPTYPE> OR_OPTYPE { get; set; }

    public DbSet<OR_PROJ> OR_PROJ { get; set; }

    public DbSet<OR_SERIAL> OR_SERIAL { get; set; }

    public DbSet<Order_Events> Order_Events { get; set; }

    public DbSet<PA_ARTGRP> PA_ARTGRP { get; set; }

    public DbSet<PA_ARTHIS> PA_ARTHIS { get; set; }

    public DbSet<PA_ARTLIEF> PA_ARTLIEF { get; set; }

    public DbSet<PA_ARTPOS> PA_ARTPOS { get; set; }

    public DbSet<PA_ARTTYP> PA_ARTTYP { get; set; }

    public DbSet<PA_DPD> PA_DPD { get; set; }

    public DbSet<PA_FIBU> PA_FIBU { get; set; }

    public DbSet<PA_FIT> PA_FIT { get; set; }

    public DbSet<PA_PACKAGING> PA_PACKAGING { get; set; }

    public DbSet<PA_PAPER> PA_PAPER { get; set; }

    public DbSet<PA_POSIT> PA_POSIT { get; set; }

    public DbSet<PA_STLB> PA_STLB { get; set; }

    public DbSet<PA_TEXTE> PA_TEXTE { get; set; }

    public DbSet<Part> Parts { get; set; }

    public DbSet<Part_Material_Form> Part_Material_Form { get; set; }

    public DbSet<PartTrace> PartTraces { get; set; }

    public DbSet<PE_GROUP> PE_GROUP { get; set; }

    public DbSet<PE_MAPPING> PE_MAPPING { get; set; }

    public DbSet<PE_WORK> PE_WORK { get; set; }

    public DbSet<PE_WPLACE> PE_WPLACE { get; set; }

    public DbSet<PInvoice> PInvoices { get; set; }

    public DbSet<PInvoiceItem> PInvoiceItems { get; set; }

    public DbSet<PInvoiceItem_Delivery> PInvoiceItem_Delivery { get; set; }

    public DbSet<PItem> PItems { get; set; }

    public DbSet<PItem_Assignments> PItem_Assignments { get; set; }

    public DbSet<PList> PLists { get; set; }

    public DbSet<PListItem> PListItems { get; set; }

    public DbSet<POrder> POrders { get; set; }

    public DbSet<PRM_LAYOUTS> PRM_LAYOUTS { get; set; }

    public DbSet<PRM_OBJECTS> PRM_OBJECTS { get; set; }

    public DbSet<PRM_PERS> PRM_PERS { get; set; }

    public DbSet<PRM_SIMU> PRM_SIMU { get; set; }

    public DbSet<PRM_TRANSBOX> PRM_TRANSBOX { get; set; }

    public DbSet<PRM_TRANSSYS> PRM_TRANSSYS { get; set; }

    public DbSet<PRM_WAYCACHE> PRM_WAYCACHE { get; set; }

    public DbSet<Procedure> Procedures { get; set; }

    public DbSet<Process_Allocated_Stock> Process_Allocated_Stock { get; set; }

    public DbSet<PStock> PStocks { get; set; }

    public DbSet<PW_PASS> PW_PASS { get; set; }

    public DbSet<PWithdrawal> PWithdrawals { get; set; }

    public DbSet<QComponent> QComponents { get; set; }

    public DbSet<QMaterial> QMaterials { get; set; }

    public DbSet<QPart> QParts { get; set; }

    public DbSet<QSubContract> QSubContracts { get; set; }

    public DbSet<QTool> QTools { get; set; }

    public DbSet<Quote> Quotes { get; set; }

    public DbSet<QWCentre> QWCentres { get; set; }

    public DbSet<rb_field> rb_field { get; set; }

    public DbSet<rb_folder> rb_folder { get; set; }

    public DbSet<rb_item> rb_item { get; set; }

    public DbSet<rb_join> rb_join { get; set; }

    public DbSet<rb_table> rb_table { get; set; }

    public DbSet<ReasonCodeType> ReasonCodeTypes { get; set; }

    public DbSet<RecordKey> RecordKeys { get; set; }

    public DbSet<RejectCategory> RejectCategories { get; set; }

    public DbSet<Reject> Rejects { get; set; }

    public DbSet<RFQ> RFQs { get; set; }

    public DbSet<RFQ_Item> RFQ_Item { get; set; }

    public DbSet<RFQ_Plan> RFQ_Plan { get; set; }

    public DbSet<SatisfactionCategory> SatisfactionCategories { get; set; }

    public DbSet<SFDC_CLIENT_RECENT_USERS> SFDC_CLIENT_RECENT_USERS { get; set; }

    public DbSet<SFDC_CLIENT_WORKCENTRES> SFDC_CLIENT_WORKCENTRES { get; set; }

    public DbSet<SFDC_CLIENTS> SFDC_CLIENTS { get; set; }

    public DbSet<SFDC_GROUPS> SFDC_GROUPS { get; set; }

    public DbSet<SH_DPD> SH_DPD { get; set; }

    public DbSet<SLocation> SLocations { get; set; }

    public DbSet<ST_PLACE> ST_PLACE { get; set; }

    public DbSet<ST_STOCK> ST_STOCK { get; set; }

    public DbSet<Stock_Categories> Stock_Categories { get; set; }

    public DbSet<STrace> STraces { get; set; }

    public DbSet<SubContract> SubContracts { get; set; }

    public DbSet<Supplier> Suppliers { get; set; }

    public DbSet<SupplierPerformance> SupplierPerformances { get; set; }

    public DbSet<System_Codes> System_Codes { get; set; }

    public DbSet<TED_Data> TED_Data { get; set; }

    public DbSet<TED_Tables> TED_Tables { get; set; }

    public DbSet<TEvent_Log> TEvent_Log { get; set; }

    public DbSet<TNotification> TNotifications { get; set; }

    public DbSet<TQ_InspRec> TQ_InspRec { get; set; }

    public DbSet<TQ_InspType> TQ_InspType { get; set; }

    public DbSet<TQ_InspTypeRight> TQ_InspTypeRight { get; set; }

    public DbSet<TQ_NCR> TQ_NCR { get; set; }

    public DbSet<TQ_Reject> TQ_Reject { get; set; }

    public DbSet<Training> Trainings { get; set; }

    public DbSet<TRemote> TRemotes { get; set; }

    public DbSet<TRFQ> TRFQs { get; set; }

    public DbSet<TRFQ_Item> TRFQ_Item { get; set; }

    public DbSet<TRFQ_Responses> TRFQ_Responses { get; set; }

    public DbSet<TRFQ_Sources> TRFQ_Sources { get; set; }

    public DbSet<TRFQ_Suppliers> TRFQ_Suppliers { get; set; }

    public DbSet<Tricorn_Access_Flags> Tricorn_Access_Flags { get; set; }

    public DbSet<Tricorn_Access_Rights> Tricorn_Access_Rights { get; set; }

    public DbSet<Tricorn_Event_Log> Tricorn_Event_Log { get; set; }

    public DbSet<Tricorn_Excluded_Field_Types> Tricorn_Excluded_Field_Types { get; set; }

    public DbSet<Tricorn_Logged_Fields> Tricorn_Logged_Fields { get; set; }

    public DbSet<Tricorn_Logged_Tables> Tricorn_Logged_Tables { get; set; }

    public DbSet<Tricorn_Roles> Tricorn_Roles { get; set; }

    public DbSet<Tricorn_User_Acct> Tricorn_User_Acct { get; set; }

    public DbSet<Tricorn_User_Roles> Tricorn_User_Roles { get; set; }

    public DbSet<TricornSession> TricornSessions { get; set; }

    public DbSet<TTrace> TTraces { get; set; }

    public DbSet<TUDF> TUDFs { get; set; }

    public DbSet<TUDF_Zone> TUDF_Zone { get; set; }

    public DbSet<UpgradeInfo> UpgradeInfoes { get; set; }

    public DbSet<VAT_Rates> VAT_Rates { get; set; }

    public DbSet<Warning> Warnings { get; set; }

    public DbSet<WCentre> WCentres { get; set; }

    public DbSet<WH_INT> WH_INT { get; set; }

    public DbSet<WOComponent> WOComponents { get; set; }

    public DbSet<WOInspection> WOInspections { get; set; }

    public DbSet<WOMaterial> WOMaterials { get; set; }

    public DbSet<WOOperAct> WOOperActs { get; set; }

    public DbSet<WOOperPlan> WOOperPlans { get; set; }

    public DbSet<WOPart> WOParts { get; set; }

    public DbSet<WOrder> WOrders { get; set; }

    public DbSet<WOSubContract> WOSubContracts { get; set; }

    public DbSet<WOTool> WOTools { get; set; }

    public DbSet<WOWCentre> WOWCentres { get; set; }

    public DbSet<WP_GROUP> WP_GROUP { get; set; }

    public DbSet<WP_MAGRP> WP_MAGRP { get; set; }

    public DbSet<Break_Times> Break_Times { get; set; }

    public DbSet<DBVersion> DBVersions { get; set; }

    public DbSet<DiscountDetail> DiscountDetails { get; set; }

    public DbSet<FinancialDetail> FinancialDetails { get; set; }

    public DbSet<JD_FAVOURITS> JD_FAVOURITS { get; set; }

    public DbSet<JD_LIC_CONNECTION> JD_LIC_CONNECTION { get; set; }

    public DbSet<JD_LIC_USERLIST> JD_LIC_USERLIST { get; set; }

    public DbSet<JD_LIC_USERMAPPING> JD_LIC_USERMAPPING { get; set; }

    public DbSet<JD_MDC_ATP> JD_MDC_ATP { get; set; }

    public DbSet<JD_NOTE> JD_NOTE { get; set; }

    public DbSet<JD_SEIKI_EVT_MAPPING> JD_SEIKI_EVT_MAPPING { get; set; }

    public DbSet<JD_TESTEQLOG> JD_TESTEQLOG { get; set; }

    public DbSet<JD_TESTEQPRESET> JD_TESTEQPRESET { get; set; }

    public DbSet<JD_TESTEQUIPMENT> JD_TESTEQUIPMENT { get; set; }

    public DbSet<JD_TRANSLATION> JD_TRANSLATION { get; set; }

    public DbSet<JIS_ADRESSEN> JIS_ADRESSEN { get; set; }

    public DbSet<JIS_FERTIGUNG> JIS_FERTIGUNG { get; set; }

    public DbSet<option> options { get; set; }

    public DbSet<OR_FRAG> OR_FRAG { get; set; }

    public DbSet<Param> Params { get; set; }

    public DbSet<PRM_VECTORMAP> PRM_VECTORMAP { get; set; }

    public DbSet<Seat> Seats { get; set; }

    public DbSet<WCentreCost> WCentreCosts { get; set; }

    public DbSet<AuditFullView> AuditFullViews { get; set; }

    public DbSet<BuildBOMView> BuildBOMViews { get; set; }

    public DbSet<CalibEquipFullView> CalibEquipFullViews { get; set; }

    public DbSet<CalibProcFullView> CalibProcFullViews { get; set; }

    public DbSet<ComplaintFullView> ComplaintFullViews { get; set; }

    public DbSet<Complaints_View> Complaints_View { get; set; }

    public DbSet<Concession_View> Concession_View { get; set; }

    public DbSet<ConcessionsFullView> ConcessionsFullViews { get; set; }

    public DbSet<CU_COMP> CU_COMP { get; set; }

    public DbSet<Dash_Active_Materials> Dash_Active_Materials { get; set; }

    public DbSet<Dash_Active_Parts> Dash_Active_Parts { get; set; }

    public DbSet<Dash_Batches> Dash_Batches { get; set; }

    public DbSet<Dash_Contacts> Dash_Contacts { get; set; }

    public DbSet<Dash_Customers> Dash_Customers { get; set; }

    public DbSet<Dash_Deliveries> Dash_Deliveries { get; set; }

    public DbSet<Dash_Invoice_Items> Dash_Invoice_Items { get; set; }

    public DbSet<Dash_Materials> Dash_Materials { get; set; }

    public DbSet<Dash_Materials_On_OS_WOs> Dash_Materials_On_OS_WOs { get; set; }

    public DbSet<Dash_MStock> Dash_MStock { get; set; }

    public DbSet<Dash_Op_Employees_Count> Dash_Op_Employees_Count { get; set; }

    public DbSet<Dash_Ops> Dash_Ops { get; set; }

    public DbSet<Dash_OrderBook_Status> Dash_OrderBook_Status { get; set; }

    public DbSet<Dash_OTIF> Dash_OTIF { get; set; }

    public DbSet<Dash_Parts> Dash_Parts { get; set; }

    public DbSet<Dash_Parts_On_OS_WOs> Dash_Parts_On_OS_WOs { get; set; }

    public DbSet<Dash_PivotOp> Dash_PivotOp { get; set; }

    public DbSet<Dash_PO_Items> Dash_PO_Items { get; set; }

    public DbSet<Dash_POFirstLastPromiseDates> Dash_POFirstLastPromiseDates { get; set; }

    public DbSet<Dash_PStock> Dash_PStock { get; set; }

    public DbSet<Dash_Quotes> Dash_Quotes { get; set; }

    public DbSet<Dash_RFQs> Dash_RFQs { get; set; }

    public DbSet<Dash_SalesOrderBatches> Dash_SalesOrderBatches { get; set; }

    public DbSet<Dash_SalesOrderBatchesOS> Dash_SalesOrderBatchesOS { get; set; }

    public DbSet<Dash_SalesOrders> Dash_SalesOrders { get; set; }

    public DbSet<Dash_SalesOrdersTopLevel> Dash_SalesOrdersTopLevel { get; set; }

    public DbSet<Dash_Suppliers> Dash_Suppliers { get; set; }

    public DbSet<Dash_ValueQuoteInGroup> Dash_ValueQuoteInGroup { get; set; }

    public DbSet<Dash_WorksOrders> Dash_WorksOrders { get; set; }

    public DbSet<DiscountView> DiscountViews { get; set; }

    public DbSet<DNoteSearchView> DNoteSearchViews { get; set; }

    public DbSet<EU_Material_MRP> EU_Material_MRP { get; set; }

    public DbSet<EU_Parts_TItle_MRP> EU_Parts_TItle_MRP { get; set; }

    public DbSet<EU_Title_Mrp> EU_Title_Mrp { get; set; }

    public DbSet<EU_WIP> EU_WIP { get; set; }

    public DbSet<EU_WO_Actuals_and_Estimates> EU_WO_Actuals_and_Estimates { get; set; }

    public DbSet<EU_WO_Actuals_and_Estimates_Single_WO> EU_WO_Actuals_and_Estimates_Single_WO { get; set; }

    public DbSet<InvItem_Without_Deliveries> InvItem_Without_Deliveries { get; set; }

    public DbSet<InvoiceSearchView> InvoiceSearchViews { get; set; }

    public DbSet<Kpi_GanntData> Kpi_GanntData { get; set; }

    public DbSet<Kpi_GanntView> Kpi_GanntView { get; set; }

    public DbSet<KPI_OperatorActive> KPI_OperatorActive { get; set; }

    public DbSet<KPI_OperatorInactive> KPI_OperatorInactive { get; set; }

    public DbSet<KPI_OperatorProductivity> KPI_OperatorProductivity { get; set; }

    public DbSet<KPI_OPERATORTIMES> KPI_OPERATORTIMES { get; set; }

    public DbSet<MaintMachFullView> MaintMachFullViews { get; set; }

    public DbSet<MaintProcFullView> MaintProcFullViews { get; set; }

    public DbSet<MStock_View> MStock_View { get; set; }

    public DbSet<NonConfFullView> NonConfFullViews { get; set; }

    public DbSet<NonConfomancies_View> NonConfomancies_View { get; set; }

    public DbSet<OR_DEPENDENCY> OR_DEPENDENCY { get; set; }

    public DbSet<OR_OP> OR_OP { get; set; }

    public DbSet<OR_ORDER> OR_ORDER { get; set; }

    public DbSet<OrderIndex> OrderIndexes { get; set; }

    public DbSet<Part_Lookup_View> Part_Lookup_View { get; set; }

    public DbSet<Part_Lookup_View_Active_Only> Part_Lookup_View_Active_Only { get; set; }

    public DbSet<PInvoiceSearchView> PInvoiceSearchViews { get; set; }

    public DbSet<POrder_Trace_View> POrder_Trace_View { get; set; }

    public DbSet<POrder_WOrder_View> POrder_WOrder_View { get; set; }

    public DbSet<POrderSearchView> POrderSearchViews { get; set; }

    public DbSet<POrderSearchView2> POrderSearchView2 { get; set; }

    public DbSet<ProceduresFullView> ProceduresFullViews { get; set; }

    public DbSet<PStock_View> PStock_View { get; set; }

    public DbSet<QSubDiscountView> QSubDiscountViews { get; set; }

    public DbSet<Rejects_View> Rejects_View { get; set; }

    public DbSet<RejectsFullView> RejectsFullViews { get; set; }

    public DbSet<Schedule_Deviation_View> Schedule_Deviation_View { get; set; }

    public DbSet<Subcontract_Usage> Subcontract_Usage { get; set; }

    public DbSet<SuppPerfFullView> SuppPerfFullViews { get; set; }

    public DbSet<today> todays { get; set; }

    public DbSet<TrainingFullView> TrainingFullViews { get; set; }

    public DbSet<WO_Actuals_and_Estimates_For_WO> WO_Actuals_and_Estimates_For_WO { get; set; }

    public DbSet<WOInspectFullView> WOInspectFullViews { get; set; }

    public DbSet<WOrder_All_View> WOrder_All_View { get; set; }

    public DbSet<WOrder_OS_Batch_Qty> WOrder_OS_Batch_Qty { get; set; }

    public DbSet<WORDER_SCHEDULE_VIEW> WORDER_SCHEDULE_VIEW { get; set; }

    public DbSet<WOrder_Templates_View> WOrder_Templates_View { get; set; }

    public DbSet<WP_MA1> WP_MA1 { get; set; }


    public virtual int ChangeQuoteQuantity(Nullable<int> quoteRefToChange)
    {

        var quoteRefToChangeParameter = quoteRefToChange.HasValue ?
            new ObjectParameter("QuoteRefToChange", quoteRefToChange) :
            new ObjectParameter("QuoteRefToChange", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeQuoteQuantity", quoteRefToChangeParameter);
    }


    public virtual int ChangeWOQuantity(Nullable<int> wORefToChange)
    {

        var wORefToChangeParameter = wORefToChange.HasValue ?
            new ObjectParameter("WORefToChange", wORefToChange) :
            new ObjectParameter("WORefToChange", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeWOQuantity", wORefToChangeParameter);
    }


    public virtual int CloseOpenWooperacts()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseOpenWooperacts");
    }


    public virtual int CloseWooperactsOnTimeOut(Nullable<int> minsRunning)
    {

        var minsRunningParameter = minsRunning.HasValue ?
            new ObjectParameter("minsRunning", minsRunning) :
            new ObjectParameter("minsRunning", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CloseWooperactsOnTimeOut", minsRunningParameter);
    }


    public virtual int CopyAMaterial(Nullable<int> materialRefToCopy)
    {

        var materialRefToCopyParameter = materialRefToCopy.HasValue ?
            new ObjectParameter("MaterialRefToCopy", materialRefToCopy) :
            new ObjectParameter("MaterialRefToCopy", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyAMaterial", materialRefToCopyParameter);
    }


    public virtual int CopyInvItem(Nullable<int> invoiceRefToCopy, Nullable<int> newInvoiceRef, string destinationType, string user_Reference)
    {

        var invoiceRefToCopyParameter = invoiceRefToCopy.HasValue ?
            new ObjectParameter("InvoiceRefToCopy", invoiceRefToCopy) :
            new ObjectParameter("InvoiceRefToCopy", typeof(int));


        var newInvoiceRefParameter = newInvoiceRef.HasValue ?
            new ObjectParameter("NewInvoiceRef", newInvoiceRef) :
            new ObjectParameter("NewInvoiceRef", typeof(int));


        var destinationTypeParameter = destinationType != null ?
            new ObjectParameter("DestinationType", destinationType) :
            new ObjectParameter("DestinationType", typeof(string));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyInvItem", invoiceRefToCopyParameter, newInvoiceRefParameter, destinationTypeParameter, user_ReferenceParameter);
    }


    public virtual int CopyInvoiceToCNote(Nullable<int> invoiceRefToCopy, string user_Reference)
    {

        var invoiceRefToCopyParameter = invoiceRefToCopy.HasValue ?
            new ObjectParameter("InvoiceRefToCopy", invoiceRefToCopy) :
            new ObjectParameter("InvoiceRefToCopy", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyInvoiceToCNote", invoiceRefToCopyParameter, user_ReferenceParameter);
    }


    public virtual int CopyQMaterial(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQMaterial", quoteRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CopyQMaterialToWOMaterial(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQMaterialToWOMaterial", quoteRefToCopyParameter, newWOrderRefParameter);
    }


    public virtual int CopyQPart(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQPart", quoteRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CopyQPartToWOPart(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQPartToWOPart", quoteRefToCopyParameter, newWOrderRefParameter);
    }


    public virtual int CopyQSubContract(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQSubContract", quoteRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CopyQSubContractToWOSubContract(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQSubContractToWOSubContract", quoteRefToCopyParameter, newWOrderRefParameter);
    }


    public virtual int CopyQTool(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQTool", quoteRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CopyQuote(Nullable<int> quoteRefToCopy, Nullable<int> sequence, string user_Reference, string group_Reference, string status, Nullable<bool> main, Nullable<bool> copy_Components, Nullable<double> quantity, Nullable<bool> explode, Nullable<int> user_id, Nullable<double> order_Quantity, Nullable<int> in_Customer_Reference, Nullable<int> in_Contact_Reference, Nullable<int> in_Location_Reference, Nullable<double> in_Exchange_Rate, Nullable<bool> locked, Nullable<System.DateTime> prepared, string customer_Enquiry_Number, string part_Number, string part_Issue, string drawing_Number, string drawing_Issue, string description, string lead_Time, Nullable<System.DateTime> delivery, Nullable<double> exchange_Rate, ObjectParameter success, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var sequenceParameter = sequence.HasValue ?
            new ObjectParameter("Sequence", sequence) :
            new ObjectParameter("Sequence", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var group_ReferenceParameter = group_Reference != null ?
            new ObjectParameter("Group_Reference", group_Reference) :
            new ObjectParameter("Group_Reference", typeof(string));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        var mainParameter = main.HasValue ?
            new ObjectParameter("Main", main) :
            new ObjectParameter("Main", typeof(bool));


        var copy_ComponentsParameter = copy_Components.HasValue ?
            new ObjectParameter("Copy_Components", copy_Components) :
            new ObjectParameter("Copy_Components", typeof(bool));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var explodeParameter = explode.HasValue ?
            new ObjectParameter("Explode", explode) :
            new ObjectParameter("Explode", typeof(bool));


        var user_idParameter = user_id.HasValue ?
            new ObjectParameter("User_id", user_id) :
            new ObjectParameter("User_id", typeof(int));


        var order_QuantityParameter = order_Quantity.HasValue ?
            new ObjectParameter("Order_Quantity", order_Quantity) :
            new ObjectParameter("Order_Quantity", typeof(double));


        var in_Customer_ReferenceParameter = in_Customer_Reference.HasValue ?
            new ObjectParameter("In_Customer_Reference", in_Customer_Reference) :
            new ObjectParameter("In_Customer_Reference", typeof(int));


        var in_Contact_ReferenceParameter = in_Contact_Reference.HasValue ?
            new ObjectParameter("In_Contact_Reference", in_Contact_Reference) :
            new ObjectParameter("In_Contact_Reference", typeof(int));


        var in_Location_ReferenceParameter = in_Location_Reference.HasValue ?
            new ObjectParameter("In_Location_Reference", in_Location_Reference) :
            new ObjectParameter("In_Location_Reference", typeof(int));


        var in_Exchange_RateParameter = in_Exchange_Rate.HasValue ?
            new ObjectParameter("In_Exchange_Rate", in_Exchange_Rate) :
            new ObjectParameter("In_Exchange_Rate", typeof(double));


        var lockedParameter = locked.HasValue ?
            new ObjectParameter("Locked", locked) :
            new ObjectParameter("Locked", typeof(bool));


        var preparedParameter = prepared.HasValue ?
            new ObjectParameter("Prepared", prepared) :
            new ObjectParameter("Prepared", typeof(System.DateTime));


        var customer_Enquiry_NumberParameter = customer_Enquiry_Number != null ?
            new ObjectParameter("Customer_Enquiry_Number", customer_Enquiry_Number) :
            new ObjectParameter("Customer_Enquiry_Number", typeof(string));


        var part_NumberParameter = part_Number != null ?
            new ObjectParameter("Part_Number", part_Number) :
            new ObjectParameter("Part_Number", typeof(string));


        var part_IssueParameter = part_Issue != null ?
            new ObjectParameter("Part_Issue", part_Issue) :
            new ObjectParameter("Part_Issue", typeof(string));


        var drawing_NumberParameter = drawing_Number != null ?
            new ObjectParameter("Drawing_Number", drawing_Number) :
            new ObjectParameter("Drawing_Number", typeof(string));


        var drawing_IssueParameter = drawing_Issue != null ?
            new ObjectParameter("Drawing_Issue", drawing_Issue) :
            new ObjectParameter("Drawing_Issue", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var lead_TimeParameter = lead_Time != null ?
            new ObjectParameter("Lead_Time", lead_Time) :
            new ObjectParameter("Lead_Time", typeof(string));


        var deliveryParameter = delivery.HasValue ?
            new ObjectParameter("Delivery", delivery) :
            new ObjectParameter("Delivery", typeof(System.DateTime));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQuote", quoteRefToCopyParameter, sequenceParameter, user_ReferenceParameter, group_ReferenceParameter, statusParameter, mainParameter, copy_ComponentsParameter, quantityParameter, explodeParameter, user_idParameter, order_QuantityParameter, in_Customer_ReferenceParameter, in_Contact_ReferenceParameter, in_Location_ReferenceParameter, in_Exchange_RateParameter, lockedParameter, preparedParameter, customer_Enquiry_NumberParameter, part_NumberParameter, part_IssueParameter, drawing_NumberParameter, drawing_IssueParameter, descriptionParameter, lead_TimeParameter, deliveryParameter, exchange_RateParameter, success, copyDocsParameter);
    }


    public virtual int CopyQWCentre(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQWCentre", quoteRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CopyQWCentreToWOWCentre(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyQWCentreToWOWCentre", quoteRefToCopyParameter, newWOrderRefParameter);
    }


    public virtual int CopySubContract(Nullable<int> quoteRefToCopy, Nullable<int> newQuoteRef)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopySubContract", quoteRefToCopyParameter, newQuoteRefParameter);
    }


    public virtual int CopyWOMaterial(Nullable<int> wOrderRefToCopy, Nullable<int> newWOrderRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOMaterial", wOrderRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int CopyWOPart(Nullable<int> wOrderRefToCopy, Nullable<int> newWOrderRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOPart", wOrderRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int CopyWOrder(Nullable<int> wOrderRefToCopy, Nullable<int> sequence, string user_Reference, string status, Nullable<bool> main, Nullable<bool> copy_Components, Nullable<double> quantity, Nullable<double> quantity_To_Build, Nullable<bool> explode, Nullable<bool> doneLevelZero, Nullable<int> levelZeroRef, Nullable<int> user_id, Nullable<bool> locked, string contract_Number, Nullable<System.DateTime> prepared, string description, string customer_Order_Number, string customer_Order_Item, string nominal_Code, Nullable<int> location_Reference, Nullable<int> customer_Reference, Nullable<int> contact_Reference, Nullable<System.DateTime> delivery, Nullable<double> exchange_Rate, Nullable<decimal> price, string order_Type_Code, ObjectParameter next_Sequence, Nullable<int> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var sequenceParameter = sequence.HasValue ?
            new ObjectParameter("Sequence", sequence) :
            new ObjectParameter("Sequence", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        var mainParameter = main.HasValue ?
            new ObjectParameter("Main", main) :
            new ObjectParameter("Main", typeof(bool));


        var copy_ComponentsParameter = copy_Components.HasValue ?
            new ObjectParameter("Copy_Components", copy_Components) :
            new ObjectParameter("Copy_Components", typeof(bool));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var quantity_To_BuildParameter = quantity_To_Build.HasValue ?
            new ObjectParameter("Quantity_To_Build", quantity_To_Build) :
            new ObjectParameter("Quantity_To_Build", typeof(double));


        var explodeParameter = explode.HasValue ?
            new ObjectParameter("Explode", explode) :
            new ObjectParameter("Explode", typeof(bool));


        var doneLevelZeroParameter = doneLevelZero.HasValue ?
            new ObjectParameter("DoneLevelZero", doneLevelZero) :
            new ObjectParameter("DoneLevelZero", typeof(bool));


        var levelZeroRefParameter = levelZeroRef.HasValue ?
            new ObjectParameter("LevelZeroRef", levelZeroRef) :
            new ObjectParameter("LevelZeroRef", typeof(int));


        var user_idParameter = user_id.HasValue ?
            new ObjectParameter("User_id", user_id) :
            new ObjectParameter("User_id", typeof(int));


        var lockedParameter = locked.HasValue ?
            new ObjectParameter("Locked", locked) :
            new ObjectParameter("Locked", typeof(bool));


        var contract_NumberParameter = contract_Number != null ?
            new ObjectParameter("Contract_Number", contract_Number) :
            new ObjectParameter("Contract_Number", typeof(string));


        var preparedParameter = prepared.HasValue ?
            new ObjectParameter("Prepared", prepared) :
            new ObjectParameter("Prepared", typeof(System.DateTime));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var customer_Order_NumberParameter = customer_Order_Number != null ?
            new ObjectParameter("Customer_Order_Number", customer_Order_Number) :
            new ObjectParameter("Customer_Order_Number", typeof(string));


        var customer_Order_ItemParameter = customer_Order_Item != null ?
            new ObjectParameter("Customer_Order_Item", customer_Order_Item) :
            new ObjectParameter("Customer_Order_Item", typeof(string));


        var nominal_CodeParameter = nominal_Code != null ?
            new ObjectParameter("Nominal_Code", nominal_Code) :
            new ObjectParameter("Nominal_Code", typeof(string));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        var deliveryParameter = delivery.HasValue ?
            new ObjectParameter("Delivery", delivery) :
            new ObjectParameter("Delivery", typeof(System.DateTime));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));


        var order_Type_CodeParameter = order_Type_Code != null ?
            new ObjectParameter("Order_Type_Code", order_Type_Code) :
            new ObjectParameter("Order_Type_Code", typeof(string));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOrder", wOrderRefToCopyParameter, sequenceParameter, user_ReferenceParameter, statusParameter, mainParameter, copy_ComponentsParameter, quantityParameter, quantity_To_BuildParameter, explodeParameter, doneLevelZeroParameter, levelZeroRefParameter, user_idParameter, lockedParameter, contract_NumberParameter, preparedParameter, descriptionParameter, customer_Order_NumberParameter, customer_Order_ItemParameter, nominal_CodeParameter, location_ReferenceParameter, customer_ReferenceParameter, contact_ReferenceParameter, deliveryParameter, exchange_RateParameter, priceParameter, order_Type_CodeParameter, next_Sequence, copyDocsParameter);
    }


    public virtual int CopyWOSubContract(Nullable<int> wOrderRefToCopy, Nullable<int> newWOrderRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOSubContract", wOrderRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int CopyWOTool(Nullable<int> wOrderRefToCopy, Nullable<int> newWOrderRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOTool", wOrderRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int CopyWOWCentre(Nullable<int> wOrderRefToCopy, Nullable<int> newWOrderRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyWOWCentre", wOrderRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int dt_addtosourcecontrol(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
    {

        var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
            new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
            new ObjectParameter("vchSourceSafeINI", typeof(string));


        var vchProjectNameParameter = vchProjectName != null ?
            new ObjectParameter("vchProjectName", vchProjectName) :
            new ObjectParameter("vchProjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual int dt_addtosourcecontrol_u(string vchSourceSafeINI, string vchProjectName, string vchComment, string vchLoginName, string vchPassword)
    {

        var vchSourceSafeINIParameter = vchSourceSafeINI != null ?
            new ObjectParameter("vchSourceSafeINI", vchSourceSafeINI) :
            new ObjectParameter("vchSourceSafeINI", typeof(string));


        var vchProjectNameParameter = vchProjectName != null ?
            new ObjectParameter("vchProjectName", vchProjectName) :
            new ObjectParameter("vchProjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_addtosourcecontrol_u", vchSourceSafeINIParameter, vchProjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual int dt_adduserobject()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject");
    }


    public virtual int dt_adduserobject_vcs(string vchProperty)
    {

        var vchPropertyParameter = vchProperty != null ?
            new ObjectParameter("vchProperty", vchProperty) :
            new ObjectParameter("vchProperty", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_adduserobject_vcs", vchPropertyParameter);
    }


    public virtual int dt_checkinobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iVCSFlagsParameter = iVCSFlags.HasValue ?
            new ObjectParameter("iVCSFlags", iVCSFlags) :
            new ObjectParameter("iVCSFlags", typeof(int));


        var iActionFlagParameter = iActionFlag.HasValue ?
            new ObjectParameter("iActionFlag", iActionFlag) :
            new ObjectParameter("iActionFlag", typeof(int));


        var txStream1Parameter = txStream1 != null ?
            new ObjectParameter("txStream1", txStream1) :
            new ObjectParameter("txStream1", typeof(string));


        var txStream2Parameter = txStream2 != null ?
            new ObjectParameter("txStream2", txStream2) :
            new ObjectParameter("txStream2", typeof(string));


        var txStream3Parameter = txStream3 != null ?
            new ObjectParameter("txStream3", txStream3) :
            new ObjectParameter("txStream3", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
    }


    public virtual int dt_checkinobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag, string txStream1, string txStream2, string txStream3)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iVCSFlagsParameter = iVCSFlags.HasValue ?
            new ObjectParameter("iVCSFlags", iVCSFlags) :
            new ObjectParameter("iVCSFlags", typeof(int));


        var iActionFlagParameter = iActionFlag.HasValue ?
            new ObjectParameter("iActionFlag", iActionFlag) :
            new ObjectParameter("iActionFlag", typeof(int));


        var txStream1Parameter = txStream1 != null ?
            new ObjectParameter("txStream1", txStream1) :
            new ObjectParameter("txStream1", typeof(string));


        var txStream2Parameter = txStream2 != null ?
            new ObjectParameter("txStream2", txStream2) :
            new ObjectParameter("txStream2", typeof(string));


        var txStream3Parameter = txStream3 != null ?
            new ObjectParameter("txStream3", txStream3) :
            new ObjectParameter("txStream3", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkinobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter, txStream1Parameter, txStream2Parameter, txStream3Parameter);
    }


    public virtual int dt_checkoutobject(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iVCSFlagsParameter = iVCSFlags.HasValue ?
            new ObjectParameter("iVCSFlags", iVCSFlags) :
            new ObjectParameter("iVCSFlags", typeof(int));


        var iActionFlagParameter = iActionFlag.HasValue ?
            new ObjectParameter("iActionFlag", iActionFlag) :
            new ObjectParameter("iActionFlag", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
    }


    public virtual int dt_checkoutobject_u(string chObjectType, string vchObjectName, string vchComment, string vchLoginName, string vchPassword, Nullable<int> iVCSFlags, Nullable<int> iActionFlag)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchCommentParameter = vchComment != null ?
            new ObjectParameter("vchComment", vchComment) :
            new ObjectParameter("vchComment", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iVCSFlagsParameter = iVCSFlags.HasValue ?
            new ObjectParameter("iVCSFlags", iVCSFlags) :
            new ObjectParameter("iVCSFlags", typeof(int));


        var iActionFlagParameter = iActionFlag.HasValue ?
            new ObjectParameter("iActionFlag", iActionFlag) :
            new ObjectParameter("iActionFlag", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_checkoutobject_u", chObjectTypeParameter, vchObjectNameParameter, vchCommentParameter, vchLoginNameParameter, vchPasswordParameter, iVCSFlagsParameter, iActionFlagParameter);
    }


    public virtual int dt_displayoaerror(Nullable<int> iObject, Nullable<int> iresult)
    {

        var iObjectParameter = iObject.HasValue ?
            new ObjectParameter("iObject", iObject) :
            new ObjectParameter("iObject", typeof(int));


        var iresultParameter = iresult.HasValue ?
            new ObjectParameter("iresult", iresult) :
            new ObjectParameter("iresult", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror", iObjectParameter, iresultParameter);
    }


    public virtual int dt_displayoaerror_u(Nullable<int> iObject, Nullable<int> iresult)
    {

        var iObjectParameter = iObject.HasValue ?
            new ObjectParameter("iObject", iObject) :
            new ObjectParameter("iObject", typeof(int));


        var iresultParameter = iresult.HasValue ?
            new ObjectParameter("iresult", iresult) :
            new ObjectParameter("iresult", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_displayoaerror_u", iObjectParameter, iresultParameter);
    }


    public virtual int dt_droppropertiesbyid(Nullable<int> id, string property)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_droppropertiesbyid", idParameter, propertyParameter);
    }


    public virtual int dt_dropuserobjectbyid(Nullable<int> id)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_dropuserobjectbyid", idParameter);
    }


    public virtual int dt_generateansiname(ObjectParameter name)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_generateansiname", name);
    }


    public virtual ObjectResult<Nullable<int>> dt_getobjwithprop(string property, string value)
    {

        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        var valueParameter = value != null ?
            new ObjectParameter("value", value) :
            new ObjectParameter("value", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop", propertyParameter, valueParameter);
    }


    public virtual ObjectResult<Nullable<int>> dt_getobjwithprop_u(string property, string uvalue)
    {

        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        var uvalueParameter = uvalue != null ?
            new ObjectParameter("uvalue", uvalue) :
            new ObjectParameter("uvalue", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_getobjwithprop_u", propertyParameter, uvalueParameter);
    }


    public virtual ObjectResult<dt_getpropertiesbyid_Result> dt_getpropertiesbyid(Nullable<int> id, string property)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_Result>("dt_getpropertiesbyid", idParameter, propertyParameter);
    }


    public virtual ObjectResult<dt_getpropertiesbyid_u_Result> dt_getpropertiesbyid_u(Nullable<int> id, string property)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dt_getpropertiesbyid_u_Result>("dt_getpropertiesbyid_u", idParameter, propertyParameter);
    }


    public virtual int dt_getpropertiesbyid_vcs(Nullable<int> id, string property, ObjectParameter value)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs", idParameter, propertyParameter, value);
    }


    public virtual int dt_getpropertiesbyid_vcs_u(Nullable<int> id, string property, ObjectParameter value)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_getpropertiesbyid_vcs_u", idParameter, propertyParameter, value);
    }


    public virtual int dt_isundersourcecontrol(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
    {

        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iWhoTooParameter = iWhoToo.HasValue ?
            new ObjectParameter("iWhoToo", iWhoToo) :
            new ObjectParameter("iWhoToo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
    }


    public virtual int dt_isundersourcecontrol_u(string vchLoginName, string vchPassword, Nullable<int> iWhoToo)
    {

        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        var iWhoTooParameter = iWhoToo.HasValue ?
            new ObjectParameter("iWhoToo", iWhoToo) :
            new ObjectParameter("iWhoToo", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_isundersourcecontrol_u", vchLoginNameParameter, vchPasswordParameter, iWhoTooParameter);
    }


    public virtual int dt_removefromsourcecontrol()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_removefromsourcecontrol");
    }


    public virtual int dt_setpropertybyid(Nullable<int> id, string property, string value, byte[] lvalue)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        var valueParameter = value != null ?
            new ObjectParameter("value", value) :
            new ObjectParameter("value", typeof(string));


        var lvalueParameter = lvalue != null ?
            new ObjectParameter("lvalue", lvalue) :
            new ObjectParameter("lvalue", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid", idParameter, propertyParameter, valueParameter, lvalueParameter);
    }


    public virtual int dt_setpropertybyid_u(Nullable<int> id, string property, string uvalue, byte[] lvalue)
    {

        var idParameter = id.HasValue ?
            new ObjectParameter("id", id) :
            new ObjectParameter("id", typeof(int));


        var propertyParameter = property != null ?
            new ObjectParameter("property", property) :
            new ObjectParameter("property", typeof(string));


        var uvalueParameter = uvalue != null ?
            new ObjectParameter("uvalue", uvalue) :
            new ObjectParameter("uvalue", typeof(string));


        var lvalueParameter = lvalue != null ?
            new ObjectParameter("lvalue", lvalue) :
            new ObjectParameter("lvalue", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_setpropertybyid_u", idParameter, propertyParameter, uvalueParameter, lvalueParameter);
    }


    public virtual int dt_validateloginparams(string vchLoginName, string vchPassword)
    {

        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams", vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual int dt_validateloginparams_u(string vchLoginName, string vchPassword)
    {

        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_validateloginparams_u", vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual int dt_vcsenabled()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_vcsenabled");
    }


    public virtual ObjectResult<Nullable<int>> dt_verstamp006()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp006");
    }


    public virtual ObjectResult<Nullable<int>> dt_verstamp007()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("dt_verstamp007");
    }


    public virtual int dt_whocheckedout(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual int dt_whocheckedout_u(string chObjectType, string vchObjectName, string vchLoginName, string vchPassword)
    {

        var chObjectTypeParameter = chObjectType != null ?
            new ObjectParameter("chObjectType", chObjectType) :
            new ObjectParameter("chObjectType", typeof(string));


        var vchObjectNameParameter = vchObjectName != null ?
            new ObjectParameter("vchObjectName", vchObjectName) :
            new ObjectParameter("vchObjectName", typeof(string));


        var vchLoginNameParameter = vchLoginName != null ?
            new ObjectParameter("vchLoginName", vchLoginName) :
            new ObjectParameter("vchLoginName", typeof(string));


        var vchPasswordParameter = vchPassword != null ?
            new ObjectParameter("vchPassword", vchPassword) :
            new ObjectParameter("vchPassword", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dt_whocheckedout_u", chObjectTypeParameter, vchObjectNameParameter, vchLoginNameParameter, vchPasswordParameter);
    }


    public virtual ObjectResult<string> GetCheckSum()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCheckSum");
    }


    public virtual int GetNextId(string tableName)
    {

        var tableNameParameter = tableName != null ?
            new ObjectParameter("TableName", tableName) :
            new ObjectParameter("TableName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetNextId", tableNameParameter);
    }


    public virtual int GetQComponents(Nullable<int> quote_RefID)
    {

        var quote_RefIDParameter = quote_RefID.HasValue ?
            new ObjectParameter("Quote_RefID", quote_RefID) :
            new ObjectParameter("Quote_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetQComponents", quote_RefIDParameter);
    }


    public virtual int GetWOComponents(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetWOComponents", wOrder_RefIDParameter);
    }


    public virtual ObjectResult<GetWOrderDetails_Result> GetWOrderDetails(string user_Reference)
    {

        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWOrderDetails_Result>("GetWOrderDetails", user_ReferenceParameter);
    }


    public virtual int InsertQComponents(Nullable<int> quote_RefID)
    {

        var quote_RefIDParameter = quote_RefID.HasValue ?
            new ObjectParameter("Quote_RefID", quote_RefID) :
            new ObjectParameter("Quote_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQComponents", quote_RefIDParameter);
    }


    public virtual int InsertQMaterialItem(Nullable<int> materialRefToCopy, Nullable<int> parentRef, string destination)
    {

        var materialRefToCopyParameter = materialRefToCopy.HasValue ?
            new ObjectParameter("MaterialRefToCopy", materialRefToCopy) :
            new ObjectParameter("MaterialRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQMaterialItem", materialRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertQPartItem(Nullable<int> partRefToCopy, Nullable<int> parentRef, string destination)
    {

        var partRefToCopyParameter = partRefToCopy.HasValue ?
            new ObjectParameter("PartRefToCopy", partRefToCopy) :
            new ObjectParameter("PartRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQPartItem", partRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertQSubContractItem(Nullable<int> subContractRefToCopy, Nullable<int> parentRef, string destination)
    {

        var subContractRefToCopyParameter = subContractRefToCopy.HasValue ?
            new ObjectParameter("SubContractRefToCopy", subContractRefToCopy) :
            new ObjectParameter("SubContractRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQSubContractItem", subContractRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertQToolItem(Nullable<int> toolRefToCopy, Nullable<int> parentRef, string destination)
    {

        var toolRefToCopyParameter = toolRefToCopy.HasValue ?
            new ObjectParameter("ToolRefToCopy", toolRefToCopy) :
            new ObjectParameter("ToolRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQToolItem", toolRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertQWCentreItem(Nullable<int> nextWCentreOpNum, Nullable<int> nextWCentreSeq, Nullable<int> parentRef, Nullable<int> wCentreRefToCopy, string destination)
    {

        var nextWCentreOpNumParameter = nextWCentreOpNum.HasValue ?
            new ObjectParameter("NextWCentreOpNum", nextWCentreOpNum) :
            new ObjectParameter("NextWCentreOpNum", typeof(int));


        var nextWCentreSeqParameter = nextWCentreSeq.HasValue ?
            new ObjectParameter("NextWCentreSeq", nextWCentreSeq) :
            new ObjectParameter("NextWCentreSeq", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var wCentreRefToCopyParameter = wCentreRefToCopy.HasValue ?
            new ObjectParameter("WCentreRefToCopy", wCentreRefToCopy) :
            new ObjectParameter("WCentreRefToCopy", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQWCentreItem", nextWCentreOpNumParameter, nextWCentreSeqParameter, parentRefParameter, wCentreRefToCopyParameter, destinationParameter);
    }


    public virtual int InsertWOComponents(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOComponents", wOrder_RefIDParameter);
    }


    public virtual int InsertWOMaterialItem(Nullable<int> materialRefToCopy, Nullable<int> parentRef, string destination)
    {

        var materialRefToCopyParameter = materialRefToCopy.HasValue ?
            new ObjectParameter("MaterialRefToCopy", materialRefToCopy) :
            new ObjectParameter("MaterialRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOMaterialItem", materialRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertWOPartItem(Nullable<int> partRefToCopy, Nullable<int> parentRef, string destination)
    {

        var partRefToCopyParameter = partRefToCopy.HasValue ?
            new ObjectParameter("PartRefToCopy", partRefToCopy) :
            new ObjectParameter("PartRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOPartItem", partRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertWOSubContractItem(Nullable<int> subContractRefToCopy, Nullable<int> parentRef, string destination)
    {

        var subContractRefToCopyParameter = subContractRefToCopy.HasValue ?
            new ObjectParameter("SubContractRefToCopy", subContractRefToCopy) :
            new ObjectParameter("SubContractRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOSubContractItem", subContractRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertWOToolItem(Nullable<int> toolRefToCopy, Nullable<int> parentRef, string destination)
    {

        var toolRefToCopyParameter = toolRefToCopy.HasValue ?
            new ObjectParameter("ToolRefToCopy", toolRefToCopy) :
            new ObjectParameter("ToolRefToCopy", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOToolItem", toolRefToCopyParameter, parentRefParameter, destinationParameter);
    }


    public virtual int InsertWOWCentreItem(Nullable<int> nextWCentreOpNum, Nullable<int> nextWCentreSeq, Nullable<int> parentRef, Nullable<int> wCentreRefToCopy, string destination)
    {

        var nextWCentreOpNumParameter = nextWCentreOpNum.HasValue ?
            new ObjectParameter("NextWCentreOpNum", nextWCentreOpNum) :
            new ObjectParameter("NextWCentreOpNum", typeof(int));


        var nextWCentreSeqParameter = nextWCentreSeq.HasValue ?
            new ObjectParameter("NextWCentreSeq", nextWCentreSeq) :
            new ObjectParameter("NextWCentreSeq", typeof(int));


        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var wCentreRefToCopyParameter = wCentreRefToCopy.HasValue ?
            new ObjectParameter("WCentreRefToCopy", wCentreRefToCopy) :
            new ObjectParameter("WCentreRefToCopy", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWOWCentreItem", nextWCentreOpNumParameter, nextWCentreSeqParameter, parentRefParameter, wCentreRefToCopyParameter, destinationParameter);
    }


    public virtual int QToWOCopy(Nullable<int> quoteRefToCopy, string user_Reference, Nullable<bool> copy_Components, string custOrderNo, Nullable<System.DateTime> strDeliveryDate, Nullable<double> quantity, Nullable<int> user_id, string isConfirmed, string inPublicNotes, string inPrivateNotes, Nullable<System.DateTime> theOrderDate, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var copy_ComponentsParameter = copy_Components.HasValue ?
            new ObjectParameter("Copy_Components", copy_Components) :
            new ObjectParameter("Copy_Components", typeof(bool));


        var custOrderNoParameter = custOrderNo != null ?
            new ObjectParameter("CustOrderNo", custOrderNo) :
            new ObjectParameter("CustOrderNo", typeof(string));


        var strDeliveryDateParameter = strDeliveryDate.HasValue ?
            new ObjectParameter("strDeliveryDate", strDeliveryDate) :
            new ObjectParameter("strDeliveryDate", typeof(System.DateTime));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var user_idParameter = user_id.HasValue ?
            new ObjectParameter("User_id", user_id) :
            new ObjectParameter("User_id", typeof(int));


        var isConfirmedParameter = isConfirmed != null ?
            new ObjectParameter("isConfirmed", isConfirmed) :
            new ObjectParameter("isConfirmed", typeof(string));


        var inPublicNotesParameter = inPublicNotes != null ?
            new ObjectParameter("InPublicNotes", inPublicNotes) :
            new ObjectParameter("InPublicNotes", typeof(string));


        var inPrivateNotesParameter = inPrivateNotes != null ?
            new ObjectParameter("InPrivateNotes", inPrivateNotes) :
            new ObjectParameter("InPrivateNotes", typeof(string));


        var theOrderDateParameter = theOrderDate.HasValue ?
            new ObjectParameter("theOrderDate", theOrderDate) :
            new ObjectParameter("theOrderDate", typeof(System.DateTime));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopy", quoteRefToCopyParameter, user_ReferenceParameter, copy_ComponentsParameter, custOrderNoParameter, strDeliveryDateParameter, quantityParameter, user_idParameter, isConfirmedParameter, inPublicNotesParameter, inPrivateNotesParameter, theOrderDateParameter, copyDocsParameter);
    }


    public virtual int QToWOCopyMaterial(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopyMaterial", quoteRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int QToWOCopyPart(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopyPart", quoteRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int QToWOCopySubContract(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopySubContract", quoteRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int QToWOCopyTool(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopyTool", quoteRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int QToWOCopyWCentre(Nullable<int> quoteRefToCopy, Nullable<int> newWOrderRef, Nullable<int> copyDocs)
    {

        var quoteRefToCopyParameter = quoteRefToCopy.HasValue ?
            new ObjectParameter("QuoteRefToCopy", quoteRefToCopy) :
            new ObjectParameter("QuoteRefToCopy", typeof(int));


        var newWOrderRefParameter = newWOrderRef.HasValue ?
            new ObjectParameter("NewWOrderRef", newWOrderRef) :
            new ObjectParameter("NewWOrderRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QToWOCopyWCentre", quoteRefToCopyParameter, newWOrderRefParameter, copyDocsParameter);
    }


    public virtual int RecordDeviation(Nullable<int> worder_Ref, Nullable<System.DateTime> newEndDate)
    {

        var worder_RefParameter = worder_Ref.HasValue ?
            new ObjectParameter("Worder_Ref", worder_Ref) :
            new ObjectParameter("Worder_Ref", typeof(int));


        var newEndDateParameter = newEndDate.HasValue ?
            new ObjectParameter("newEndDate", newEndDate) :
            new ObjectParameter("newEndDate", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordDeviation", worder_RefParameter, newEndDateParameter);
    }


    public virtual int SplitEmployee()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SplitEmployee");
    }


    public virtual int WOToQCopy(Nullable<int> wOrderRefToCopy, string user_Reference, Nullable<int> user_ID, Nullable<int> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var user_IDParameter = user_ID.HasValue ?
            new ObjectParameter("User_ID", user_ID) :
            new ObjectParameter("User_ID", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopy", wOrderRefToCopyParameter, user_ReferenceParameter, user_IDParameter, copyDocsParameter);
    }


    public virtual int WOToQCopyMaterial(Nullable<int> wOrderRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopyMaterial", wOrderRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int WOToQCopyPart(Nullable<int> wOrderRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopyPart", wOrderRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int WOToQCopySubContract(Nullable<int> wOrderRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopySubContract", wOrderRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int WOToQCopyTool(Nullable<int> wOrderRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopyTool", wOrderRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int WOToQCopyWCentre(Nullable<int> wOrderRefToCopy, Nullable<int> newQuoteRef, Nullable<bool> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var newQuoteRefParameter = newQuoteRef.HasValue ?
            new ObjectParameter("NewQuoteRef", newQuoteRef) :
            new ObjectParameter("NewQuoteRef", typeof(int));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopyWCentre", wOrderRefToCopyParameter, newQuoteRefParameter, copyDocsParameter);
    }


    public virtual int CreateRevisionRecord(string order_Type, string record_Type, Nullable<int> order_Reference, Nullable<int> item_Reference, Nullable<int> employee_Reference, string contact_Name, Nullable<System.DateTime> ack_Date, Nullable<System.DateTime> promise_Date, string comment, Nullable<int> revision, Nullable<System.DateTime> revision_Date, Nullable<bool> acknowledged, ObjectParameter success)
    {

        var order_TypeParameter = order_Type != null ?
            new ObjectParameter("Order_Type", order_Type) :
            new ObjectParameter("Order_Type", typeof(string));


        var record_TypeParameter = record_Type != null ?
            new ObjectParameter("Record_Type", record_Type) :
            new ObjectParameter("Record_Type", typeof(string));


        var order_ReferenceParameter = order_Reference.HasValue ?
            new ObjectParameter("Order_Reference", order_Reference) :
            new ObjectParameter("Order_Reference", typeof(int));


        var item_ReferenceParameter = item_Reference.HasValue ?
            new ObjectParameter("Item_Reference", item_Reference) :
            new ObjectParameter("Item_Reference", typeof(int));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var contact_NameParameter = contact_Name != null ?
            new ObjectParameter("Contact_Name", contact_Name) :
            new ObjectParameter("Contact_Name", typeof(string));


        var ack_DateParameter = ack_Date.HasValue ?
            new ObjectParameter("Ack_Date", ack_Date) :
            new ObjectParameter("Ack_Date", typeof(System.DateTime));


        var promise_DateParameter = promise_Date.HasValue ?
            new ObjectParameter("Promise_Date", promise_Date) :
            new ObjectParameter("Promise_Date", typeof(System.DateTime));


        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));


        var revisionParameter = revision.HasValue ?
            new ObjectParameter("Revision", revision) :
            new ObjectParameter("Revision", typeof(int));


        var revision_DateParameter = revision_Date.HasValue ?
            new ObjectParameter("Revision_Date", revision_Date) :
            new ObjectParameter("Revision_Date", typeof(System.DateTime));


        var acknowledgedParameter = acknowledged.HasValue ?
            new ObjectParameter("Acknowledged", acknowledged) :
            new ObjectParameter("Acknowledged", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRevisionRecord", order_TypeParameter, record_TypeParameter, order_ReferenceParameter, item_ReferenceParameter, employee_ReferenceParameter, contact_NameParameter, ack_DateParameter, promise_DateParameter, commentParameter, revisionParameter, revision_DateParameter, acknowledgedParameter, success);
    }


    public virtual int fo_GetWOComponents(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fo_GetWOComponents", wOrder_RefIDParameter);
    }


    public virtual int fo_InsertWOComponents(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fo_InsertWOComponents", wOrder_RefIDParameter);
    }


    public virtual int JD_CreateSplitOp(Nullable<int> wOWCentreRefToCopy, ObjectParameter newWOWCentreRef, Nullable<int> wCentreRef, Nullable<double> qty, string opName, Nullable<int> setting_Time_ms, Nullable<int> run_Time_ms, Nullable<decimal> overlapPerc, Nullable<decimal> overlap)
    {

        var wOWCentreRefToCopyParameter = wOWCentreRefToCopy.HasValue ?
            new ObjectParameter("WOWCentreRefToCopy", wOWCentreRefToCopy) :
            new ObjectParameter("WOWCentreRefToCopy", typeof(int));


        var wCentreRefParameter = wCentreRef.HasValue ?
            new ObjectParameter("WCentreRef", wCentreRef) :
            new ObjectParameter("WCentreRef", typeof(int));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var opNameParameter = opName != null ?
            new ObjectParameter("OpName", opName) :
            new ObjectParameter("OpName", typeof(string));


        var setting_Time_msParameter = setting_Time_ms.HasValue ?
            new ObjectParameter("Setting_Time_ms", setting_Time_ms) :
            new ObjectParameter("Setting_Time_ms", typeof(int));


        var run_Time_msParameter = run_Time_ms.HasValue ?
            new ObjectParameter("Run_Time_ms", run_Time_ms) :
            new ObjectParameter("Run_Time_ms", typeof(int));


        var overlapPercParameter = overlapPerc.HasValue ?
            new ObjectParameter("OverlapPerc", overlapPerc) :
            new ObjectParameter("OverlapPerc", typeof(decimal));


        var overlapParameter = overlap.HasValue ?
            new ObjectParameter("Overlap", overlap) :
            new ObjectParameter("Overlap", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_CreateSplitOp", wOWCentreRefToCopyParameter, newWOWCentreRef, wCentreRefParameter, qtyParameter, opNameParameter, setting_Time_msParameter, run_Time_msParameter, overlapPercParameter, overlapParameter);
    }


    public virtual int JD_DeleteJoinedOp(Nullable<int> wOWCentreRefToDelete)
    {

        var wOWCentreRefToDeleteParameter = wOWCentreRefToDelete.HasValue ?
            new ObjectParameter("WOWCentreRefToDelete", wOWCentreRefToDelete) :
            new ObjectParameter("WOWCentreRefToDelete", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_DeleteJoinedOp", wOWCentreRefToDeleteParameter);
    }


    public virtual int JD_JoinedSplitOp(Nullable<int> wOWCentreRefJoined)
    {

        var wOWCentreRefJoinedParameter = wOWCentreRefJoined.HasValue ?
            new ObjectParameter("WOWCentreRefJoined", wOWCentreRefJoined) :
            new ObjectParameter("WOWCentreRefJoined", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_JoinedSplitOp", wOWCentreRefJoinedParameter);
    }


    public virtual int JD_OpWasSplit(Nullable<int> wOWCentreRefSplit)
    {

        var wOWCentreRefSplitParameter = wOWCentreRefSplit.HasValue ?
            new ObjectParameter("WOWCentreRefSplit", wOWCentreRefSplit) :
            new ObjectParameter("WOWCentreRefSplit", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_OpWasSplit", wOWCentreRefSplitParameter);
    }


    public virtual ObjectResult<string> JD_UpdateOpTime(Nullable<int> wOWCentre_Reference, string timeType, Nullable<long> time_ms, ObjectParameter success)
    {

        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        var timeTypeParameter = timeType != null ?
            new ObjectParameter("TimeType", timeType) :
            new ObjectParameter("TimeType", typeof(string));


        var time_msParameter = time_ms.HasValue ?
            new ObjectParameter("Time_ms", time_ms) :
            new ObjectParameter("Time_ms", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("JD_UpdateOpTime", wOWCentre_ReferenceParameter, timeTypeParameter, time_msParameter, success);
    }


    public virtual int spPing()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPing");
    }


    public virtual int spUpdateLicenceRecord(string licenceType, string licenceString, ObjectParameter success)
    {

        var licenceTypeParameter = licenceType != null ?
            new ObjectParameter("LicenceType", licenceType) :
            new ObjectParameter("LicenceType", typeof(string));


        var licenceStringParameter = licenceString != null ?
            new ObjectParameter("LicenceString", licenceString) :
            new ObjectParameter("LicenceString", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateLicenceRecord", licenceTypeParameter, licenceStringParameter, success);
    }


    public virtual ObjectResult<spWriteSession_Result> spWriteSession(Nullable<int> inID, string login_ID, string pC_Name, string client_Version, ObjectParameter iD, ObjectParameter sUCCESS)
    {

        var inIDParameter = inID.HasValue ?
            new ObjectParameter("inID", inID) :
            new ObjectParameter("inID", typeof(int));


        var login_IDParameter = login_ID != null ?
            new ObjectParameter("Login_ID", login_ID) :
            new ObjectParameter("Login_ID", typeof(string));


        var pC_NameParameter = pC_Name != null ?
            new ObjectParameter("PC_Name", pC_Name) :
            new ObjectParameter("PC_Name", typeof(string));


        var client_VersionParameter = client_Version != null ?
            new ObjectParameter("Client_Version", client_Version) :
            new ObjectParameter("Client_Version", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWriteSession_Result>("spWriteSession", inIDParameter, login_IDParameter, pC_NameParameter, client_VersionParameter, iD, sUCCESS);
    }


    public virtual ObjectResult<string> UpdateWOTotals(Nullable<int> wOrder_Reference, ObjectParameter success)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateWOTotals", wOrder_ReferenceParameter, success);
    }


    public virtual int Add_Batch_To_Invoice(Nullable<int> invoice_Reference, Nullable<int> batch_Reference, ObjectParameter invItem_Reference, ObjectParameter success, ObjectParameter exchange_Rate)
    {

        var invoice_ReferenceParameter = invoice_Reference.HasValue ?
            new ObjectParameter("Invoice_Reference", invoice_Reference) :
            new ObjectParameter("Invoice_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Batch_To_Invoice", invoice_ReferenceParameter, batch_ReferenceParameter, invItem_Reference, success, exchange_Rate);
    }


    public virtual int AddWOPart(Nullable<int> wOrder_Reference, Nullable<int> part_Reference, Nullable<double> items, Nullable<double> quantity, Nullable<double> needed, Nullable<decimal> unit_Cost, Nullable<double> cost_Qty, Nullable<bool> rework)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var itemsParameter = items.HasValue ?
            new ObjectParameter("Items", items) :
            new ObjectParameter("Items", typeof(double));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var neededParameter = needed.HasValue ?
            new ObjectParameter("Needed", needed) :
            new ObjectParameter("Needed", typeof(double));


        var unit_CostParameter = unit_Cost.HasValue ?
            new ObjectParameter("Unit_Cost", unit_Cost) :
            new ObjectParameter("Unit_Cost", typeof(decimal));


        var cost_QtyParameter = cost_Qty.HasValue ?
            new ObjectParameter("Cost_Qty", cost_Qty) :
            new ObjectParameter("Cost_Qty", typeof(double));


        var reworkParameter = rework.HasValue ?
            new ObjectParameter("Rework", rework) :
            new ObjectParameter("Rework", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddWOPart", wOrder_ReferenceParameter, part_ReferenceParameter, itemsParameter, quantityParameter, neededParameter, unit_CostParameter, cost_QtyParameter, reworkParameter);
    }


    public virtual int API_CreateWOMaterial(Nullable<int> wOrder_Reference, Nullable<int> material_Reference, Nullable<decimal> qty_Per, Nullable<decimal> total_Qty, string notes, ObjectParameter wOMaterial_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var material_ReferenceParameter = material_Reference.HasValue ?
            new ObjectParameter("Material_Reference", material_Reference) :
            new ObjectParameter("Material_Reference", typeof(int));


        var qty_PerParameter = qty_Per.HasValue ?
            new ObjectParameter("Qty_Per", qty_Per) :
            new ObjectParameter("Qty_Per", typeof(decimal));


        var total_QtyParameter = total_Qty.HasValue ?
            new ObjectParameter("Total_Qty", total_Qty) :
            new ObjectParameter("Total_Qty", typeof(decimal));


        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("API_CreateWOMaterial", wOrder_ReferenceParameter, material_ReferenceParameter, qty_PerParameter, total_QtyParameter, notesParameter, wOMaterial_Reference);
    }


    public virtual int Assign_From_RB_Batch(Nullable<int> this_Batch_Reference, Nullable<double> rebuildQty, Nullable<int> rBWO_Batch_Reference, ObjectParameter success)
    {

        var this_Batch_ReferenceParameter = this_Batch_Reference.HasValue ?
            new ObjectParameter("This_Batch_Reference", this_Batch_Reference) :
            new ObjectParameter("This_Batch_Reference", typeof(int));


        var rebuildQtyParameter = rebuildQty.HasValue ?
            new ObjectParameter("RebuildQty", rebuildQty) :
            new ObjectParameter("RebuildQty", typeof(double));


        var rBWO_Batch_ReferenceParameter = rBWO_Batch_Reference.HasValue ?
            new ObjectParameter("RBWO_Batch_Reference", rBWO_Batch_Reference) :
            new ObjectParameter("RBWO_Batch_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Assign_From_RB_Batch", this_Batch_ReferenceParameter, rebuildQtyParameter, rBWO_Batch_ReferenceParameter, success);
    }


    public virtual int Assign_InspType_Line_Numbers(Nullable<int> inspType_Reference, Nullable<int> set_Line_No, ObjectParameter success)
    {

        var inspType_ReferenceParameter = inspType_Reference.HasValue ?
            new ObjectParameter("InspType_Reference", inspType_Reference) :
            new ObjectParameter("InspType_Reference", typeof(int));


        var set_Line_NoParameter = set_Line_No.HasValue ?
            new ObjectParameter("Set_Line_No", set_Line_No) :
            new ObjectParameter("Set_Line_No", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Assign_InspType_Line_Numbers", inspType_ReferenceParameter, set_Line_NoParameter, success);
    }


    public virtual int Assign_PO_Line_Numbers(Nullable<int> pOrder_Reference, Nullable<int> set_PItem_Reference, Nullable<int> set_Line_No, ObjectParameter success)
    {

        var pOrder_ReferenceParameter = pOrder_Reference.HasValue ?
            new ObjectParameter("POrder_Reference", pOrder_Reference) :
            new ObjectParameter("POrder_Reference", typeof(int));


        var set_PItem_ReferenceParameter = set_PItem_Reference.HasValue ?
            new ObjectParameter("Set_PItem_Reference", set_PItem_Reference) :
            new ObjectParameter("Set_PItem_Reference", typeof(int));


        var set_Line_NoParameter = set_Line_No.HasValue ?
            new ObjectParameter("Set_Line_No", set_Line_No) :
            new ObjectParameter("Set_Line_No", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Assign_PO_Line_Numbers", pOrder_ReferenceParameter, set_PItem_ReferenceParameter, set_Line_NoParameter, success);
    }


    public virtual int Auto_Expire_Notifications(ObjectParameter rowsDeleted)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Auto_Expire_Notifications", rowsDeleted);
    }


    public virtual ObjectResult<string> Copy_Dash_Page(string fromUserName, Nullable<int> fromPageNo, string toUserName, Nullable<int> toPageNo, Nullable<bool> deleteExistingWidgets, Nullable<bool> renamePage, ObjectParameter success)
    {

        var fromUserNameParameter = fromUserName != null ?
            new ObjectParameter("FromUserName", fromUserName) :
            new ObjectParameter("FromUserName", typeof(string));


        var fromPageNoParameter = fromPageNo.HasValue ?
            new ObjectParameter("FromPageNo", fromPageNo) :
            new ObjectParameter("FromPageNo", typeof(int));


        var toUserNameParameter = toUserName != null ?
            new ObjectParameter("ToUserName", toUserName) :
            new ObjectParameter("ToUserName", typeof(string));


        var toPageNoParameter = toPageNo.HasValue ?
            new ObjectParameter("ToPageNo", toPageNo) :
            new ObjectParameter("ToPageNo", typeof(int));


        var deleteExistingWidgetsParameter = deleteExistingWidgets.HasValue ?
            new ObjectParameter("DeleteExistingWidgets", deleteExistingWidgets) :
            new ObjectParameter("DeleteExistingWidgets", typeof(bool));


        var renamePageParameter = renamePage.HasValue ?
            new ObjectParameter("RenamePage", renamePage) :
            new ObjectParameter("RenamePage", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Copy_Dash_Page", fromUserNameParameter, fromPageNoParameter, toUserNameParameter, toPageNoParameter, deleteExistingWidgetsParameter, renamePageParameter, success);
    }


    public virtual int CopyDocLinks(string from_Type, Nullable<int> from_Reference, string to_Type, Nullable<int> to_Reference, Nullable<int> employee_Reference)
    {

        var from_TypeParameter = from_Type != null ?
            new ObjectParameter("From_Type", from_Type) :
            new ObjectParameter("From_Type", typeof(string));


        var from_ReferenceParameter = from_Reference.HasValue ?
            new ObjectParameter("From_Reference", from_Reference) :
            new ObjectParameter("From_Reference", typeof(int));


        var to_TypeParameter = to_Type != null ?
            new ObjectParameter("To_Type", to_Type) :
            new ObjectParameter("To_Type", typeof(string));


        var to_ReferenceParameter = to_Reference.HasValue ?
            new ObjectParameter("To_Reference", to_Reference) :
            new ObjectParameter("To_Reference", typeof(int));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyDocLinks", from_TypeParameter, from_ReferenceParameter, to_TypeParameter, to_ReferenceParameter, employee_ReferenceParameter);
    }


    public virtual int CopyInvoice(Nullable<int> invoiceRefToCopy, string user_Reference, string destinationType)
    {

        var invoiceRefToCopyParameter = invoiceRefToCopy.HasValue ?
            new ObjectParameter("InvoiceRefToCopy", invoiceRefToCopy) :
            new ObjectParameter("InvoiceRefToCopy", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var destinationTypeParameter = destinationType != null ?
            new ObjectParameter("DestinationType", destinationType) :
            new ObjectParameter("DestinationType", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyInvoice", invoiceRefToCopyParameter, user_ReferenceParameter, destinationTypeParameter);
    }


    public virtual int CopyPricesForPart(Nullable<int> from_Part_Reference, Nullable<int> to_Part_Reference)
    {

        var from_Part_ReferenceParameter = from_Part_Reference.HasValue ?
            new ObjectParameter("From_Part_Reference", from_Part_Reference) :
            new ObjectParameter("From_Part_Reference", typeof(int));


        var to_Part_ReferenceParameter = to_Part_Reference.HasValue ?
            new ObjectParameter("To_Part_Reference", to_Part_Reference) :
            new ObjectParameter("To_Part_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyPricesForPart", from_Part_ReferenceParameter, to_Part_ReferenceParameter);
    }


    public virtual int CopyRFQ(Nullable<int> rFQ_Reference, Nullable<int> owned_By, Nullable<bool> copySuppliers, Nullable<bool> copyItems)
    {

        var rFQ_ReferenceParameter = rFQ_Reference.HasValue ?
            new ObjectParameter("RFQ_Reference", rFQ_Reference) :
            new ObjectParameter("RFQ_Reference", typeof(int));


        var owned_ByParameter = owned_By.HasValue ?
            new ObjectParameter("Owned_By", owned_By) :
            new ObjectParameter("Owned_By", typeof(int));


        var copySuppliersParameter = copySuppliers.HasValue ?
            new ObjectParameter("CopySuppliers", copySuppliers) :
            new ObjectParameter("CopySuppliers", typeof(bool));


        var copyItemsParameter = copyItems.HasValue ?
            new ObjectParameter("CopyItems", copyItems) :
            new ObjectParameter("CopyItems", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CopyRFQ", rFQ_ReferenceParameter, owned_ByParameter, copySuppliersParameter, copyItemsParameter);
    }


    public virtual ObjectResult<string> CopyToReworkWO(Nullable<int> wOrder_Reference, Nullable<int> batch_Reference, Nullable<double> reworkQty, Nullable<bool> copyOps, Nullable<bool> copyMaterials, Nullable<bool> copyParts, Nullable<bool> copySubcon, Nullable<bool> copyTooling, Nullable<int> created_By, Nullable<bool> reserve, ObjectParameter out_Reserve_WOPart_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var reworkQtyParameter = reworkQty.HasValue ?
            new ObjectParameter("ReworkQty", reworkQty) :
            new ObjectParameter("ReworkQty", typeof(double));


        var copyOpsParameter = copyOps.HasValue ?
            new ObjectParameter("CopyOps", copyOps) :
            new ObjectParameter("CopyOps", typeof(bool));


        var copyMaterialsParameter = copyMaterials.HasValue ?
            new ObjectParameter("CopyMaterials", copyMaterials) :
            new ObjectParameter("CopyMaterials", typeof(bool));


        var copyPartsParameter = copyParts.HasValue ?
            new ObjectParameter("CopyParts", copyParts) :
            new ObjectParameter("CopyParts", typeof(bool));


        var copySubconParameter = copySubcon.HasValue ?
            new ObjectParameter("CopySubcon", copySubcon) :
            new ObjectParameter("CopySubcon", typeof(bool));


        var copyToolingParameter = copyTooling.HasValue ?
            new ObjectParameter("CopyTooling", copyTooling) :
            new ObjectParameter("CopyTooling", typeof(bool));


        var created_ByParameter = created_By.HasValue ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(int));


        var reserveParameter = reserve.HasValue ?
            new ObjectParameter("Reserve", reserve) :
            new ObjectParameter("Reserve", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CopyToReworkWO", wOrder_ReferenceParameter, batch_ReferenceParameter, reworkQtyParameter, copyOpsParameter, copyMaterialsParameter, copyPartsParameter, copySubconParameter, copyToolingParameter, created_ByParameter, reserveParameter, out_Reserve_WOPart_Reference);
    }


    public virtual ObjectResult<string> CopyWOrderAdvanced(Nullable<int> wOrderRefToCopy, Nullable<int> sequence, string user_Reference, string status, Nullable<bool> main, Nullable<bool> copy_Components, Nullable<double> quantity, Nullable<double> quantity_To_Build, Nullable<bool> explode, Nullable<bool> doneLevelZero, Nullable<int> levelZeroRef, Nullable<int> user_id, Nullable<bool> locked, string contract_Number, Nullable<System.DateTime> prepared, string description, string customer_Order_Number, string customer_Order_Item, string nominal_Code, Nullable<int> location_Reference, Nullable<int> customer_Reference, Nullable<int> contact_Reference, Nullable<System.DateTime> delivery, Nullable<double> exchange_Rate, Nullable<decimal> price, string order_Type_Code, Nullable<bool> copyOps, Nullable<bool> copyMaterials, Nullable<bool> copyParts, Nullable<bool> copySubcon, Nullable<bool> copyTooling, ObjectParameter next_Sequence, Nullable<int> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var sequenceParameter = sequence.HasValue ?
            new ObjectParameter("Sequence", sequence) :
            new ObjectParameter("Sequence", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        var mainParameter = main.HasValue ?
            new ObjectParameter("Main", main) :
            new ObjectParameter("Main", typeof(bool));


        var copy_ComponentsParameter = copy_Components.HasValue ?
            new ObjectParameter("Copy_Components", copy_Components) :
            new ObjectParameter("Copy_Components", typeof(bool));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var quantity_To_BuildParameter = quantity_To_Build.HasValue ?
            new ObjectParameter("Quantity_To_Build", quantity_To_Build) :
            new ObjectParameter("Quantity_To_Build", typeof(double));


        var explodeParameter = explode.HasValue ?
            new ObjectParameter("Explode", explode) :
            new ObjectParameter("Explode", typeof(bool));


        var doneLevelZeroParameter = doneLevelZero.HasValue ?
            new ObjectParameter("DoneLevelZero", doneLevelZero) :
            new ObjectParameter("DoneLevelZero", typeof(bool));


        var levelZeroRefParameter = levelZeroRef.HasValue ?
            new ObjectParameter("LevelZeroRef", levelZeroRef) :
            new ObjectParameter("LevelZeroRef", typeof(int));


        var user_idParameter = user_id.HasValue ?
            new ObjectParameter("User_id", user_id) :
            new ObjectParameter("User_id", typeof(int));


        var lockedParameter = locked.HasValue ?
            new ObjectParameter("Locked", locked) :
            new ObjectParameter("Locked", typeof(bool));


        var contract_NumberParameter = contract_Number != null ?
            new ObjectParameter("Contract_Number", contract_Number) :
            new ObjectParameter("Contract_Number", typeof(string));


        var preparedParameter = prepared.HasValue ?
            new ObjectParameter("Prepared", prepared) :
            new ObjectParameter("Prepared", typeof(System.DateTime));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var customer_Order_NumberParameter = customer_Order_Number != null ?
            new ObjectParameter("Customer_Order_Number", customer_Order_Number) :
            new ObjectParameter("Customer_Order_Number", typeof(string));


        var customer_Order_ItemParameter = customer_Order_Item != null ?
            new ObjectParameter("Customer_Order_Item", customer_Order_Item) :
            new ObjectParameter("Customer_Order_Item", typeof(string));


        var nominal_CodeParameter = nominal_Code != null ?
            new ObjectParameter("Nominal_Code", nominal_Code) :
            new ObjectParameter("Nominal_Code", typeof(string));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        var deliveryParameter = delivery.HasValue ?
            new ObjectParameter("Delivery", delivery) :
            new ObjectParameter("Delivery", typeof(System.DateTime));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));


        var order_Type_CodeParameter = order_Type_Code != null ?
            new ObjectParameter("Order_Type_Code", order_Type_Code) :
            new ObjectParameter("Order_Type_Code", typeof(string));


        var copyOpsParameter = copyOps.HasValue ?
            new ObjectParameter("CopyOps", copyOps) :
            new ObjectParameter("CopyOps", typeof(bool));


        var copyMaterialsParameter = copyMaterials.HasValue ?
            new ObjectParameter("CopyMaterials", copyMaterials) :
            new ObjectParameter("CopyMaterials", typeof(bool));


        var copyPartsParameter = copyParts.HasValue ?
            new ObjectParameter("CopyParts", copyParts) :
            new ObjectParameter("CopyParts", typeof(bool));


        var copySubconParameter = copySubcon.HasValue ?
            new ObjectParameter("CopySubcon", copySubcon) :
            new ObjectParameter("CopySubcon", typeof(bool));


        var copyToolingParameter = copyTooling.HasValue ?
            new ObjectParameter("CopyTooling", copyTooling) :
            new ObjectParameter("CopyTooling", typeof(bool));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CopyWOrderAdvanced", wOrderRefToCopyParameter, sequenceParameter, user_ReferenceParameter, statusParameter, mainParameter, copy_ComponentsParameter, quantityParameter, quantity_To_BuildParameter, explodeParameter, doneLevelZeroParameter, levelZeroRefParameter, user_idParameter, lockedParameter, contract_NumberParameter, preparedParameter, descriptionParameter, customer_Order_NumberParameter, customer_Order_ItemParameter, nominal_CodeParameter, location_ReferenceParameter, customer_ReferenceParameter, contact_ReferenceParameter, deliveryParameter, exchange_RateParameter, priceParameter, order_Type_CodeParameter, copyOpsParameter, copyMaterialsParameter, copyPartsParameter, copySubconParameter, copyToolingParameter, next_Sequence, copyDocsParameter);
    }


    public virtual int Create_BatchTrace(Nullable<int> batch_Reference, Nullable<int> replaceIfExists, ObjectParameter success, ObjectParameter message)
    {

        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var replaceIfExistsParameter = replaceIfExists.HasValue ?
            new ObjectParameter("ReplaceIfExists", replaceIfExists) :
            new ObjectParameter("ReplaceIfExists", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_BatchTrace", batch_ReferenceParameter, replaceIfExistsParameter, success, message);
    }


    public virtual int Create_CP_Calendar(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_CP_Calendar", success);
    }


    public virtual int Create_CP_Daily(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_CP_Daily", success);
    }


    public virtual int Create_CP_Daily_Sparkbar(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_CP_Daily_Sparkbar", success);
    }


    public virtual int Create_CP_Weekly(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_CP_Weekly", success);
    }


    public virtual int Create_CP_Weekly_Sparkbar(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_CP_Weekly_Sparkbar", success);
    }


    public virtual int Create_Event_Log(string module, string event_Type, Nullable<int> employee_Reference, string entity_Type, Nullable<int> entity_Reference, string message, ObjectParameter log_Reference)
    {

        var moduleParameter = module != null ?
            new ObjectParameter("Module", module) :
            new ObjectParameter("Module", typeof(string));


        var event_TypeParameter = event_Type != null ?
            new ObjectParameter("Event_Type", event_Type) :
            new ObjectParameter("Event_Type", typeof(string));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var entity_TypeParameter = entity_Type != null ?
            new ObjectParameter("Entity_Type", entity_Type) :
            new ObjectParameter("Entity_Type", typeof(string));


        var entity_ReferenceParameter = entity_Reference.HasValue ?
            new ObjectParameter("Entity_Reference", entity_Reference) :
            new ObjectParameter("Entity_Reference", typeof(int));


        var messageParameter = message != null ?
            new ObjectParameter("Message", message) :
            new ObjectParameter("Message", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Event_Log", moduleParameter, event_TypeParameter, employee_ReferenceParameter, entity_TypeParameter, entity_ReferenceParameter, messageParameter, log_Reference);
    }


    public virtual int Create_Notification(string entity_Type, Nullable<int> entity_Reference, string notification_Type, string description, string notification_Definition, Nullable<int> for_Role, Nullable<int> for_Employee, string status, ObjectParameter notification_Reference, ObjectParameter success)
    {

        var entity_TypeParameter = entity_Type != null ?
            new ObjectParameter("Entity_Type", entity_Type) :
            new ObjectParameter("Entity_Type", typeof(string));


        var entity_ReferenceParameter = entity_Reference.HasValue ?
            new ObjectParameter("Entity_Reference", entity_Reference) :
            new ObjectParameter("Entity_Reference", typeof(int));


        var notification_TypeParameter = notification_Type != null ?
            new ObjectParameter("Notification_Type", notification_Type) :
            new ObjectParameter("Notification_Type", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var notification_DefinitionParameter = notification_Definition != null ?
            new ObjectParameter("Notification_Definition", notification_Definition) :
            new ObjectParameter("Notification_Definition", typeof(string));


        var for_RoleParameter = for_Role.HasValue ?
            new ObjectParameter("For_Role", for_Role) :
            new ObjectParameter("For_Role", typeof(int));


        var for_EmployeeParameter = for_Employee.HasValue ?
            new ObjectParameter("For_Employee", for_Employee) :
            new ObjectParameter("For_Employee", typeof(int));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Notification", entity_TypeParameter, entity_ReferenceParameter, notification_TypeParameter, descriptionParameter, notification_DefinitionParameter, for_RoleParameter, for_EmployeeParameter, statusParameter, notification_Reference, success);
    }


    public virtual int Create_Plan_Snapshot(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Plan_Snapshot", success);
    }


    public virtual int Create_Snapshot_And_CP(ObjectParameter success)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_Snapshot_And_CP", success);
    }


    public virtual ObjectResult<string> CreateBatch(string source, Nullable<int> source_Ref, Nullable<System.DateTime> deliveryDate, Nullable<int> wOrder_Reference)
    {

        var sourceParameter = source != null ?
            new ObjectParameter("Source", source) :
            new ObjectParameter("Source", typeof(string));


        var source_RefParameter = source_Ref.HasValue ?
            new ObjectParameter("Source_Ref", source_Ref) :
            new ObjectParameter("Source_Ref", typeof(int));


        var deliveryDateParameter = deliveryDate.HasValue ?
            new ObjectParameter("DeliveryDate", deliveryDate) :
            new ObjectParameter("DeliveryDate", typeof(System.DateTime));


        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateBatch", sourceParameter, source_RefParameter, deliveryDateParameter, wOrder_ReferenceParameter);
    }


    public virtual ObjectResult<string> CreateRebuildWO(Nullable<int> wOrder_Reference, Nullable<int> batch_Reference, Nullable<double> rebuildQty, Nullable<bool> copyOps, Nullable<bool> copyMaterials, Nullable<bool> copyParts, Nullable<bool> copySubcon, Nullable<bool> copyTooling, Nullable<int> created_By, Nullable<bool> fOC)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var rebuildQtyParameter = rebuildQty.HasValue ?
            new ObjectParameter("RebuildQty", rebuildQty) :
            new ObjectParameter("RebuildQty", typeof(double));


        var copyOpsParameter = copyOps.HasValue ?
            new ObjectParameter("CopyOps", copyOps) :
            new ObjectParameter("CopyOps", typeof(bool));


        var copyMaterialsParameter = copyMaterials.HasValue ?
            new ObjectParameter("CopyMaterials", copyMaterials) :
            new ObjectParameter("CopyMaterials", typeof(bool));


        var copyPartsParameter = copyParts.HasValue ?
            new ObjectParameter("CopyParts", copyParts) :
            new ObjectParameter("CopyParts", typeof(bool));


        var copySubconParameter = copySubcon.HasValue ?
            new ObjectParameter("CopySubcon", copySubcon) :
            new ObjectParameter("CopySubcon", typeof(bool));


        var copyToolingParameter = copyTooling.HasValue ?
            new ObjectParameter("CopyTooling", copyTooling) :
            new ObjectParameter("CopyTooling", typeof(bool));


        var created_ByParameter = created_By.HasValue ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(int));


        var fOCParameter = fOC.HasValue ?
            new ObjectParameter("FOC", fOC) :
            new ObjectParameter("FOC", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateRebuildWO", wOrder_ReferenceParameter, batch_ReferenceParameter, rebuildQtyParameter, copyOpsParameter, copyMaterialsParameter, copyPartsParameter, copySubconParameter, copyToolingParameter, created_ByParameter, fOCParameter);
    }


    public virtual int CreateRevisionRecord1(string order_Type, string record_Type, Nullable<int> order_Reference, Nullable<int> item_Reference, Nullable<int> employee_Reference, string contact_Name, Nullable<System.DateTime> ack_Date, Nullable<System.DateTime> promise_Date, string comment, Nullable<int> revision, Nullable<System.DateTime> revision_Date, Nullable<bool> acknowledged, ObjectParameter success)
    {

        var order_TypeParameter = order_Type != null ?
            new ObjectParameter("Order_Type", order_Type) :
            new ObjectParameter("Order_Type", typeof(string));


        var record_TypeParameter = record_Type != null ?
            new ObjectParameter("Record_Type", record_Type) :
            new ObjectParameter("Record_Type", typeof(string));


        var order_ReferenceParameter = order_Reference.HasValue ?
            new ObjectParameter("Order_Reference", order_Reference) :
            new ObjectParameter("Order_Reference", typeof(int));


        var item_ReferenceParameter = item_Reference.HasValue ?
            new ObjectParameter("Item_Reference", item_Reference) :
            new ObjectParameter("Item_Reference", typeof(int));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var contact_NameParameter = contact_Name != null ?
            new ObjectParameter("Contact_Name", contact_Name) :
            new ObjectParameter("Contact_Name", typeof(string));


        var ack_DateParameter = ack_Date.HasValue ?
            new ObjectParameter("Ack_Date", ack_Date) :
            new ObjectParameter("Ack_Date", typeof(System.DateTime));


        var promise_DateParameter = promise_Date.HasValue ?
            new ObjectParameter("Promise_Date", promise_Date) :
            new ObjectParameter("Promise_Date", typeof(System.DateTime));


        var commentParameter = comment != null ?
            new ObjectParameter("Comment", comment) :
            new ObjectParameter("Comment", typeof(string));


        var revisionParameter = revision.HasValue ?
            new ObjectParameter("Revision", revision) :
            new ObjectParameter("Revision", typeof(int));


        var revision_DateParameter = revision_Date.HasValue ?
            new ObjectParameter("Revision_Date", revision_Date) :
            new ObjectParameter("Revision_Date", typeof(System.DateTime));


        var acknowledgedParameter = acknowledged.HasValue ?
            new ObjectParameter("Acknowledged", acknowledged) :
            new ObjectParameter("Acknowledged", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateRevisionRecord1", order_TypeParameter, record_TypeParameter, order_ReferenceParameter, item_ReferenceParameter, employee_ReferenceParameter, contact_NameParameter, ack_DateParameter, promise_DateParameter, commentParameter, revisionParameter, revision_DateParameter, acknowledgedParameter, success);
    }


    public virtual ObjectResult<string> CreateRFSWO(Nullable<int> wOrder_Reference, Nullable<int> batch_Reference, Nullable<int> part_Reference, Nullable<double> replaceQty, Nullable<int> created_By, Nullable<bool> fOC)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var replaceQtyParameter = replaceQty.HasValue ?
            new ObjectParameter("ReplaceQty", replaceQty) :
            new ObjectParameter("ReplaceQty", typeof(double));


        var created_ByParameter = created_By.HasValue ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(int));


        var fOCParameter = fOC.HasValue ?
            new ObjectParameter("FOC", fOC) :
            new ObjectParameter("FOC", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CreateRFSWO", wOrder_ReferenceParameter, batch_ReferenceParameter, part_ReferenceParameter, replaceQtyParameter, created_ByParameter, fOCParameter);
    }


    public virtual int CreateWOSubContractItem(Nullable<int> parentRef, string destination, Nullable<int> subcontract_Reference, Nullable<double> qty, ObjectParameter created_Reference)
    {

        var parentRefParameter = parentRef.HasValue ?
            new ObjectParameter("ParentRef", parentRef) :
            new ObjectParameter("ParentRef", typeof(int));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        var subcontract_ReferenceParameter = subcontract_Reference.HasValue ?
            new ObjectParameter("Subcontract_Reference", subcontract_Reference) :
            new ObjectParameter("Subcontract_Reference", typeof(int));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateWOSubContractItem", parentRefParameter, destinationParameter, subcontract_ReferenceParameter, qtyParameter, created_Reference);
    }


    public virtual int Dash_CopyMonthlyTargetsForYear(string targetName, Nullable<int> fromYear, Nullable<double> toYear, Nullable<bool> financial)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var fromYearParameter = fromYear.HasValue ?
            new ObjectParameter("FromYear", fromYear) :
            new ObjectParameter("FromYear", typeof(int));


        var toYearParameter = toYear.HasValue ?
            new ObjectParameter("ToYear", toYear) :
            new ObjectParameter("ToYear", typeof(double));


        var financialParameter = financial.HasValue ?
            new ObjectParameter("Financial", financial) :
            new ObjectParameter("Financial", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_CopyMonthlyTargetsForYear", targetNameParameter, fromYearParameter, toYearParameter, financialParameter);
    }


    public virtual int Dash_CopyWeeklyTargetsForYear(string targetName, Nullable<int> fromYear, Nullable<double> toYear, Nullable<bool> financial)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var fromYearParameter = fromYear.HasValue ?
            new ObjectParameter("FromYear", fromYear) :
            new ObjectParameter("FromYear", typeof(int));


        var toYearParameter = toYear.HasValue ?
            new ObjectParameter("ToYear", toYear) :
            new ObjectParameter("ToYear", typeof(double));


        var financialParameter = financial.HasValue ?
            new ObjectParameter("Financial", financial) :
            new ObjectParameter("Financial", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_CopyWeeklyTargetsForYear", targetNameParameter, fromYearParameter, toYearParameter, financialParameter);
    }


    public virtual int Dash_MakeDefaultFinancialYears(Nullable<int> startMonth, Nullable<decimal> salesTarget)
    {

        var startMonthParameter = startMonth.HasValue ?
            new ObjectParameter("StartMonth", startMonth) :
            new ObjectParameter("StartMonth", typeof(int));


        var salesTargetParameter = salesTarget.HasValue ?
            new ObjectParameter("SalesTarget", salesTarget) :
            new ObjectParameter("SalesTarget", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_MakeDefaultFinancialYears", startMonthParameter, salesTargetParameter);
    }


    public virtual int Dash_MakeMonthlyTargets(string targetName, Nullable<int> year, Nullable<double> defaultYearlyValue, Nullable<bool> replace)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        var defaultYearlyValueParameter = defaultYearlyValue.HasValue ?
            new ObjectParameter("DefaultYearlyValue", defaultYearlyValue) :
            new ObjectParameter("DefaultYearlyValue", typeof(double));


        var replaceParameter = replace.HasValue ?
            new ObjectParameter("Replace", replace) :
            new ObjectParameter("Replace", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_MakeMonthlyTargets", targetNameParameter, yearParameter, defaultYearlyValueParameter, replaceParameter);
    }


    public virtual int Dash_MakeWeeklyTargets(string targetName, Nullable<int> year, Nullable<double> defaultYearlyValue, Nullable<bool> replace)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        var defaultYearlyValueParameter = defaultYearlyValue.HasValue ?
            new ObjectParameter("DefaultYearlyValue", defaultYearlyValue) :
            new ObjectParameter("DefaultYearlyValue", typeof(double));


        var replaceParameter = replace.HasValue ?
            new ObjectParameter("Replace", replace) :
            new ObjectParameter("Replace", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_MakeWeeklyTargets", targetNameParameter, yearParameter, defaultYearlyValueParameter, replaceParameter);
    }


    public virtual int Dash_SetAllMonthlyTargetsForYear(string targetName, Nullable<int> year, Nullable<double> defaultYearlyValue, Nullable<bool> financial)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        var defaultYearlyValueParameter = defaultYearlyValue.HasValue ?
            new ObjectParameter("DefaultYearlyValue", defaultYearlyValue) :
            new ObjectParameter("DefaultYearlyValue", typeof(double));


        var financialParameter = financial.HasValue ?
            new ObjectParameter("Financial", financial) :
            new ObjectParameter("Financial", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_SetAllMonthlyTargetsForYear", targetNameParameter, yearParameter, defaultYearlyValueParameter, financialParameter);
    }


    public virtual int Dash_SetAllWeeklyTargetsForYear(string targetName, Nullable<int> year, Nullable<double> defaultYearlyValue, Nullable<bool> financial)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        var defaultYearlyValueParameter = defaultYearlyValue.HasValue ?
            new ObjectParameter("DefaultYearlyValue", defaultYearlyValue) :
            new ObjectParameter("DefaultYearlyValue", typeof(double));


        var financialParameter = financial.HasValue ?
            new ObjectParameter("Financial", financial) :
            new ObjectParameter("Financial", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_SetAllWeeklyTargetsForYear", targetNameParameter, yearParameter, defaultYearlyValueParameter, financialParameter);
    }


    public virtual int Dash_WriteTarget(string targetName, Nullable<int> year, Nullable<int> month, Nullable<int> week, Nullable<double> value)
    {

        var targetNameParameter = targetName != null ?
            new ObjectParameter("TargetName", targetName) :
            new ObjectParameter("TargetName", typeof(string));


        var yearParameter = year.HasValue ?
            new ObjectParameter("Year", year) :
            new ObjectParameter("Year", typeof(int));


        var monthParameter = month.HasValue ?
            new ObjectParameter("Month", month) :
            new ObjectParameter("Month", typeof(int));


        var weekParameter = week.HasValue ?
            new ObjectParameter("Week", week) :
            new ObjectParameter("Week", typeof(int));


        var valueParameter = value.HasValue ?
            new ObjectParameter("Value", value) :
            new ObjectParameter("Value", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dash_WriteTarget", targetNameParameter, yearParameter, monthParameter, weekParameter, valueParameter);
    }


    public virtual int Delete_Invoice_Item(Nullable<int> invItem_Reference, Nullable<bool> flag_Batch_For_Invoice, Nullable<bool> proforma, ObjectParameter success)
    {

        var invItem_ReferenceParameter = invItem_Reference.HasValue ?
            new ObjectParameter("InvItem_Reference", invItem_Reference) :
            new ObjectParameter("InvItem_Reference", typeof(int));


        var flag_Batch_For_InvoiceParameter = flag_Batch_For_Invoice.HasValue ?
            new ObjectParameter("Flag_Batch_For_Invoice", flag_Batch_For_Invoice) :
            new ObjectParameter("Flag_Batch_For_Invoice", typeof(bool));


        var proformaParameter = proforma.HasValue ?
            new ObjectParameter("Proforma", proforma) :
            new ObjectParameter("Proforma", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_Invoice_Item", invItem_ReferenceParameter, flag_Batch_For_InvoiceParameter, proformaParameter, success);
    }


    public virtual int Dupe_WO_Batch(Nullable<int> batch_Reference, string new_User_Reference, Nullable<double> batch_Quantity, Nullable<bool> group_With_Original, ObjectParameter out_New_Batch_Reference, ObjectParameter success)
    {

        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var new_User_ReferenceParameter = new_User_Reference != null ?
            new ObjectParameter("New_User_Reference", new_User_Reference) :
            new ObjectParameter("New_User_Reference", typeof(string));


        var batch_QuantityParameter = batch_Quantity.HasValue ?
            new ObjectParameter("Batch_Quantity", batch_Quantity) :
            new ObjectParameter("Batch_Quantity", typeof(double));


        var group_With_OriginalParameter = group_With_Original.HasValue ?
            new ObjectParameter("Group_With_Original", group_With_Original) :
            new ObjectParameter("Group_With_Original", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dupe_WO_Batch", batch_ReferenceParameter, new_User_ReferenceParameter, batch_QuantityParameter, group_With_OriginalParameter, out_New_Batch_Reference, success);
    }


    public virtual int fo_GetWOComponents1(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fo_GetWOComponents1", wOrder_RefIDParameter);
    }


    public virtual int fo_InsertWOComponents1(Nullable<int> wOrder_RefID)
    {

        var wOrder_RefIDParameter = wOrder_RefID.HasValue ?
            new ObjectParameter("WOrder_RefID", wOrder_RefID) :
            new ObjectParameter("WOrder_RefID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("fo_InsertWOComponents1", wOrder_RefIDParameter);
    }


    public virtual int Get_Next_QualityNumber(string number_Type, ObjectParameter success, ObjectParameter message, ObjectParameter thePrefix, ObjectParameter theNumber, ObjectParameter theSuffix)
    {

        var number_TypeParameter = number_Type != null ?
            new ObjectParameter("Number_Type", number_Type) :
            new ObjectParameter("Number_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Next_QualityNumber", number_TypeParameter, success, message, thePrefix, theNumber, theSuffix);
    }


    public virtual int Get_Next_WO_UR(string order_Type_Code, Nullable<bool> template, ObjectParameter out_UR)
    {

        var order_Type_CodeParameter = order_Type_Code != null ?
            new ObjectParameter("Order_Type_Code", order_Type_Code) :
            new ObjectParameter("Order_Type_Code", typeof(string));


        var templateParameter = template.HasValue ?
            new ObjectParameter("Template", template) :
            new ObjectParameter("Template", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Get_Next_WO_UR", order_Type_CodeParameter, templateParameter, out_UR);
    }


    public virtual ObjectResult<Nullable<int>> GetNextIntParam(string paramName, ObjectParameter value)
    {

        var paramNameParameter = paramName != null ?
            new ObjectParameter("ParamName", paramName) :
            new ObjectParameter("ParamName", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNextIntParam", paramNameParameter, value);
    }


    public virtual int IncrementDates(Nullable<int> newdate)
    {

        var newdateParameter = newdate.HasValue ?
            new ObjectParameter("Newdate", newdate) :
            new ObjectParameter("Newdate", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IncrementDates", newdateParameter);
    }


    public virtual int InsertNewWOPartItem(Nullable<int> wOrder_Reference, Nullable<int> part_Reference, Nullable<double> quantity_Reqd)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var quantity_ReqdParameter = quantity_Reqd.HasValue ?
            new ObjectParameter("Quantity_Reqd", quantity_Reqd) :
            new ObjectParameter("Quantity_Reqd", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNewWOPartItem", wOrder_ReferenceParameter, part_ReferenceParameter, quantity_ReqdParameter);
    }


    public virtual int InsertQuote(Nullable<int> template_Quote_Reference, string user_Reference, Nullable<int> employee_Ref, string formMode, string status, Nullable<System.DateTime> prepared, string group_Reference, Nullable<int> customer_Reference, Nullable<int> location_Reference, Nullable<int> contact_Reference, string customer_Enquiry_Number, string part_Number, string part_Issue, string drawing_Number, string drawing_Issue, Nullable<int> part_Reference, Nullable<bool> main, string description, string lead_Time, Nullable<double> quantity, Nullable<double> order_Quantity, Nullable<System.DateTime> delivery, Nullable<decimal> price, Nullable<double> exchange_Rate, ObjectParameter out_Quote_Reference, ObjectParameter out_User_Reference, ObjectParameter success, Nullable<int> copyDocs)
    {

        var template_Quote_ReferenceParameter = template_Quote_Reference.HasValue ?
            new ObjectParameter("Template_Quote_Reference", template_Quote_Reference) :
            new ObjectParameter("Template_Quote_Reference", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var employee_RefParameter = employee_Ref.HasValue ?
            new ObjectParameter("Employee_Ref", employee_Ref) :
            new ObjectParameter("Employee_Ref", typeof(int));


        var formModeParameter = formMode != null ?
            new ObjectParameter("FormMode", formMode) :
            new ObjectParameter("FormMode", typeof(string));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        var preparedParameter = prepared.HasValue ?
            new ObjectParameter("Prepared", prepared) :
            new ObjectParameter("Prepared", typeof(System.DateTime));


        var group_ReferenceParameter = group_Reference != null ?
            new ObjectParameter("Group_Reference", group_Reference) :
            new ObjectParameter("Group_Reference", typeof(string));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        var customer_Enquiry_NumberParameter = customer_Enquiry_Number != null ?
            new ObjectParameter("Customer_Enquiry_Number", customer_Enquiry_Number) :
            new ObjectParameter("Customer_Enquiry_Number", typeof(string));


        var part_NumberParameter = part_Number != null ?
            new ObjectParameter("Part_Number", part_Number) :
            new ObjectParameter("Part_Number", typeof(string));


        var part_IssueParameter = part_Issue != null ?
            new ObjectParameter("Part_Issue", part_Issue) :
            new ObjectParameter("Part_Issue", typeof(string));


        var drawing_NumberParameter = drawing_Number != null ?
            new ObjectParameter("Drawing_Number", drawing_Number) :
            new ObjectParameter("Drawing_Number", typeof(string));


        var drawing_IssueParameter = drawing_Issue != null ?
            new ObjectParameter("Drawing_Issue", drawing_Issue) :
            new ObjectParameter("Drawing_Issue", typeof(string));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var mainParameter = main.HasValue ?
            new ObjectParameter("Main", main) :
            new ObjectParameter("Main", typeof(bool));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var lead_TimeParameter = lead_Time != null ?
            new ObjectParameter("Lead_Time", lead_Time) :
            new ObjectParameter("Lead_Time", typeof(string));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var order_QuantityParameter = order_Quantity.HasValue ?
            new ObjectParameter("Order_Quantity", order_Quantity) :
            new ObjectParameter("Order_Quantity", typeof(double));


        var deliveryParameter = delivery.HasValue ?
            new ObjectParameter("Delivery", delivery) :
            new ObjectParameter("Delivery", typeof(System.DateTime));


        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertQuote", template_Quote_ReferenceParameter, user_ReferenceParameter, employee_RefParameter, formModeParameter, statusParameter, preparedParameter, group_ReferenceParameter, customer_ReferenceParameter, location_ReferenceParameter, contact_ReferenceParameter, customer_Enquiry_NumberParameter, part_NumberParameter, part_IssueParameter, drawing_NumberParameter, drawing_IssueParameter, part_ReferenceParameter, mainParameter, descriptionParameter, lead_TimeParameter, quantityParameter, order_QuantityParameter, deliveryParameter, priceParameter, exchange_RateParameter, out_Quote_Reference, out_User_Reference, success, copyDocsParameter);
    }


    public virtual ObjectResult<string> InsertWOrder(Nullable<int> template_WOrder_Reference, string user_Reference, Nullable<int> employee_Ref, string formMode, string status, string contract_Number, Nullable<System.DateTime> prepared, string part_Number, string part_Issue, string drawing_Number, string drawing_Issue, Nullable<int> part_Reference, Nullable<bool> main, string description, Nullable<double> quantity_To_Build, Nullable<double> quantity, string customer_Order_Number, string customer_Order_Item, string nominal_Code, Nullable<int> location_Reference, Nullable<int> customer_Reference, Nullable<int> contact_Reference, Nullable<System.DateTime> delivery, Nullable<double> exchange_Rate, Nullable<int> use_Part_Reference, string order_Type_Code, Nullable<int> reworking_WOrder_Reference, Nullable<decimal> price, ObjectParameter out_WOrder_Reference, ObjectParameter out_User_Reference, ObjectParameter success, Nullable<int> copyDocs)
    {

        var template_WOrder_ReferenceParameter = template_WOrder_Reference.HasValue ?
            new ObjectParameter("Template_WOrder_Reference", template_WOrder_Reference) :
            new ObjectParameter("Template_WOrder_Reference", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var employee_RefParameter = employee_Ref.HasValue ?
            new ObjectParameter("Employee_Ref", employee_Ref) :
            new ObjectParameter("Employee_Ref", typeof(int));


        var formModeParameter = formMode != null ?
            new ObjectParameter("FormMode", formMode) :
            new ObjectParameter("FormMode", typeof(string));


        var statusParameter = status != null ?
            new ObjectParameter("Status", status) :
            new ObjectParameter("Status", typeof(string));


        var contract_NumberParameter = contract_Number != null ?
            new ObjectParameter("Contract_Number", contract_Number) :
            new ObjectParameter("Contract_Number", typeof(string));


        var preparedParameter = prepared.HasValue ?
            new ObjectParameter("Prepared", prepared) :
            new ObjectParameter("Prepared", typeof(System.DateTime));


        var part_NumberParameter = part_Number != null ?
            new ObjectParameter("Part_Number", part_Number) :
            new ObjectParameter("Part_Number", typeof(string));


        var part_IssueParameter = part_Issue != null ?
            new ObjectParameter("Part_Issue", part_Issue) :
            new ObjectParameter("Part_Issue", typeof(string));


        var drawing_NumberParameter = drawing_Number != null ?
            new ObjectParameter("Drawing_Number", drawing_Number) :
            new ObjectParameter("Drawing_Number", typeof(string));


        var drawing_IssueParameter = drawing_Issue != null ?
            new ObjectParameter("Drawing_Issue", drawing_Issue) :
            new ObjectParameter("Drawing_Issue", typeof(string));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var mainParameter = main.HasValue ?
            new ObjectParameter("Main", main) :
            new ObjectParameter("Main", typeof(bool));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var quantity_To_BuildParameter = quantity_To_Build.HasValue ?
            new ObjectParameter("Quantity_To_Build", quantity_To_Build) :
            new ObjectParameter("Quantity_To_Build", typeof(double));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var customer_Order_NumberParameter = customer_Order_Number != null ?
            new ObjectParameter("Customer_Order_Number", customer_Order_Number) :
            new ObjectParameter("Customer_Order_Number", typeof(string));


        var customer_Order_ItemParameter = customer_Order_Item != null ?
            new ObjectParameter("Customer_Order_Item", customer_Order_Item) :
            new ObjectParameter("Customer_Order_Item", typeof(string));


        var nominal_CodeParameter = nominal_Code != null ?
            new ObjectParameter("Nominal_Code", nominal_Code) :
            new ObjectParameter("Nominal_Code", typeof(string));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        var deliveryParameter = delivery.HasValue ?
            new ObjectParameter("Delivery", delivery) :
            new ObjectParameter("Delivery", typeof(System.DateTime));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var use_Part_ReferenceParameter = use_Part_Reference.HasValue ?
            new ObjectParameter("Use_Part_Reference", use_Part_Reference) :
            new ObjectParameter("Use_Part_Reference", typeof(int));


        var order_Type_CodeParameter = order_Type_Code != null ?
            new ObjectParameter("Order_Type_Code", order_Type_Code) :
            new ObjectParameter("Order_Type_Code", typeof(string));


        var reworking_WOrder_ReferenceParameter = reworking_WOrder_Reference.HasValue ?
            new ObjectParameter("Reworking_WOrder_Reference", reworking_WOrder_Reference) :
            new ObjectParameter("Reworking_WOrder_Reference", typeof(int));


        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(decimal));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertWOrder", template_WOrder_ReferenceParameter, user_ReferenceParameter, employee_RefParameter, formModeParameter, statusParameter, contract_NumberParameter, preparedParameter, part_NumberParameter, part_IssueParameter, drawing_NumberParameter, drawing_IssueParameter, part_ReferenceParameter, mainParameter, descriptionParameter, quantity_To_BuildParameter, quantityParameter, customer_Order_NumberParameter, customer_Order_ItemParameter, nominal_CodeParameter, location_ReferenceParameter, customer_ReferenceParameter, contact_ReferenceParameter, deliveryParameter, exchange_RateParameter, use_Part_ReferenceParameter, order_Type_CodeParameter, reworking_WOrder_ReferenceParameter, priceParameter, out_WOrder_Reference, out_User_Reference, success, copyDocsParameter);
    }


    public virtual ObjectResult<Nullable<int>> JD_CreateSplitOp1(Nullable<int> wOWCentreRefToCopy, ObjectParameter newWOWCentreRef, Nullable<int> wCentreRef, Nullable<double> qty, string opName, Nullable<int> setting_Time_ms, Nullable<int> run_Time_ms, Nullable<decimal> overlapPerc, Nullable<decimal> overlap)
    {

        var wOWCentreRefToCopyParameter = wOWCentreRefToCopy.HasValue ?
            new ObjectParameter("WOWCentreRefToCopy", wOWCentreRefToCopy) :
            new ObjectParameter("WOWCentreRefToCopy", typeof(int));


        var wCentreRefParameter = wCentreRef.HasValue ?
            new ObjectParameter("WCentreRef", wCentreRef) :
            new ObjectParameter("WCentreRef", typeof(int));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var opNameParameter = opName != null ?
            new ObjectParameter("OpName", opName) :
            new ObjectParameter("OpName", typeof(string));


        var setting_Time_msParameter = setting_Time_ms.HasValue ?
            new ObjectParameter("Setting_Time_ms", setting_Time_ms) :
            new ObjectParameter("Setting_Time_ms", typeof(int));


        var run_Time_msParameter = run_Time_ms.HasValue ?
            new ObjectParameter("Run_Time_ms", run_Time_ms) :
            new ObjectParameter("Run_Time_ms", typeof(int));


        var overlapPercParameter = overlapPerc.HasValue ?
            new ObjectParameter("OverlapPerc", overlapPerc) :
            new ObjectParameter("OverlapPerc", typeof(decimal));


        var overlapParameter = overlap.HasValue ?
            new ObjectParameter("Overlap", overlap) :
            new ObjectParameter("Overlap", typeof(decimal));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("JD_CreateSplitOp1", wOWCentreRefToCopyParameter, newWOWCentreRef, wCentreRefParameter, qtyParameter, opNameParameter, setting_Time_msParameter, run_Time_msParameter, overlapPercParameter, overlapParameter);
    }


    public virtual int JD_DeleteJoinedOp1(Nullable<int> wOWCentreRefToDelete)
    {

        var wOWCentreRefToDeleteParameter = wOWCentreRefToDelete.HasValue ?
            new ObjectParameter("WOWCentreRefToDelete", wOWCentreRefToDelete) :
            new ObjectParameter("WOWCentreRefToDelete", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_DeleteJoinedOp1", wOWCentreRefToDeleteParameter);
    }


    public virtual int JD_JoinedSplitOp1(Nullable<int> wOWCentreRefJoined)
    {

        var wOWCentreRefJoinedParameter = wOWCentreRefJoined.HasValue ?
            new ObjectParameter("WOWCentreRefJoined", wOWCentreRefJoined) :
            new ObjectParameter("WOWCentreRefJoined", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_JoinedSplitOp1", wOWCentreRefJoinedParameter);
    }


    public virtual int JD_OpWasSplit1(Nullable<int> wOWCentreRefSplit)
    {

        var wOWCentreRefSplitParameter = wOWCentreRefSplit.HasValue ?
            new ObjectParameter("WOWCentreRefSplit", wOWCentreRefSplit) :
            new ObjectParameter("WOWCentreRefSplit", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_OpWasSplit1", wOWCentreRefSplitParameter);
    }


    public virtual int JD_SaveComplete()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("JD_SaveComplete");
    }


    public virtual ObjectResult<string> JD_UpdateOpTime1(Nullable<int> wOWCentre_Reference, string timeType, Nullable<long> time_ms, ObjectParameter success)
    {

        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        var timeTypeParameter = timeType != null ?
            new ObjectParameter("TimeType", timeType) :
            new ObjectParameter("TimeType", typeof(string));


        var time_msParameter = time_ms.HasValue ?
            new ObjectParameter("Time_ms", time_ms) :
            new ObjectParameter("Time_ms", typeof(long));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("JD_UpdateOpTime1", wOWCentre_ReferenceParameter, timeTypeParameter, time_msParameter, success);
    }


    public virtual int MakeBasePriceListItem(Nullable<int> part_Reference)
    {

        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakeBasePriceListItem", part_ReferenceParameter);
    }


    public virtual int ReIndexUDFZone(string zone)
    {

        var zoneParameter = zone != null ?
            new ObjectParameter("Zone", zone) :
            new ObjectParameter("Zone", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReIndexUDFZone", zoneParameter);
    }


    public virtual int Reserve_From_RW_Batch(Nullable<int> this_Batch_Reference, Nullable<int> rWWO_Batch_Reference, Nullable<int> wOPart_Reference, ObjectParameter success)
    {

        var this_Batch_ReferenceParameter = this_Batch_Reference.HasValue ?
            new ObjectParameter("This_Batch_Reference", this_Batch_Reference) :
            new ObjectParameter("This_Batch_Reference", typeof(int));


        var rWWO_Batch_ReferenceParameter = rWWO_Batch_Reference.HasValue ?
            new ObjectParameter("RWWO_Batch_Reference", rWWO_Batch_Reference) :
            new ObjectParameter("RWWO_Batch_Reference", typeof(int));


        var wOPart_ReferenceParameter = wOPart_Reference.HasValue ?
            new ObjectParameter("WOPart_Reference", wOPart_Reference) :
            new ObjectParameter("WOPart_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Reserve_From_RW_Batch", this_Batch_ReferenceParameter, rWWO_Batch_ReferenceParameter, wOPart_ReferenceParameter, success);
    }


    public virtual int SaveRB_Field(string table_Name, string field_Name, string field_Alias, string data_Type)
    {

        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var field_AliasParameter = field_Alias != null ?
            new ObjectParameter("Field_Alias", field_Alias) :
            new ObjectParameter("Field_Alias", typeof(string));


        var data_TypeParameter = data_Type != null ?
            new ObjectParameter("Data_Type", data_Type) :
            new ObjectParameter("Data_Type", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveRB_Field", table_NameParameter, field_NameParameter, field_AliasParameter, data_TypeParameter);
    }


    public virtual ObjectResult<Nullable<int>> SaveUDF(string table_Name, string field_Name, string label_Caption, string field_Type, string field_Choices, string zone, Nullable<int> colIndex, Nullable<int> rowIndex, Nullable<bool> divider, Nullable<bool> active, Nullable<bool> halfWidth, Nullable<int> controlUsesPC, Nullable<bool> controlLeftAlignMiddle, string comments_Field_Name, Nullable<int> tED_Table_Reference, ObjectParameter iD)
    {

        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var field_NameParameter = field_Name != null ?
            new ObjectParameter("Field_Name", field_Name) :
            new ObjectParameter("Field_Name", typeof(string));


        var label_CaptionParameter = label_Caption != null ?
            new ObjectParameter("Label_Caption", label_Caption) :
            new ObjectParameter("Label_Caption", typeof(string));


        var field_TypeParameter = field_Type != null ?
            new ObjectParameter("Field_Type", field_Type) :
            new ObjectParameter("Field_Type", typeof(string));


        var field_ChoicesParameter = field_Choices != null ?
            new ObjectParameter("Field_Choices", field_Choices) :
            new ObjectParameter("Field_Choices", typeof(string));


        var zoneParameter = zone != null ?
            new ObjectParameter("Zone", zone) :
            new ObjectParameter("Zone", typeof(string));


        var colIndexParameter = colIndex.HasValue ?
            new ObjectParameter("ColIndex", colIndex) :
            new ObjectParameter("ColIndex", typeof(int));


        var rowIndexParameter = rowIndex.HasValue ?
            new ObjectParameter("RowIndex", rowIndex) :
            new ObjectParameter("RowIndex", typeof(int));


        var dividerParameter = divider.HasValue ?
            new ObjectParameter("Divider", divider) :
            new ObjectParameter("Divider", typeof(bool));


        var activeParameter = active.HasValue ?
            new ObjectParameter("Active", active) :
            new ObjectParameter("Active", typeof(bool));


        var halfWidthParameter = halfWidth.HasValue ?
            new ObjectParameter("HalfWidth", halfWidth) :
            new ObjectParameter("HalfWidth", typeof(bool));


        var controlUsesPCParameter = controlUsesPC.HasValue ?
            new ObjectParameter("ControlUsesPC", controlUsesPC) :
            new ObjectParameter("ControlUsesPC", typeof(int));


        var controlLeftAlignMiddleParameter = controlLeftAlignMiddle.HasValue ?
            new ObjectParameter("ControlLeftAlignMiddle", controlLeftAlignMiddle) :
            new ObjectParameter("ControlLeftAlignMiddle", typeof(bool));


        var comments_Field_NameParameter = comments_Field_Name != null ?
            new ObjectParameter("Comments_Field_Name", comments_Field_Name) :
            new ObjectParameter("Comments_Field_Name", typeof(string));


        var tED_Table_ReferenceParameter = tED_Table_Reference.HasValue ?
            new ObjectParameter("TED_Table_Reference", tED_Table_Reference) :
            new ObjectParameter("TED_Table_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveUDF", table_NameParameter, field_NameParameter, label_CaptionParameter, field_TypeParameter, field_ChoicesParameter, zoneParameter, colIndexParameter, rowIndexParameter, dividerParameter, activeParameter, halfWidthParameter, controlUsesPCParameter, controlLeftAlignMiddleParameter, comments_Field_NameParameter, tED_Table_ReferenceParameter, iD);
    }


    public virtual ObjectResult<Nullable<int>> SaveUDFZone(string zone_Name, string h1, Nullable<bool> h1Enabled, string h2, Nullable<bool> h2Enabled, Nullable<int> columnCount, Nullable<int> panelColour, Nullable<int> parent_Zone_Reference, Nullable<int> rowIndex, Nullable<bool> entity_Info, ObjectParameter zone_Reference)
    {

        var zone_NameParameter = zone_Name != null ?
            new ObjectParameter("Zone_Name", zone_Name) :
            new ObjectParameter("Zone_Name", typeof(string));


        var h1Parameter = h1 != null ?
            new ObjectParameter("H1", h1) :
            new ObjectParameter("H1", typeof(string));


        var h1EnabledParameter = h1Enabled.HasValue ?
            new ObjectParameter("H1Enabled", h1Enabled) :
            new ObjectParameter("H1Enabled", typeof(bool));


        var h2Parameter = h2 != null ?
            new ObjectParameter("H2", h2) :
            new ObjectParameter("H2", typeof(string));


        var h2EnabledParameter = h2Enabled.HasValue ?
            new ObjectParameter("H2Enabled", h2Enabled) :
            new ObjectParameter("H2Enabled", typeof(bool));


        var columnCountParameter = columnCount.HasValue ?
            new ObjectParameter("ColumnCount", columnCount) :
            new ObjectParameter("ColumnCount", typeof(int));


        var panelColourParameter = panelColour.HasValue ?
            new ObjectParameter("PanelColour", panelColour) :
            new ObjectParameter("PanelColour", typeof(int));


        var parent_Zone_ReferenceParameter = parent_Zone_Reference.HasValue ?
            new ObjectParameter("Parent_Zone_Reference", parent_Zone_Reference) :
            new ObjectParameter("Parent_Zone_Reference", typeof(int));


        var rowIndexParameter = rowIndex.HasValue ?
            new ObjectParameter("RowIndex", rowIndex) :
            new ObjectParameter("RowIndex", typeof(int));


        var entity_InfoParameter = entity_Info.HasValue ?
            new ObjectParameter("Entity_Info", entity_Info) :
            new ObjectParameter("Entity_Info", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveUDFZone", zone_NameParameter, h1Parameter, h1EnabledParameter, h2Parameter, h2EnabledParameter, columnCountParameter, panelColourParameter, parent_Zone_ReferenceParameter, rowIndexParameter, entity_InfoParameter, zone_Reference);
    }


    public virtual int SequenceOpsByOpNo(Nullable<int> wOrder_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SequenceOpsByOpNo", wOrder_ReferenceParameter);
    }


    public virtual int Set_WO_Date_To_First_Open_Batch(Nullable<int> wOrder_Reference, ObjectParameter batch_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Set_WO_Date_To_First_Open_Batch", wOrder_ReferenceParameter, batch_Reference);
    }


    public virtual int SetSFDCBreak(Nullable<int> employee_Reference, string mode, Nullable<bool> internal_Only)
    {

        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var internal_OnlyParameter = internal_Only.HasValue ?
            new ObjectParameter("Internal_Only", internal_Only) :
            new ObjectParameter("Internal_Only", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetSFDCBreak", employee_ReferenceParameter, modeParameter, internal_OnlyParameter);
    }


    public virtual int SFDC_MoveInspTimeToInspOp(Nullable<int> wOTimes_Reference, ObjectParameter insp_WOTimes_Reference, ObjectParameter insp_WOWCentre_Reference, ObjectParameter message)
    {

        var wOTimes_ReferenceParameter = wOTimes_Reference.HasValue ?
            new ObjectParameter("WOTimes_Reference", wOTimes_Reference) :
            new ObjectParameter("WOTimes_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFDC_MoveInspTimeToInspOp", wOTimes_ReferenceParameter, insp_WOTimes_Reference, insp_WOWCentre_Reference, message);
    }


    public virtual int SFDC_Recalc_Op_Totals(Nullable<int> wOWCentre_Reference)
    {

        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFDC_Recalc_Op_Totals", wOWCentre_ReferenceParameter);
    }


    public virtual int SFDC_Set_Break(Nullable<int> employee_Reference, string mode, Nullable<bool> internal_Only, Nullable<System.DateTime> end_Break_At)
    {

        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var internal_OnlyParameter = internal_Only.HasValue ?
            new ObjectParameter("Internal_Only", internal_Only) :
            new ObjectParameter("Internal_Only", typeof(bool));


        var end_Break_AtParameter = end_Break_At.HasValue ?
            new ObjectParameter("End_Break_At", end_Break_At) :
            new ObjectParameter("End_Break_At", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SFDC_Set_Break", employee_ReferenceParameter, modeParameter, internal_OnlyParameter, end_Break_AtParameter);
    }


    public virtual ObjectResult<string> SP_AddDefaultRFQResponses(Nullable<int> rFQ_Reference, Nullable<int> rFQItem_Reference, Nullable<int> supplier_Reference, ObjectParameter sUCCESS)
    {

        var rFQ_ReferenceParameter = rFQ_Reference.HasValue ?
            new ObjectParameter("RFQ_Reference", rFQ_Reference) :
            new ObjectParameter("RFQ_Reference", typeof(int));


        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_AddDefaultRFQResponses", rFQ_ReferenceParameter, rFQItem_ReferenceParameter, supplier_ReferenceParameter, sUCCESS);
    }


    public virtual ObjectResult<SP_AddImage_Result> SP_AddImage(string dataType, string dataReference, string dataImageType, string pictureFormat, byte[] picture, string note, ObjectParameter images_Reference, ObjectParameter sUCCESS)
    {

        var dataTypeParameter = dataType != null ?
            new ObjectParameter("DataType", dataType) :
            new ObjectParameter("DataType", typeof(string));


        var dataReferenceParameter = dataReference != null ?
            new ObjectParameter("DataReference", dataReference) :
            new ObjectParameter("DataReference", typeof(string));


        var dataImageTypeParameter = dataImageType != null ?
            new ObjectParameter("DataImageType", dataImageType) :
            new ObjectParameter("DataImageType", typeof(string));


        var pictureFormatParameter = pictureFormat != null ?
            new ObjectParameter("PictureFormat", pictureFormat) :
            new ObjectParameter("PictureFormat", typeof(string));


        var pictureParameter = picture != null ?
            new ObjectParameter("Picture", picture) :
            new ObjectParameter("Picture", typeof(byte[]));


        var noteParameter = note != null ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_AddImage_Result>("SP_AddImage", dataTypeParameter, dataReferenceParameter, dataImageTypeParameter, pictureFormatParameter, pictureParameter, noteParameter, images_Reference, sUCCESS);
    }


    public virtual ObjectResult<string> SP_AddSupplierToRFQ(Nullable<int> rFQ_Reference, Nullable<int> supplier_Reference, Nullable<int> location_Reference, Nullable<int> contact_Reference, ObjectParameter rFQSuppliers_Reference, ObjectParameter sUCCESS)
    {

        var rFQ_ReferenceParameter = rFQ_Reference.HasValue ?
            new ObjectParameter("RFQ_Reference", rFQ_Reference) :
            new ObjectParameter("RFQ_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_AddSupplierToRFQ", rFQ_ReferenceParameter, supplier_ReferenceParameter, location_ReferenceParameter, contact_ReferenceParameter, rFQSuppliers_Reference, sUCCESS);
    }


    public virtual int SP_Allocate_Manual_Stock(string type, Nullable<int> wO_Item_Reference, Nullable<double> quantity, string source, string source_Reference, string supplier_Name, string supplier_Batch_Number, string coC, string advice_Note, string batch_Number, string notes, Nullable<int> customer_Reference, ObjectParameter success, ObjectParameter message)
    {

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        var wO_Item_ReferenceParameter = wO_Item_Reference.HasValue ?
            new ObjectParameter("WO_Item_Reference", wO_Item_Reference) :
            new ObjectParameter("WO_Item_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var sourceParameter = source != null ?
            new ObjectParameter("Source", source) :
            new ObjectParameter("Source", typeof(string));


        var source_ReferenceParameter = source_Reference != null ?
            new ObjectParameter("Source_Reference", source_Reference) :
            new ObjectParameter("Source_Reference", typeof(string));


        var supplier_NameParameter = supplier_Name != null ?
            new ObjectParameter("Supplier_Name", supplier_Name) :
            new ObjectParameter("Supplier_Name", typeof(string));


        var supplier_Batch_NumberParameter = supplier_Batch_Number != null ?
            new ObjectParameter("Supplier_Batch_Number", supplier_Batch_Number) :
            new ObjectParameter("Supplier_Batch_Number", typeof(string));


        var coCParameter = coC != null ?
            new ObjectParameter("CoC", coC) :
            new ObjectParameter("CoC", typeof(string));


        var advice_NoteParameter = advice_Note != null ?
            new ObjectParameter("Advice_Note", advice_Note) :
            new ObjectParameter("Advice_Note", typeof(string));


        var batch_NumberParameter = batch_Number != null ?
            new ObjectParameter("Batch_Number", batch_Number) :
            new ObjectParameter("Batch_Number", typeof(string));


        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Allocate_Manual_Stock", typeParameter, wO_Item_ReferenceParameter, quantityParameter, sourceParameter, source_ReferenceParameter, supplier_NameParameter, supplier_Batch_NumberParameter, coCParameter, advice_NoteParameter, batch_NumberParameter, notesParameter, customer_ReferenceParameter, success, message);
    }


    public virtual int SP_Allocate_Specific_Stock(string type, Nullable<int> wO_Item_Reference, Nullable<int> stock_Reference, Nullable<double> quantity, ObjectParameter success, ObjectParameter message)
    {

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        var wO_Item_ReferenceParameter = wO_Item_Reference.HasValue ?
            new ObjectParameter("WO_Item_Reference", wO_Item_Reference) :
            new ObjectParameter("WO_Item_Reference", typeof(int));


        var stock_ReferenceParameter = stock_Reference.HasValue ?
            new ObjectParameter("Stock_Reference", stock_Reference) :
            new ObjectParameter("Stock_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Allocate_Specific_Stock", typeParameter, wO_Item_ReferenceParameter, stock_ReferenceParameter, quantityParameter, success, message);
    }


    public virtual int SP_AllocateStock(string type, Nullable<int> wO_Item_Reference, Nullable<double> quantity, Nullable<int> user_ID, string gUID, ObjectParameter success, ObjectParameter total_Allocated, ObjectParameter message)
    {

        var typeParameter = type != null ?
            new ObjectParameter("Type", type) :
            new ObjectParameter("Type", typeof(string));


        var wO_Item_ReferenceParameter = wO_Item_Reference.HasValue ?
            new ObjectParameter("WO_Item_Reference", wO_Item_Reference) :
            new ObjectParameter("WO_Item_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var user_IDParameter = user_ID.HasValue ?
            new ObjectParameter("User_ID", user_ID) :
            new ObjectParameter("User_ID", typeof(int));


        var gUIDParameter = gUID != null ?
            new ObjectParameter("GUID", gUID) :
            new ObjectParameter("GUID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AllocateStock", typeParameter, wO_Item_ReferenceParameter, quantityParameter, user_IDParameter, gUIDParameter, success, total_Allocated, message);
    }


    public virtual int SP_AssignStockToWOrder(string item_Type, Nullable<int> wOItem_Reference, Nullable<double> wO_Quantity, ObjectParameter success, ObjectParameter message)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var wOItem_ReferenceParameter = wOItem_Reference.HasValue ?
            new ObjectParameter("WOItem_Reference", wOItem_Reference) :
            new ObjectParameter("WOItem_Reference", typeof(int));


        var wO_QuantityParameter = wO_Quantity.HasValue ?
            new ObjectParameter("WO_Quantity", wO_Quantity) :
            new ObjectParameter("WO_Quantity", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_AssignStockToWOrder", item_TypeParameter, wOItem_ReferenceParameter, wO_QuantityParameter, success, message);
    }


    public virtual int SP_Calculate_Quote_Costs(Nullable<int> quote_Reference)
    {

        var quote_ReferenceParameter = quote_Reference.HasValue ?
            new ObjectParameter("Quote_Reference", quote_Reference) :
            new ObjectParameter("Quote_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Calculate_Quote_Costs", quote_ReferenceParameter);
    }


    public virtual int SP_Calculate_WOrder_Costs(Nullable<int> wOrder_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Calculate_WOrder_Costs", wOrder_ReferenceParameter);
    }


    public virtual int SP_Calculate_WOrder_Costs_By_Type(Nullable<int> wOrder_Reference, Nullable<bool> calc_Ops, Nullable<bool> calc_Materials, Nullable<bool> calc_Parts, Nullable<bool> calc_Subcon, Nullable<bool> calc_Tools, Nullable<bool> calc_Batches)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var calc_OpsParameter = calc_Ops.HasValue ?
            new ObjectParameter("Calc_Ops", calc_Ops) :
            new ObjectParameter("Calc_Ops", typeof(bool));


        var calc_MaterialsParameter = calc_Materials.HasValue ?
            new ObjectParameter("Calc_Materials", calc_Materials) :
            new ObjectParameter("Calc_Materials", typeof(bool));


        var calc_PartsParameter = calc_Parts.HasValue ?
            new ObjectParameter("Calc_Parts", calc_Parts) :
            new ObjectParameter("Calc_Parts", typeof(bool));


        var calc_SubconParameter = calc_Subcon.HasValue ?
            new ObjectParameter("Calc_Subcon", calc_Subcon) :
            new ObjectParameter("Calc_Subcon", typeof(bool));


        var calc_ToolsParameter = calc_Tools.HasValue ?
            new ObjectParameter("Calc_Tools", calc_Tools) :
            new ObjectParameter("Calc_Tools", typeof(bool));


        var calc_BatchesParameter = calc_Batches.HasValue ?
            new ObjectParameter("Calc_Batches", calc_Batches) :
            new ObjectParameter("Calc_Batches", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Calculate_WOrder_Costs_By_Type", wOrder_ReferenceParameter, calc_OpsParameter, calc_MaterialsParameter, calc_PartsParameter, calc_SubconParameter, calc_ToolsParameter, calc_BatchesParameter);
    }


    public virtual int SP_Commit_Accounts_Extract(string session_ID, string extract_Type, Nullable<System.DateTime> end_Date, ObjectParameter success, ObjectParameter message)
    {

        var session_IDParameter = session_ID != null ?
            new ObjectParameter("Session_ID", session_ID) :
            new ObjectParameter("Session_ID", typeof(string));


        var extract_TypeParameter = extract_Type != null ?
            new ObjectParameter("Extract_Type", extract_Type) :
            new ObjectParameter("Extract_Type", typeof(string));


        var end_DateParameter = end_Date.HasValue ?
            new ObjectParameter("End_Date", end_Date) :
            new ObjectParameter("End_Date", typeof(System.DateTime));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Commit_Accounts_Extract", session_IDParameter, extract_TypeParameter, end_DateParameter, success, message);
    }


    public virtual int SP_CopyCompanyPartMats(string item_Type, Nullable<int> source_Item_Reference, Nullable<int> dest_Item_Reference, Nullable<bool> copy_Item_Details, ObjectParameter success, ObjectParameter message)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var source_Item_ReferenceParameter = source_Item_Reference.HasValue ?
            new ObjectParameter("Source_Item_Reference", source_Item_Reference) :
            new ObjectParameter("Source_Item_Reference", typeof(int));


        var dest_Item_ReferenceParameter = dest_Item_Reference.HasValue ?
            new ObjectParameter("Dest_Item_Reference", dest_Item_Reference) :
            new ObjectParameter("Dest_Item_Reference", typeof(int));


        var copy_Item_DetailsParameter = copy_Item_Details.HasValue ?
            new ObjectParameter("Copy_Item_Details", copy_Item_Details) :
            new ObjectParameter("Copy_Item_Details", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CopyCompanyPartMats", item_TypeParameter, source_Item_ReferenceParameter, dest_Item_ReferenceParameter, copy_Item_DetailsParameter, success, message);
    }


    public virtual int SP_Create_RFQ_Source(Nullable<int> rFQItem_Reference, string source_Record_Type, Nullable<int> source_Record_Reference, Nullable<double> qty, ObjectParameter success)
    {

        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var source_Record_TypeParameter = source_Record_Type != null ?
            new ObjectParameter("Source_Record_Type", source_Record_Type) :
            new ObjectParameter("Source_Record_Type", typeof(string));


        var source_Record_ReferenceParameter = source_Record_Reference.HasValue ?
            new ObjectParameter("Source_Record_Reference", source_Record_Reference) :
            new ObjectParameter("Source_Record_Reference", typeof(int));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Create_RFQ_Source", rFQItem_ReferenceParameter, source_Record_TypeParameter, source_Record_ReferenceParameter, qtyParameter, success);
    }


    public virtual int SP_CreateEmptyRFQResponse(Nullable<int> rFQItem_Reference, Nullable<int> supplier_Reference, Nullable<bool> excluded, Nullable<bool> declined, ObjectParameter rFQResponse_Reference)
    {

        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var excludedParameter = excluded.HasValue ?
            new ObjectParameter("Excluded", excluded) :
            new ObjectParameter("Excluded", typeof(bool));


        var declinedParameter = declined.HasValue ?
            new ObjectParameter("Declined", declined) :
            new ObjectParameter("Declined", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateEmptyRFQResponse", rFQItem_ReferenceParameter, supplier_ReferenceParameter, excludedParameter, declinedParameter, rFQResponse_Reference);
    }


    public virtual int SP_CreateInvoice(Nullable<int> dNote_Reference, Nullable<System.DateTime> invoice_Date, string user_Reference, Nullable<int> user_ID, ObjectParameter invoice_Reference, ObjectParameter success, ObjectParameter message)
    {

        var dNote_ReferenceParameter = dNote_Reference.HasValue ?
            new ObjectParameter("DNote_Reference", dNote_Reference) :
            new ObjectParameter("DNote_Reference", typeof(int));


        var invoice_DateParameter = invoice_Date.HasValue ?
            new ObjectParameter("Invoice_Date", invoice_Date) :
            new ObjectParameter("Invoice_Date", typeof(System.DateTime));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var user_IDParameter = user_ID.HasValue ?
            new ObjectParameter("User_ID", user_ID) :
            new ObjectParameter("User_ID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateInvoice", dNote_ReferenceParameter, invoice_DateParameter, user_ReferenceParameter, user_IDParameter, invoice_Reference, success, message);
    }


    public virtual int SP_CreateRFQ(Nullable<int> owned_By)
    {

        var owned_ByParameter = owned_By.HasValue ?
            new ObjectParameter("Owned_By", owned_By) :
            new ObjectParameter("Owned_By", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateRFQ", owned_ByParameter);
    }


    public virtual ObjectResult<string> SP_CreateRFQItem(Nullable<int> rFQ_Reference, string item_Type, Nullable<int> item_Reference, Nullable<double> qty, string uOM, Nullable<System.DateTime> delivery_Date, string note, string other_Description, string source_Record_Type, Nullable<int> source_Record_Reference, Nullable<bool> updateIfExists, ObjectParameter rFQItem_Reference)
    {

        var rFQ_ReferenceParameter = rFQ_Reference.HasValue ?
            new ObjectParameter("RFQ_Reference", rFQ_Reference) :
            new ObjectParameter("RFQ_Reference", typeof(int));


        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var item_ReferenceParameter = item_Reference.HasValue ?
            new ObjectParameter("Item_Reference", item_Reference) :
            new ObjectParameter("Item_Reference", typeof(int));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var uOMParameter = uOM != null ?
            new ObjectParameter("UOM", uOM) :
            new ObjectParameter("UOM", typeof(string));


        var delivery_DateParameter = delivery_Date.HasValue ?
            new ObjectParameter("Delivery_Date", delivery_Date) :
            new ObjectParameter("Delivery_Date", typeof(System.DateTime));


        var noteParameter = note != null ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(string));


        var other_DescriptionParameter = other_Description != null ?
            new ObjectParameter("Other_Description", other_Description) :
            new ObjectParameter("Other_Description", typeof(string));


        var source_Record_TypeParameter = source_Record_Type != null ?
            new ObjectParameter("Source_Record_Type", source_Record_Type) :
            new ObjectParameter("Source_Record_Type", typeof(string));


        var source_Record_ReferenceParameter = source_Record_Reference.HasValue ?
            new ObjectParameter("Source_Record_Reference", source_Record_Reference) :
            new ObjectParameter("Source_Record_Reference", typeof(int));


        var updateIfExistsParameter = updateIfExists.HasValue ?
            new ObjectParameter("UpdateIfExists", updateIfExists) :
            new ObjectParameter("UpdateIfExists", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_CreateRFQItem", rFQ_ReferenceParameter, item_TypeParameter, item_ReferenceParameter, qtyParameter, uOMParameter, delivery_DateParameter, noteParameter, other_DescriptionParameter, source_Record_TypeParameter, source_Record_ReferenceParameter, updateIfExistsParameter, rFQItem_Reference);
    }


    public virtual int SP_CreateRFQResponse(Nullable<int> rFQItem_Reference, Nullable<int> supplier_Reference, Nullable<double> price, Nullable<double> qty, string uOM, Nullable<int> leadTime, string note, Nullable<bool> declined, Nullable<bool> excluded, ObjectParameter rFQResponse_Reference)
    {

        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var priceParameter = price.HasValue ?
            new ObjectParameter("Price", price) :
            new ObjectParameter("Price", typeof(double));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var uOMParameter = uOM != null ?
            new ObjectParameter("UOM", uOM) :
            new ObjectParameter("UOM", typeof(string));


        var leadTimeParameter = leadTime.HasValue ?
            new ObjectParameter("LeadTime", leadTime) :
            new ObjectParameter("LeadTime", typeof(int));


        var noteParameter = note != null ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(string));


        var declinedParameter = declined.HasValue ?
            new ObjectParameter("Declined", declined) :
            new ObjectParameter("Declined", typeof(bool));


        var excludedParameter = excluded.HasValue ?
            new ObjectParameter("Excluded", excluded) :
            new ObjectParameter("Excluded", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_CreateRFQResponse", rFQItem_ReferenceParameter, supplier_ReferenceParameter, priceParameter, qtyParameter, uOMParameter, leadTimeParameter, noteParameter, declinedParameter, excludedParameter, rFQResponse_Reference);
    }


    public virtual int SP_Default_Q_Template(Nullable<int> reference, ObjectParameter success, ObjectParameter message)
    {

        var referenceParameter = reference.HasValue ?
            new ObjectParameter("Reference", reference) :
            new ObjectParameter("Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Default_Q_Template", referenceParameter, success, message);
    }


    public virtual int SP_Default_WO_Template(Nullable<int> reference, ObjectParameter success, ObjectParameter message)
    {

        var referenceParameter = reference.HasValue ?
            new ObjectParameter("Reference", reference) :
            new ObjectParameter("Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Default_WO_Template", referenceParameter, success, message);
    }


    public virtual int SP_FinishOp(Nullable<int> wOWCentre_Reference, Nullable<System.DateTime> date_Of_Activity, Nullable<double> actual_Total_Time, Nullable<double> quantity_Finished, Nullable<int> employee_Reference, ObjectParameter success, ObjectParameter message)
    {

        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        var date_Of_ActivityParameter = date_Of_Activity.HasValue ?
            new ObjectParameter("Date_Of_Activity", date_Of_Activity) :
            new ObjectParameter("Date_Of_Activity", typeof(System.DateTime));


        var actual_Total_TimeParameter = actual_Total_Time.HasValue ?
            new ObjectParameter("Actual_Total_Time", actual_Total_Time) :
            new ObjectParameter("Actual_Total_Time", typeof(double));


        var quantity_FinishedParameter = quantity_Finished.HasValue ?
            new ObjectParameter("Quantity_Finished", quantity_Finished) :
            new ObjectParameter("Quantity_Finished", typeof(double));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_FinishOp", wOWCentre_ReferenceParameter, date_Of_ActivityParameter, actual_Total_TimeParameter, quantity_FinishedParameter, employee_ReferenceParameter, success, message);
    }


    public virtual int SP_Merge_PartMaterial_Records(string item_Type, Nullable<int> master_Item_Reference, Nullable<int> replaced_Item_Reference, string delete_Inactive, Nullable<bool> quotes, Nullable<bool> wOrders, Nullable<bool> pOrders, Nullable<bool> unfinishedQuotes, Nullable<bool> unfinishedWOrders, Nullable<bool> unfinishedPOrders, ObjectParameter success)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var master_Item_ReferenceParameter = master_Item_Reference.HasValue ?
            new ObjectParameter("Master_Item_Reference", master_Item_Reference) :
            new ObjectParameter("Master_Item_Reference", typeof(int));


        var replaced_Item_ReferenceParameter = replaced_Item_Reference.HasValue ?
            new ObjectParameter("Replaced_Item_Reference", replaced_Item_Reference) :
            new ObjectParameter("Replaced_Item_Reference", typeof(int));


        var delete_InactiveParameter = delete_Inactive != null ?
            new ObjectParameter("Delete_Inactive", delete_Inactive) :
            new ObjectParameter("Delete_Inactive", typeof(string));


        var quotesParameter = quotes.HasValue ?
            new ObjectParameter("Quotes", quotes) :
            new ObjectParameter("Quotes", typeof(bool));


        var wOrdersParameter = wOrders.HasValue ?
            new ObjectParameter("WOrders", wOrders) :
            new ObjectParameter("WOrders", typeof(bool));


        var pOrdersParameter = pOrders.HasValue ?
            new ObjectParameter("POrders", pOrders) :
            new ObjectParameter("POrders", typeof(bool));


        var unfinishedQuotesParameter = unfinishedQuotes.HasValue ?
            new ObjectParameter("UnfinishedQuotes", unfinishedQuotes) :
            new ObjectParameter("UnfinishedQuotes", typeof(bool));


        var unfinishedWOrdersParameter = unfinishedWOrders.HasValue ?
            new ObjectParameter("UnfinishedWOrders", unfinishedWOrders) :
            new ObjectParameter("UnfinishedWOrders", typeof(bool));


        var unfinishedPOrdersParameter = unfinishedPOrders.HasValue ?
            new ObjectParameter("UnfinishedPOrders", unfinishedPOrders) :
            new ObjectParameter("UnfinishedPOrders", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Merge_PartMaterial_Records", item_TypeParameter, master_Item_ReferenceParameter, replaced_Item_ReferenceParameter, delete_InactiveParameter, quotesParameter, wOrdersParameter, pOrdersParameter, unfinishedQuotesParameter, unfinishedWOrdersParameter, unfinishedPOrdersParameter, success);
    }


    public virtual int SP_New_PInvoice(Nullable<int> supplier_Reference, Nullable<int> location_Reference, Nullable<int> contact_Reference, Nullable<System.DateTime> invoice_Date, Nullable<double> exchange_Rate, Nullable<int> employee_Ref, Nullable<decimal> invoice_Total, Nullable<int> pOrder_Reference, string pI_User_Reference, Nullable<decimal> vAT, Nullable<decimal> grand_Total, string country, ObjectParameter success, ObjectParameter duplicate, ObjectParameter pInvoice_Reference, ObjectParameter message)
    {

        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var location_ReferenceParameter = location_Reference.HasValue ?
            new ObjectParameter("Location_Reference", location_Reference) :
            new ObjectParameter("Location_Reference", typeof(int));


        var contact_ReferenceParameter = contact_Reference.HasValue ?
            new ObjectParameter("Contact_Reference", contact_Reference) :
            new ObjectParameter("Contact_Reference", typeof(int));


        var invoice_DateParameter = invoice_Date.HasValue ?
            new ObjectParameter("Invoice_Date", invoice_Date) :
            new ObjectParameter("Invoice_Date", typeof(System.DateTime));


        var exchange_RateParameter = exchange_Rate.HasValue ?
            new ObjectParameter("Exchange_Rate", exchange_Rate) :
            new ObjectParameter("Exchange_Rate", typeof(double));


        var employee_RefParameter = employee_Ref.HasValue ?
            new ObjectParameter("Employee_Ref", employee_Ref) :
            new ObjectParameter("Employee_Ref", typeof(int));


        var invoice_TotalParameter = invoice_Total.HasValue ?
            new ObjectParameter("Invoice_Total", invoice_Total) :
            new ObjectParameter("Invoice_Total", typeof(decimal));


        var pOrder_ReferenceParameter = pOrder_Reference.HasValue ?
            new ObjectParameter("POrder_Reference", pOrder_Reference) :
            new ObjectParameter("POrder_Reference", typeof(int));


        var pI_User_ReferenceParameter = pI_User_Reference != null ?
            new ObjectParameter("PI_User_Reference", pI_User_Reference) :
            new ObjectParameter("PI_User_Reference", typeof(string));


        var vATParameter = vAT.HasValue ?
            new ObjectParameter("VAT", vAT) :
            new ObjectParameter("VAT", typeof(decimal));


        var grand_TotalParameter = grand_Total.HasValue ?
            new ObjectParameter("Grand_Total", grand_Total) :
            new ObjectParameter("Grand_Total", typeof(decimal));


        var countryParameter = country != null ?
            new ObjectParameter("Country", country) :
            new ObjectParameter("Country", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_New_PInvoice", supplier_ReferenceParameter, location_ReferenceParameter, contact_ReferenceParameter, invoice_DateParameter, exchange_RateParameter, employee_RefParameter, invoice_TotalParameter, pOrder_ReferenceParameter, pI_User_ReferenceParameter, vATParameter, grand_TotalParameter, countryParameter, success, duplicate, pInvoice_Reference, message);
    }


    public virtual int SP_New_PInvoiceItem_Record(Nullable<int> pInvoice_Reference, Nullable<double> quantity, string item_Type, Nullable<int> part_Reference, Nullable<int> material_Reference, Nullable<int> subContract_Reference, string description, Nullable<int> vAT_Reference, Nullable<decimal> unit_Price, Nullable<decimal> discount_Amount, Nullable<decimal> total_Price, Nullable<int> last_Modified, Nullable<int> pItem_Reference, Nullable<decimal> tax_Amount, Nullable<int> nominalCode_Reference, Nullable<int> costCentre_Reference, ObjectParameter success, ObjectParameter message, ObjectParameter pInvoiceItem_Reference)
    {

        var pInvoice_ReferenceParameter = pInvoice_Reference.HasValue ?
            new ObjectParameter("PInvoice_Reference", pInvoice_Reference) :
            new ObjectParameter("PInvoice_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var material_ReferenceParameter = material_Reference.HasValue ?
            new ObjectParameter("Material_Reference", material_Reference) :
            new ObjectParameter("Material_Reference", typeof(int));


        var subContract_ReferenceParameter = subContract_Reference.HasValue ?
            new ObjectParameter("SubContract_Reference", subContract_Reference) :
            new ObjectParameter("SubContract_Reference", typeof(int));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var vAT_ReferenceParameter = vAT_Reference.HasValue ?
            new ObjectParameter("VAT_Reference", vAT_Reference) :
            new ObjectParameter("VAT_Reference", typeof(int));


        var unit_PriceParameter = unit_Price.HasValue ?
            new ObjectParameter("Unit_Price", unit_Price) :
            new ObjectParameter("Unit_Price", typeof(decimal));


        var discount_AmountParameter = discount_Amount.HasValue ?
            new ObjectParameter("Discount_Amount", discount_Amount) :
            new ObjectParameter("Discount_Amount", typeof(decimal));


        var total_PriceParameter = total_Price.HasValue ?
            new ObjectParameter("Total_Price", total_Price) :
            new ObjectParameter("Total_Price", typeof(decimal));


        var last_ModifiedParameter = last_Modified.HasValue ?
            new ObjectParameter("Last_Modified", last_Modified) :
            new ObjectParameter("Last_Modified", typeof(int));


        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        var tax_AmountParameter = tax_Amount.HasValue ?
            new ObjectParameter("Tax_Amount", tax_Amount) :
            new ObjectParameter("Tax_Amount", typeof(decimal));


        var nominalCode_ReferenceParameter = nominalCode_Reference.HasValue ?
            new ObjectParameter("NominalCode_Reference", nominalCode_Reference) :
            new ObjectParameter("NominalCode_Reference", typeof(int));


        var costCentre_ReferenceParameter = costCentre_Reference.HasValue ?
            new ObjectParameter("CostCentre_Reference", costCentre_Reference) :
            new ObjectParameter("CostCentre_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_New_PInvoiceItem_Record", pInvoice_ReferenceParameter, quantityParameter, item_TypeParameter, part_ReferenceParameter, material_ReferenceParameter, subContract_ReferenceParameter, descriptionParameter, vAT_ReferenceParameter, unit_PriceParameter, discount_AmountParameter, total_PriceParameter, last_ModifiedParameter, pItem_ReferenceParameter, tax_AmountParameter, nominalCode_ReferenceParameter, costCentre_ReferenceParameter, success, message, pInvoiceItem_Reference);
    }


    public virtual ObjectResult<string> SP_NewWO(Nullable<int> part_Reference, Nullable<double> order_Qty, Nullable<double> build_Qty, Nullable<int> template_WOrder_Reference, Nullable<int> for_Customer_Reference, Nullable<System.DateTime> delivery_Date, Nullable<int> employee_Reference, ObjectParameter out_WOrder_Reference, ObjectParameter out_User_Reference, ObjectParameter success, ObjectParameter message)
    {

        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var order_QtyParameter = order_Qty.HasValue ?
            new ObjectParameter("Order_Qty", order_Qty) :
            new ObjectParameter("Order_Qty", typeof(double));


        var build_QtyParameter = build_Qty.HasValue ?
            new ObjectParameter("Build_Qty", build_Qty) :
            new ObjectParameter("Build_Qty", typeof(double));


        var template_WOrder_ReferenceParameter = template_WOrder_Reference.HasValue ?
            new ObjectParameter("Template_WOrder_Reference", template_WOrder_Reference) :
            new ObjectParameter("Template_WOrder_Reference", typeof(int));


        var for_Customer_ReferenceParameter = for_Customer_Reference.HasValue ?
            new ObjectParameter("For_Customer_Reference", for_Customer_Reference) :
            new ObjectParameter("For_Customer_Reference", typeof(int));


        var delivery_DateParameter = delivery_Date.HasValue ?
            new ObjectParameter("Delivery_Date", delivery_Date) :
            new ObjectParameter("Delivery_Date", typeof(System.DateTime));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_NewWO", part_ReferenceParameter, order_QtyParameter, build_QtyParameter, template_WOrder_ReferenceParameter, for_Customer_ReferenceParameter, delivery_DateParameter, employee_ReferenceParameter, out_WOrder_Reference, out_User_Reference, success, message);
    }


    public virtual int SP_NewWOrderBatch(Nullable<int> part_Reference, Nullable<int> in_WOrder_Reference, Nullable<int> wOPart_Reference, Nullable<double> quantity_Required, Nullable<double> required_For_Stock, Nullable<int> employee_Reference, Nullable<bool> use_ExistingStock, Nullable<bool> use_ForStock, Nullable<bool> up_ForStockWO, Nullable<bool> use_Template, Nullable<int> template_WOrder_Reference, ObjectParameter out_WOrder_Reference, ObjectParameter out_User_Reference, ObjectParameter out_QuantityFromStock, ObjectParameter out_QuantityFromStockWOs, ObjectParameter out_QuantityFromNewWO, ObjectParameter out_BatchQtyFromNewWO, ObjectParameter out_StockQuantity, ObjectParameter out_Appended_WOrder_Reference, ObjectParameter out_Appended_User_Reference, ObjectParameter out_Appended_Quantity, ObjectParameter success, ObjectParameter message)
    {

        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var in_WOrder_ReferenceParameter = in_WOrder_Reference.HasValue ?
            new ObjectParameter("In_WOrder_Reference", in_WOrder_Reference) :
            new ObjectParameter("In_WOrder_Reference", typeof(int));


        var wOPart_ReferenceParameter = wOPart_Reference.HasValue ?
            new ObjectParameter("WOPart_Reference", wOPart_Reference) :
            new ObjectParameter("WOPart_Reference", typeof(int));


        var quantity_RequiredParameter = quantity_Required.HasValue ?
            new ObjectParameter("Quantity_Required", quantity_Required) :
            new ObjectParameter("Quantity_Required", typeof(double));


        var required_For_StockParameter = required_For_Stock.HasValue ?
            new ObjectParameter("Required_For_Stock", required_For_Stock) :
            new ObjectParameter("Required_For_Stock", typeof(double));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var use_ExistingStockParameter = use_ExistingStock.HasValue ?
            new ObjectParameter("Use_ExistingStock", use_ExistingStock) :
            new ObjectParameter("Use_ExistingStock", typeof(bool));


        var use_ForStockParameter = use_ForStock.HasValue ?
            new ObjectParameter("Use_ForStock", use_ForStock) :
            new ObjectParameter("Use_ForStock", typeof(bool));


        var up_ForStockWOParameter = up_ForStockWO.HasValue ?
            new ObjectParameter("Up_ForStockWO", up_ForStockWO) :
            new ObjectParameter("Up_ForStockWO", typeof(bool));


        var use_TemplateParameter = use_Template.HasValue ?
            new ObjectParameter("Use_Template", use_Template) :
            new ObjectParameter("Use_Template", typeof(bool));


        var template_WOrder_ReferenceParameter = template_WOrder_Reference.HasValue ?
            new ObjectParameter("Template_WOrder_Reference", template_WOrder_Reference) :
            new ObjectParameter("Template_WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_NewWOrderBatch", part_ReferenceParameter, in_WOrder_ReferenceParameter, wOPart_ReferenceParameter, quantity_RequiredParameter, required_For_StockParameter, employee_ReferenceParameter, use_ExistingStockParameter, use_ForStockParameter, up_ForStockWOParameter, use_TemplateParameter, template_WOrder_ReferenceParameter, out_WOrder_Reference, out_User_Reference, out_QuantityFromStock, out_QuantityFromStockWOs, out_QuantityFromNewWO, out_BatchQtyFromNewWO, out_StockQuantity, out_Appended_WOrder_Reference, out_Appended_User_Reference, out_Appended_Quantity, success, message);
    }


    public virtual int SP_Number_Blank_WOTemplates(ObjectParameter success, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Number_Blank_WOTemplates", success, message);
    }


    public virtual int SP_Purge_Process_Allocated_Stock(string gUID, ObjectParameter success, ObjectParameter message)
    {

        var gUIDParameter = gUID != null ?
            new ObjectParameter("GUID", gUID) :
            new ObjectParameter("GUID", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Purge_Process_Allocated_Stock", gUIDParameter, success, message);
    }


    public virtual int SP_Recalculate_Existing(ObjectParameter sUCCESS, ObjectParameter message)
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Recalculate_Existing", sUCCESS, message);
    }


    public virtual int SP_Resequence_Assembly(string mode, Nullable<int> iReference, ObjectParameter success, ObjectParameter message)
    {

        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var iReferenceParameter = iReference.HasValue ?
            new ObjectParameter("iReference", iReference) :
            new ObjectParameter("iReference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Resequence_Assembly", modeParameter, iReferenceParameter, success, message);
    }


    public virtual int SP_ReturnToStock(string item_Type, Nullable<int> withdrawal_Reference, Nullable<double> quantity, string destination, ObjectParameter success, ObjectParameter stock_Reference, ObjectParameter message)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var withdrawal_ReferenceParameter = withdrawal_Reference.HasValue ?
            new ObjectParameter("Withdrawal_Reference", withdrawal_Reference) :
            new ObjectParameter("Withdrawal_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var destinationParameter = destination != null ?
            new ObjectParameter("Destination", destination) :
            new ObjectParameter("Destination", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ReturnToStock", item_TypeParameter, withdrawal_ReferenceParameter, quantityParameter, destinationParameter, success, stock_Reference, message);
    }


    public virtual int SP_RFQResponseDeclined(Nullable<int> rFQItem_Reference, Nullable<int> supplier_Reference, Nullable<bool> declined)
    {

        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var declinedParameter = declined.HasValue ?
            new ObjectParameter("Declined", declined) :
            new ObjectParameter("Declined", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RFQResponseDeclined", rFQItem_ReferenceParameter, supplier_ReferenceParameter, declinedParameter);
    }


    public virtual int SP_RFQResponseExcluded(Nullable<int> rFQItem_Reference, Nullable<int> supplier_Reference, Nullable<bool> excluded)
    {

        var rFQItem_ReferenceParameter = rFQItem_Reference.HasValue ?
            new ObjectParameter("RFQItem_Reference", rFQItem_Reference) :
            new ObjectParameter("RFQItem_Reference", typeof(int));


        var supplier_ReferenceParameter = supplier_Reference.HasValue ?
            new ObjectParameter("Supplier_Reference", supplier_Reference) :
            new ObjectParameter("Supplier_Reference", typeof(int));


        var excludedParameter = excluded.HasValue ?
            new ObjectParameter("Excluded", excluded) :
            new ObjectParameter("Excluded", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_RFQResponseExcluded", rFQItem_ReferenceParameter, supplier_ReferenceParameter, excludedParameter);
    }


    public virtual int SP_SourcePartStockToWO(Nullable<int> wOPart_Reference, Nullable<int> pStock_Reference, ObjectParameter success, ObjectParameter message)
    {

        var wOPart_ReferenceParameter = wOPart_Reference.HasValue ?
            new ObjectParameter("WOPart_Reference", wOPart_Reference) :
            new ObjectParameter("WOPart_Reference", typeof(int));


        var pStock_ReferenceParameter = pStock_Reference.HasValue ?
            new ObjectParameter("PStock_Reference", pStock_Reference) :
            new ObjectParameter("PStock_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SourcePartStockToWO", wOPart_ReferenceParameter, pStock_ReferenceParameter, success, message);
    }


    public virtual int SP_SourceWOBatchToWO(Nullable<int> wOPart_Reference, Nullable<int> reserve_Batch_Reference, Nullable<int> reserve_WOrder_Reference, ObjectParameter success, ObjectParameter message)
    {

        var wOPart_ReferenceParameter = wOPart_Reference.HasValue ?
            new ObjectParameter("WOPart_Reference", wOPart_Reference) :
            new ObjectParameter("WOPart_Reference", typeof(int));


        var reserve_Batch_ReferenceParameter = reserve_Batch_Reference.HasValue ?
            new ObjectParameter("Reserve_Batch_Reference", reserve_Batch_Reference) :
            new ObjectParameter("Reserve_Batch_Reference", typeof(int));


        var reserve_WOrder_ReferenceParameter = reserve_WOrder_Reference.HasValue ?
            new ObjectParameter("Reserve_WOrder_Reference", reserve_WOrder_Reference) :
            new ObjectParameter("Reserve_WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SourceWOBatchToWO", wOPart_ReferenceParameter, reserve_Batch_ReferenceParameter, reserve_WOrder_ReferenceParameter, success, message);
    }


    public virtual int SP_Update_Report_Files(string mode, string source_MachineID, Nullable<int> record_Reference, string machineID, string paramName, string valueString, ObjectParameter success, ObjectParameter message, ObjectParameter out_Record_Reference)
    {

        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var source_MachineIDParameter = source_MachineID != null ?
            new ObjectParameter("Source_MachineID", source_MachineID) :
            new ObjectParameter("Source_MachineID", typeof(string));


        var record_ReferenceParameter = record_Reference.HasValue ?
            new ObjectParameter("Record_Reference", record_Reference) :
            new ObjectParameter("Record_Reference", typeof(int));


        var machineIDParameter = machineID != null ?
            new ObjectParameter("MachineID", machineID) :
            new ObjectParameter("MachineID", typeof(string));


        var paramNameParameter = paramName != null ?
            new ObjectParameter("ParamName", paramName) :
            new ObjectParameter("ParamName", typeof(string));


        var valueStringParameter = valueString != null ?
            new ObjectParameter("ValueString", valueString) :
            new ObjectParameter("ValueString", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Report_Files", modeParameter, source_MachineIDParameter, record_ReferenceParameter, machineIDParameter, paramNameParameter, valueStringParameter, success, message, out_Record_Reference);
    }


    public virtual ObjectResult<string> SP_UpdateWOrderAssemblyQty(Nullable<int> wOrder_Reference, Nullable<double> old_OrderQty, Nullable<double> new_OrderQty, Nullable<double> old_BuildQty, Nullable<double> new_BuildQty, ObjectParameter success, ObjectParameter message)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var old_OrderQtyParameter = old_OrderQty.HasValue ?
            new ObjectParameter("Old_OrderQty", old_OrderQty) :
            new ObjectParameter("Old_OrderQty", typeof(double));


        var new_OrderQtyParameter = new_OrderQty.HasValue ?
            new ObjectParameter("New_OrderQty", new_OrderQty) :
            new ObjectParameter("New_OrderQty", typeof(double));


        var old_BuildQtyParameter = old_BuildQty.HasValue ?
            new ObjectParameter("Old_BuildQty", old_BuildQty) :
            new ObjectParameter("Old_BuildQty", typeof(double));


        var new_BuildQtyParameter = new_BuildQty.HasValue ?
            new ObjectParameter("New_BuildQty", new_BuildQty) :
            new ObjectParameter("New_BuildQty", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_UpdateWOrderAssemblyQty", wOrder_ReferenceParameter, old_OrderQtyParameter, new_OrderQtyParameter, old_BuildQtyParameter, new_BuildQtyParameter, success, message);
    }


    public virtual int SP_Write_Tricorn_Event_Log_Record(string event_Type, string table_Name, Nullable<int> record_Reference, string action_Type, string before_Action, string after_Action, string parent_Table, string parent_Reference_Field, Nullable<int> parent_Reference_Value, string parent_User_Reference, ObjectParameter success)
    {

        var event_TypeParameter = event_Type != null ?
            new ObjectParameter("Event_Type", event_Type) :
            new ObjectParameter("Event_Type", typeof(string));


        var table_NameParameter = table_Name != null ?
            new ObjectParameter("Table_Name", table_Name) :
            new ObjectParameter("Table_Name", typeof(string));


        var record_ReferenceParameter = record_Reference.HasValue ?
            new ObjectParameter("Record_Reference", record_Reference) :
            new ObjectParameter("Record_Reference", typeof(int));


        var action_TypeParameter = action_Type != null ?
            new ObjectParameter("Action_Type", action_Type) :
            new ObjectParameter("Action_Type", typeof(string));


        var before_ActionParameter = before_Action != null ?
            new ObjectParameter("Before_Action", before_Action) :
            new ObjectParameter("Before_Action", typeof(string));


        var after_ActionParameter = after_Action != null ?
            new ObjectParameter("After_Action", after_Action) :
            new ObjectParameter("After_Action", typeof(string));


        var parent_TableParameter = parent_Table != null ?
            new ObjectParameter("Parent_Table", parent_Table) :
            new ObjectParameter("Parent_Table", typeof(string));


        var parent_Reference_FieldParameter = parent_Reference_Field != null ?
            new ObjectParameter("Parent_Reference_Field", parent_Reference_Field) :
            new ObjectParameter("Parent_Reference_Field", typeof(string));


        var parent_Reference_ValueParameter = parent_Reference_Value.HasValue ?
            new ObjectParameter("Parent_Reference_Value", parent_Reference_Value) :
            new ObjectParameter("Parent_Reference_Value", typeof(int));


        var parent_User_ReferenceParameter = parent_User_Reference != null ?
            new ObjectParameter("Parent_User_Reference", parent_User_Reference) :
            new ObjectParameter("Parent_User_Reference", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Write_Tricorn_Event_Log_Record", event_TypeParameter, table_NameParameter, record_ReferenceParameter, action_TypeParameter, before_ActionParameter, after_ActionParameter, parent_TableParameter, parent_Reference_FieldParameter, parent_Reference_ValueParameter, parent_User_ReferenceParameter, success);
    }


    public virtual int spAdd_PInvoiceItems(Nullable<int> pInvoice_Reference, Nullable<int> pOrder_Reference, ObjectParameter success, ObjectParameter message)
    {

        var pInvoice_ReferenceParameter = pInvoice_Reference.HasValue ?
            new ObjectParameter("PInvoice_Reference", pInvoice_Reference) :
            new ObjectParameter("PInvoice_Reference", typeof(int));


        var pOrder_ReferenceParameter = pOrder_Reference.HasValue ?
            new ObjectParameter("POrder_Reference", pOrder_Reference) :
            new ObjectParameter("POrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdd_PInvoiceItems", pInvoice_ReferenceParameter, pOrder_ReferenceParameter, success, message);
    }


    public virtual int spAdd_Update_Params(string paramType, string machineID, string loginID, string groupParamName, string paramName, string dataType, Nullable<int> valueInt, Nullable<double> valueFloat, Nullable<bool> valueBool, string valueString, ObjectParameter success, ObjectParameter message, ObjectParameter record_Reference)
    {

        var paramTypeParameter = paramType != null ?
            new ObjectParameter("ParamType", paramType) :
            new ObjectParameter("ParamType", typeof(string));


        var machineIDParameter = machineID != null ?
            new ObjectParameter("MachineID", machineID) :
            new ObjectParameter("MachineID", typeof(string));


        var loginIDParameter = loginID != null ?
            new ObjectParameter("LoginID", loginID) :
            new ObjectParameter("LoginID", typeof(string));


        var groupParamNameParameter = groupParamName != null ?
            new ObjectParameter("GroupParamName", groupParamName) :
            new ObjectParameter("GroupParamName", typeof(string));


        var paramNameParameter = paramName != null ?
            new ObjectParameter("ParamName", paramName) :
            new ObjectParameter("ParamName", typeof(string));


        var dataTypeParameter = dataType != null ?
            new ObjectParameter("DataType", dataType) :
            new ObjectParameter("DataType", typeof(string));


        var valueIntParameter = valueInt.HasValue ?
            new ObjectParameter("ValueInt", valueInt) :
            new ObjectParameter("ValueInt", typeof(int));


        var valueFloatParameter = valueFloat.HasValue ?
            new ObjectParameter("ValueFloat", valueFloat) :
            new ObjectParameter("ValueFloat", typeof(double));


        var valueBoolParameter = valueBool.HasValue ?
            new ObjectParameter("ValueBool", valueBool) :
            new ObjectParameter("ValueBool", typeof(bool));


        var valueStringParameter = valueString != null ?
            new ObjectParameter("ValueString", valueString) :
            new ObjectParameter("ValueString", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAdd_Update_Params", paramTypeParameter, machineIDParameter, loginIDParameter, groupParamNameParameter, paramNameParameter, dataTypeParameter, valueIntParameter, valueFloatParameter, valueBoolParameter, valueStringParameter, success, message, record_Reference);
    }


    public virtual ObjectResult<spAddDocumentCategory_Result> spAddDocumentCategory(string dataType, string category, Nullable<bool> jobPack, ObjectParameter iD, ObjectParameter sUCCESS)
    {

        var dataTypeParameter = dataType != null ?
            new ObjectParameter("DataType", dataType) :
            new ObjectParameter("DataType", typeof(string));


        var categoryParameter = category != null ?
            new ObjectParameter("Category", category) :
            new ObjectParameter("Category", typeof(string));


        var jobPackParameter = jobPack.HasValue ?
            new ObjectParameter("JobPack", jobPack) :
            new ObjectParameter("JobPack", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAddDocumentCategory_Result>("spAddDocumentCategory", dataTypeParameter, categoryParameter, jobPackParameter, iD, sUCCESS);
    }


    public virtual ObjectResult<spAddDocumentLink_Result> spAddDocumentLink(string dataType, Nullable<int> dataReference, Nullable<int> category, string path, Nullable<int> attachedBy, string note, ObjectParameter iD, ObjectParameter sUCCESS)
    {

        var dataTypeParameter = dataType != null ?
            new ObjectParameter("DataType", dataType) :
            new ObjectParameter("DataType", typeof(string));


        var dataReferenceParameter = dataReference.HasValue ?
            new ObjectParameter("DataReference", dataReference) :
            new ObjectParameter("DataReference", typeof(int));


        var categoryParameter = category.HasValue ?
            new ObjectParameter("Category", category) :
            new ObjectParameter("Category", typeof(int));


        var pathParameter = path != null ?
            new ObjectParameter("Path", path) :
            new ObjectParameter("Path", typeof(string));


        var attachedByParameter = attachedBy.HasValue ?
            new ObjectParameter("AttachedBy", attachedBy) :
            new ObjectParameter("AttachedBy", typeof(int));


        var noteParameter = note != null ?
            new ObjectParameter("Note", note) :
            new ObjectParameter("Note", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAddDocumentLink_Result>("spAddDocumentLink", dataTypeParameter, dataReferenceParameter, categoryParameter, pathParameter, attachedByParameter, noteParameter, iD, sUCCESS);
    }


    public virtual int spAddObject(string objectType, string objectName, string objectDetails, string objectParent, string sQLStatement)
    {

        var objectTypeParameter = objectType != null ?
            new ObjectParameter("ObjectType", objectType) :
            new ObjectParameter("ObjectType", typeof(string));


        var objectNameParameter = objectName != null ?
            new ObjectParameter("ObjectName", objectName) :
            new ObjectParameter("ObjectName", typeof(string));


        var objectDetailsParameter = objectDetails != null ?
            new ObjectParameter("ObjectDetails", objectDetails) :
            new ObjectParameter("ObjectDetails", typeof(string));


        var objectParentParameter = objectParent != null ?
            new ObjectParameter("ObjectParent", objectParent) :
            new ObjectParameter("ObjectParent", typeof(string));


        var sQLStatementParameter = sQLStatement != null ?
            new ObjectParameter("SQLStatement", sQLStatement) :
            new ObjectParameter("SQLStatement", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddObject", objectTypeParameter, objectNameParameter, objectDetailsParameter, objectParentParameter, sQLStatementParameter);
    }


    public virtual ObjectResult<spAddQuoteComponent_Result> spAddQuoteComponent(Nullable<int> quote_Reference, Nullable<int> using_Reference, Nullable<double> quantity, ObjectParameter qComponent_Reference, ObjectParameter sUCCESS)
    {

        var quote_ReferenceParameter = quote_Reference.HasValue ?
            new ObjectParameter("Quote_Reference", quote_Reference) :
            new ObjectParameter("Quote_Reference", typeof(int));


        var using_ReferenceParameter = using_Reference.HasValue ?
            new ObjectParameter("Using_Reference", using_Reference) :
            new ObjectParameter("Using_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAddQuoteComponent_Result>("spAddQuoteComponent", quote_ReferenceParameter, using_ReferenceParameter, quantityParameter, qComponent_Reference, sUCCESS);
    }


    public virtual ObjectResult<spAddWOComponent_Result> spAddWOComponent(Nullable<int> wOrder_Reference, Nullable<int> using_Reference, Nullable<double> quantity, ObjectParameter wOComponent_Reference, ObjectParameter sUCCESS)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var using_ReferenceParameter = using_Reference.HasValue ?
            new ObjectParameter("Using_Reference", using_Reference) :
            new ObjectParameter("Using_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spAddWOComponent_Result>("spAddWOComponent", wOrder_ReferenceParameter, using_ReferenceParameter, quantityParameter, wOComponent_Reference, sUCCESS);
    }


    public virtual ObjectResult<string> spConsolidateStock(Nullable<int> material_Reference, ObjectParameter success)
    {

        var material_ReferenceParameter = material_Reference.HasValue ?
            new ObjectParameter("Material_Reference", material_Reference) :
            new ObjectParameter("Material_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spConsolidateStock", material_ReferenceParameter, success);
    }


    public virtual int spCopy_Access_Rights(string mode, Nullable<int> user_Role_Reference, string new_Role, ObjectParameter success, ObjectParameter message)
    {

        var modeParameter = mode != null ?
            new ObjectParameter("Mode", mode) :
            new ObjectParameter("Mode", typeof(string));


        var user_Role_ReferenceParameter = user_Role_Reference.HasValue ?
            new ObjectParameter("User_Role_Reference", user_Role_Reference) :
            new ObjectParameter("User_Role_Reference", typeof(int));


        var new_RoleParameter = new_Role != null ?
            new ObjectParameter("New_Role", new_Role) :
            new ObjectParameter("New_Role", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCopy_Access_Rights", modeParameter, user_Role_ReferenceParameter, new_RoleParameter, success, message);
    }


    public virtual ObjectResult<string> spDelete_Deliveries(string item_Type, string item_For, Nullable<int> delivery_Reference, Nullable<int> pItem_Reference, ObjectParameter sUCCESS)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var item_ForParameter = item_For != null ?
            new ObjectParameter("Item_For", item_For) :
            new ObjectParameter("Item_For", typeof(string));


        var delivery_ReferenceParameter = delivery_Reference.HasValue ?
            new ObjectParameter("Delivery_Reference", delivery_Reference) :
            new ObjectParameter("Delivery_Reference", typeof(int));


        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spDelete_Deliveries", item_TypeParameter, item_ForParameter, delivery_ReferenceParameter, pItem_ReferenceParameter, sUCCESS);
    }


    public virtual int spInsert_Update_PItem_Assignment_Record(Nullable<int> pItem_Reference, string pIA_Type, Nullable<int> wOrder_Reference, Nullable<double> quantity, Nullable<int> wOPart_Reference, Nullable<int> wOMaterial_Reference, Nullable<int> wOSubContract_Reference, Nullable<int> wOTool_Reference, ObjectParameter success)
    {

        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        var pIA_TypeParameter = pIA_Type != null ?
            new ObjectParameter("PIA_Type", pIA_Type) :
            new ObjectParameter("PIA_Type", typeof(string));


        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var quantityParameter = quantity.HasValue ?
            new ObjectParameter("Quantity", quantity) :
            new ObjectParameter("Quantity", typeof(double));


        var wOPart_ReferenceParameter = wOPart_Reference.HasValue ?
            new ObjectParameter("WOPart_Reference", wOPart_Reference) :
            new ObjectParameter("WOPart_Reference", typeof(int));


        var wOMaterial_ReferenceParameter = wOMaterial_Reference.HasValue ?
            new ObjectParameter("WOMaterial_Reference", wOMaterial_Reference) :
            new ObjectParameter("WOMaterial_Reference", typeof(int));


        var wOSubContract_ReferenceParameter = wOSubContract_Reference.HasValue ?
            new ObjectParameter("WOSubContract_Reference", wOSubContract_Reference) :
            new ObjectParameter("WOSubContract_Reference", typeof(int));


        var wOTool_ReferenceParameter = wOTool_Reference.HasValue ?
            new ObjectParameter("WOTool_Reference", wOTool_Reference) :
            new ObjectParameter("WOTool_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsert_Update_PItem_Assignment_Record", pItem_ReferenceParameter, pIA_TypeParameter, wOrder_ReferenceParameter, quantityParameter, wOPart_ReferenceParameter, wOMaterial_ReferenceParameter, wOSubContract_ReferenceParameter, wOTool_ReferenceParameter, success);
    }


    public virtual ObjectResult<spInsertBuildBomItem_Result> spInsertBuildBomItem(Nullable<int> build_Reference, Nullable<int> parent_part_Reference, string component_Type, Nullable<int> part_Reference, Nullable<int> material_Reference, Nullable<int> qty_Per, string notes, ObjectParameter buildBOM_Reference, ObjectParameter sUCCESS)
    {

        var build_ReferenceParameter = build_Reference.HasValue ?
            new ObjectParameter("Build_Reference", build_Reference) :
            new ObjectParameter("Build_Reference", typeof(int));


        var parent_part_ReferenceParameter = parent_part_Reference.HasValue ?
            new ObjectParameter("Parent_part_Reference", parent_part_Reference) :
            new ObjectParameter("Parent_part_Reference", typeof(int));


        var component_TypeParameter = component_Type != null ?
            new ObjectParameter("Component_Type", component_Type) :
            new ObjectParameter("Component_Type", typeof(string));


        var part_ReferenceParameter = part_Reference.HasValue ?
            new ObjectParameter("Part_Reference", part_Reference) :
            new ObjectParameter("Part_Reference", typeof(int));


        var material_ReferenceParameter = material_Reference.HasValue ?
            new ObjectParameter("Material_Reference", material_Reference) :
            new ObjectParameter("Material_Reference", typeof(int));


        var qty_PerParameter = qty_Per.HasValue ?
            new ObjectParameter("Qty_Per", qty_Per) :
            new ObjectParameter("Qty_Per", typeof(int));


        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertBuildBomItem_Result>("spInsertBuildBomItem", build_ReferenceParameter, parent_part_ReferenceParameter, component_TypeParameter, part_ReferenceParameter, material_ReferenceParameter, qty_PerParameter, notesParameter, buildBOM_Reference, sUCCESS);
    }


    public virtual int Split_WO_Batch(Nullable<int> batch_Reference, Nullable<int> no_Of_Batches, Nullable<double> qty_Per_Batch, string workshop_Option, string delivery_Option, Nullable<bool> link_To_Original, ObjectParameter first_Split_Reference, ObjectParameter success)
    {

        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var no_Of_BatchesParameter = no_Of_Batches.HasValue ?
            new ObjectParameter("No_Of_Batches", no_Of_Batches) :
            new ObjectParameter("No_Of_Batches", typeof(int));


        var qty_Per_BatchParameter = qty_Per_Batch.HasValue ?
            new ObjectParameter("Qty_Per_Batch", qty_Per_Batch) :
            new ObjectParameter("Qty_Per_Batch", typeof(double));


        var workshop_OptionParameter = workshop_Option != null ?
            new ObjectParameter("Workshop_Option", workshop_Option) :
            new ObjectParameter("Workshop_Option", typeof(string));


        var delivery_OptionParameter = delivery_Option != null ?
            new ObjectParameter("Delivery_Option", delivery_Option) :
            new ObjectParameter("Delivery_Option", typeof(string));


        var link_To_OriginalParameter = link_To_Original.HasValue ?
            new ObjectParameter("Link_To_Original", link_To_Original) :
            new ObjectParameter("Link_To_Original", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Split_WO_Batch", batch_ReferenceParameter, no_Of_BatchesParameter, qty_Per_BatchParameter, workshop_OptionParameter, delivery_OptionParameter, link_To_OriginalParameter, first_Split_Reference, success);
    }


    public virtual ObjectResult<spMass_Update_Materials_Result> spMass_Update_Materials(Nullable<int> old_Material_Reference, Nullable<int> new_Material_Reference, Nullable<bool> replace, string updateFieldList, Nullable<bool> quotes, Nullable<bool> worksOrders, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string quoteStatusList, string wOStatusList, ObjectParameter success, ObjectParameter quoteCount, ObjectParameter wOCount, ObjectParameter wOSkipped)
    {

        var old_Material_ReferenceParameter = old_Material_Reference.HasValue ?
            new ObjectParameter("Old_Material_Reference", old_Material_Reference) :
            new ObjectParameter("Old_Material_Reference", typeof(int));


        var new_Material_ReferenceParameter = new_Material_Reference.HasValue ?
            new ObjectParameter("New_Material_Reference", new_Material_Reference) :
            new ObjectParameter("New_Material_Reference", typeof(int));


        var replaceParameter = replace.HasValue ?
            new ObjectParameter("Replace", replace) :
            new ObjectParameter("Replace", typeof(bool));


        var updateFieldListParameter = updateFieldList != null ?
            new ObjectParameter("UpdateFieldList", updateFieldList) :
            new ObjectParameter("UpdateFieldList", typeof(string));


        var quotesParameter = quotes.HasValue ?
            new ObjectParameter("Quotes", quotes) :
            new ObjectParameter("Quotes", typeof(bool));


        var worksOrdersParameter = worksOrders.HasValue ?
            new ObjectParameter("WorksOrders", worksOrders) :
            new ObjectParameter("WorksOrders", typeof(bool));


        var dateFromParameter = dateFrom.HasValue ?
            new ObjectParameter("DateFrom", dateFrom) :
            new ObjectParameter("DateFrom", typeof(System.DateTime));


        var dateToParameter = dateTo.HasValue ?
            new ObjectParameter("DateTo", dateTo) :
            new ObjectParameter("DateTo", typeof(System.DateTime));


        var quoteStatusListParameter = quoteStatusList != null ?
            new ObjectParameter("QuoteStatusList", quoteStatusList) :
            new ObjectParameter("QuoteStatusList", typeof(string));


        var wOStatusListParameter = wOStatusList != null ?
            new ObjectParameter("WOStatusList", wOStatusList) :
            new ObjectParameter("WOStatusList", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMass_Update_Materials_Result>("spMass_Update_Materials", old_Material_ReferenceParameter, new_Material_ReferenceParameter, replaceParameter, updateFieldListParameter, quotesParameter, worksOrdersParameter, dateFromParameter, dateToParameter, quoteStatusListParameter, wOStatusListParameter, success, quoteCount, wOCount, wOSkipped);
    }


    public virtual ObjectResult<spMass_Update_Parts_Result> spMass_Update_Parts(Nullable<int> old_Part_Reference, Nullable<int> new_Part_Reference, Nullable<bool> replace, string updateFieldList, Nullable<bool> quotes, Nullable<bool> worksOrders, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string quoteStatusList, string wOStatusList, ObjectParameter success, ObjectParameter quoteCount, ObjectParameter wOCount, ObjectParameter wOSkipped)
    {

        var old_Part_ReferenceParameter = old_Part_Reference.HasValue ?
            new ObjectParameter("Old_Part_Reference", old_Part_Reference) :
            new ObjectParameter("Old_Part_Reference", typeof(int));


        var new_Part_ReferenceParameter = new_Part_Reference.HasValue ?
            new ObjectParameter("New_Part_Reference", new_Part_Reference) :
            new ObjectParameter("New_Part_Reference", typeof(int));


        var replaceParameter = replace.HasValue ?
            new ObjectParameter("Replace", replace) :
            new ObjectParameter("Replace", typeof(bool));


        var updateFieldListParameter = updateFieldList != null ?
            new ObjectParameter("UpdateFieldList", updateFieldList) :
            new ObjectParameter("UpdateFieldList", typeof(string));


        var quotesParameter = quotes.HasValue ?
            new ObjectParameter("Quotes", quotes) :
            new ObjectParameter("Quotes", typeof(bool));


        var worksOrdersParameter = worksOrders.HasValue ?
            new ObjectParameter("WorksOrders", worksOrders) :
            new ObjectParameter("WorksOrders", typeof(bool));


        var dateFromParameter = dateFrom.HasValue ?
            new ObjectParameter("DateFrom", dateFrom) :
            new ObjectParameter("DateFrom", typeof(System.DateTime));


        var dateToParameter = dateTo.HasValue ?
            new ObjectParameter("DateTo", dateTo) :
            new ObjectParameter("DateTo", typeof(System.DateTime));


        var quoteStatusListParameter = quoteStatusList != null ?
            new ObjectParameter("QuoteStatusList", quoteStatusList) :
            new ObjectParameter("QuoteStatusList", typeof(string));


        var wOStatusListParameter = wOStatusList != null ?
            new ObjectParameter("WOStatusList", wOStatusList) :
            new ObjectParameter("WOStatusList", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMass_Update_Parts_Result>("spMass_Update_Parts", old_Part_ReferenceParameter, new_Part_ReferenceParameter, replaceParameter, updateFieldListParameter, quotesParameter, worksOrdersParameter, dateFromParameter, dateToParameter, quoteStatusListParameter, wOStatusListParameter, success, quoteCount, wOCount, wOSkipped);
    }


    public virtual ObjectResult<spMass_Update_WorkCentres_Result> spMass_Update_WorkCentres(Nullable<int> old_WCentre_Reference, Nullable<int> new_WCentre_Reference, string updateFieldList, Nullable<bool> quotes, Nullable<bool> worksOrders, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string quoteStatusList, string wOStatusList, ObjectParameter success, ObjectParameter quoteCount, ObjectParameter wOCount)
    {

        var old_WCentre_ReferenceParameter = old_WCentre_Reference.HasValue ?
            new ObjectParameter("Old_WCentre_Reference", old_WCentre_Reference) :
            new ObjectParameter("Old_WCentre_Reference", typeof(int));


        var new_WCentre_ReferenceParameter = new_WCentre_Reference.HasValue ?
            new ObjectParameter("New_WCentre_Reference", new_WCentre_Reference) :
            new ObjectParameter("New_WCentre_Reference", typeof(int));


        var updateFieldListParameter = updateFieldList != null ?
            new ObjectParameter("UpdateFieldList", updateFieldList) :
            new ObjectParameter("UpdateFieldList", typeof(string));


        var quotesParameter = quotes.HasValue ?
            new ObjectParameter("Quotes", quotes) :
            new ObjectParameter("Quotes", typeof(bool));


        var worksOrdersParameter = worksOrders.HasValue ?
            new ObjectParameter("WorksOrders", worksOrders) :
            new ObjectParameter("WorksOrders", typeof(bool));


        var dateFromParameter = dateFrom.HasValue ?
            new ObjectParameter("DateFrom", dateFrom) :
            new ObjectParameter("DateFrom", typeof(System.DateTime));


        var dateToParameter = dateTo.HasValue ?
            new ObjectParameter("DateTo", dateTo) :
            new ObjectParameter("DateTo", typeof(System.DateTime));


        var quoteStatusListParameter = quoteStatusList != null ?
            new ObjectParameter("QuoteStatusList", quoteStatusList) :
            new ObjectParameter("QuoteStatusList", typeof(string));


        var wOStatusListParameter = wOStatusList != null ?
            new ObjectParameter("WOStatusList", wOStatusList) :
            new ObjectParameter("WOStatusList", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMass_Update_WorkCentres_Result>("spMass_Update_WorkCentres", old_WCentre_ReferenceParameter, new_WCentre_ReferenceParameter, updateFieldListParameter, quotesParameter, worksOrdersParameter, dateFromParameter, dateToParameter, quoteStatusListParameter, wOStatusListParameter, success, quoteCount, wOCount);
    }


    public virtual int spPing1()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPing1");
    }


    public virtual int spPItem_For_Stock(string item_Type, Nullable<int> pOrder_Reference, Nullable<int> item_Reference, Nullable<double> required_Quantity, Nullable<System.DateTime> required_Date, Nullable<bool> wOStatus_To_OffSite, Nullable<bool> bundle_Item, ObjectParameter success, ObjectParameter message, ObjectParameter pItem_Reference)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var pOrder_ReferenceParameter = pOrder_Reference.HasValue ?
            new ObjectParameter("POrder_Reference", pOrder_Reference) :
            new ObjectParameter("POrder_Reference", typeof(int));


        var item_ReferenceParameter = item_Reference.HasValue ?
            new ObjectParameter("Item_Reference", item_Reference) :
            new ObjectParameter("Item_Reference", typeof(int));


        var required_QuantityParameter = required_Quantity.HasValue ?
            new ObjectParameter("Required_Quantity", required_Quantity) :
            new ObjectParameter("Required_Quantity", typeof(double));


        var required_DateParameter = required_Date.HasValue ?
            new ObjectParameter("Required_Date", required_Date) :
            new ObjectParameter("Required_Date", typeof(System.DateTime));


        var wOStatus_To_OffSiteParameter = wOStatus_To_OffSite.HasValue ?
            new ObjectParameter("WOStatus_To_OffSite", wOStatus_To_OffSite) :
            new ObjectParameter("WOStatus_To_OffSite", typeof(bool));


        var bundle_ItemParameter = bundle_Item.HasValue ?
            new ObjectParameter("Bundle_Item", bundle_Item) :
            new ObjectParameter("Bundle_Item", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPItem_For_Stock", item_TypeParameter, pOrder_ReferenceParameter, item_ReferenceParameter, required_QuantityParameter, required_DateParameter, wOStatus_To_OffSiteParameter, bundle_ItemParameter, success, message, pItem_Reference);
    }


    public virtual int spPItem_From_WOItem(string item_Type, Nullable<int> pOrder_Reference, Nullable<int> item_Reference, Nullable<double> required_Quantity, Nullable<System.DateTime> required_Date, Nullable<bool> wOStatus_To_OffSite, Nullable<bool> bundle_Item, ObjectParameter success, ObjectParameter message, ObjectParameter pItem_Reference)
    {

        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var pOrder_ReferenceParameter = pOrder_Reference.HasValue ?
            new ObjectParameter("POrder_Reference", pOrder_Reference) :
            new ObjectParameter("POrder_Reference", typeof(int));


        var item_ReferenceParameter = item_Reference.HasValue ?
            new ObjectParameter("Item_Reference", item_Reference) :
            new ObjectParameter("Item_Reference", typeof(int));


        var required_QuantityParameter = required_Quantity.HasValue ?
            new ObjectParameter("Required_Quantity", required_Quantity) :
            new ObjectParameter("Required_Quantity", typeof(double));


        var required_DateParameter = required_Date.HasValue ?
            new ObjectParameter("Required_Date", required_Date) :
            new ObjectParameter("Required_Date", typeof(System.DateTime));


        var wOStatus_To_OffSiteParameter = wOStatus_To_OffSite.HasValue ?
            new ObjectParameter("WOStatus_To_OffSite", wOStatus_To_OffSite) :
            new ObjectParameter("WOStatus_To_OffSite", typeof(bool));


        var bundle_ItemParameter = bundle_Item.HasValue ?
            new ObjectParameter("Bundle_Item", bundle_Item) :
            new ObjectParameter("Bundle_Item", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spPItem_From_WOItem", item_TypeParameter, pOrder_ReferenceParameter, item_ReferenceParameter, required_QuantityParameter, required_DateParameter, wOStatus_To_OffSiteParameter, bundle_ItemParameter, success, message, pItem_Reference);
    }


    public virtual ObjectResult<string> spSave_Dashboard_Range(string rangeName, Nullable<int> range01From, Nullable<int> range01To, Nullable<int> range01Colour, Nullable<int> range01FontColour, Nullable<int> range02To, Nullable<int> range02Colour, Nullable<int> range02FontColour, Nullable<int> range03To, Nullable<int> range03Colour, Nullable<int> range03FontColour, Nullable<int> range04To, Nullable<int> range04Colour, Nullable<int> range04FontColour, Nullable<int> range05To, Nullable<int> range05Colour, Nullable<int> range05FontColour, Nullable<bool> allowOverwrite, ObjectParameter sUCCESS)
    {

        var rangeNameParameter = rangeName != null ?
            new ObjectParameter("RangeName", rangeName) :
            new ObjectParameter("RangeName", typeof(string));


        var range01FromParameter = range01From.HasValue ?
            new ObjectParameter("Range01From", range01From) :
            new ObjectParameter("Range01From", typeof(int));


        var range01ToParameter = range01To.HasValue ?
            new ObjectParameter("Range01To", range01To) :
            new ObjectParameter("Range01To", typeof(int));


        var range01ColourParameter = range01Colour.HasValue ?
            new ObjectParameter("Range01Colour", range01Colour) :
            new ObjectParameter("Range01Colour", typeof(int));


        var range01FontColourParameter = range01FontColour.HasValue ?
            new ObjectParameter("Range01FontColour", range01FontColour) :
            new ObjectParameter("Range01FontColour", typeof(int));


        var range02ToParameter = range02To.HasValue ?
            new ObjectParameter("Range02To", range02To) :
            new ObjectParameter("Range02To", typeof(int));


        var range02ColourParameter = range02Colour.HasValue ?
            new ObjectParameter("Range02Colour", range02Colour) :
            new ObjectParameter("Range02Colour", typeof(int));


        var range02FontColourParameter = range02FontColour.HasValue ?
            new ObjectParameter("Range02FontColour", range02FontColour) :
            new ObjectParameter("Range02FontColour", typeof(int));


        var range03ToParameter = range03To.HasValue ?
            new ObjectParameter("Range03To", range03To) :
            new ObjectParameter("Range03To", typeof(int));


        var range03ColourParameter = range03Colour.HasValue ?
            new ObjectParameter("Range03Colour", range03Colour) :
            new ObjectParameter("Range03Colour", typeof(int));


        var range03FontColourParameter = range03FontColour.HasValue ?
            new ObjectParameter("Range03FontColour", range03FontColour) :
            new ObjectParameter("Range03FontColour", typeof(int));


        var range04ToParameter = range04To.HasValue ?
            new ObjectParameter("Range04To", range04To) :
            new ObjectParameter("Range04To", typeof(int));


        var range04ColourParameter = range04Colour.HasValue ?
            new ObjectParameter("Range04Colour", range04Colour) :
            new ObjectParameter("Range04Colour", typeof(int));


        var range04FontColourParameter = range04FontColour.HasValue ?
            new ObjectParameter("Range04FontColour", range04FontColour) :
            new ObjectParameter("Range04FontColour", typeof(int));


        var range05ToParameter = range05To.HasValue ?
            new ObjectParameter("Range05To", range05To) :
            new ObjectParameter("Range05To", typeof(int));


        var range05ColourParameter = range05Colour.HasValue ?
            new ObjectParameter("Range05Colour", range05Colour) :
            new ObjectParameter("Range05Colour", typeof(int));


        var range05FontColourParameter = range05FontColour.HasValue ?
            new ObjectParameter("Range05FontColour", range05FontColour) :
            new ObjectParameter("Range05FontColour", typeof(int));


        var allowOverwriteParameter = allowOverwrite.HasValue ?
            new ObjectParameter("AllowOverwrite", allowOverwrite) :
            new ObjectParameter("AllowOverwrite", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spSave_Dashboard_Range", rangeNameParameter, range01FromParameter, range01ToParameter, range01ColourParameter, range01FontColourParameter, range02ToParameter, range02ColourParameter, range02FontColourParameter, range03ToParameter, range03ColourParameter, range03FontColourParameter, range04ToParameter, range04ColourParameter, range04FontColourParameter, range05ToParameter, range05ColourParameter, range05FontColourParameter, allowOverwriteParameter, sUCCESS);
    }


    public virtual ObjectResult<spSave_DashboardTile_Result> spSave_DashboardTile(string userName, string widgetGUID, string widgetName, string aboutSummary, string aboutDetails, string widgetCategory, string libraryType, string userGroup, Nullable<int> page, string tileType, string tileCaption, Nullable<int> tilesX, Nullable<int> tilesY, Nullable<int> tilesWide, Nullable<int> tilesHigh, string widgetDefXML, string base64Picture, Nullable<int> minScriptNumber, ObjectParameter iD, ObjectParameter sUCCESS)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var widgetGUIDParameter = widgetGUID != null ?
            new ObjectParameter("WidgetGUID", widgetGUID) :
            new ObjectParameter("WidgetGUID", typeof(string));


        var widgetNameParameter = widgetName != null ?
            new ObjectParameter("WidgetName", widgetName) :
            new ObjectParameter("WidgetName", typeof(string));


        var aboutSummaryParameter = aboutSummary != null ?
            new ObjectParameter("AboutSummary", aboutSummary) :
            new ObjectParameter("AboutSummary", typeof(string));


        var aboutDetailsParameter = aboutDetails != null ?
            new ObjectParameter("AboutDetails", aboutDetails) :
            new ObjectParameter("AboutDetails", typeof(string));


        var widgetCategoryParameter = widgetCategory != null ?
            new ObjectParameter("WidgetCategory", widgetCategory) :
            new ObjectParameter("WidgetCategory", typeof(string));


        var libraryTypeParameter = libraryType != null ?
            new ObjectParameter("LibraryType", libraryType) :
            new ObjectParameter("LibraryType", typeof(string));


        var userGroupParameter = userGroup != null ?
            new ObjectParameter("UserGroup", userGroup) :
            new ObjectParameter("UserGroup", typeof(string));


        var pageParameter = page.HasValue ?
            new ObjectParameter("Page", page) :
            new ObjectParameter("Page", typeof(int));


        var tileTypeParameter = tileType != null ?
            new ObjectParameter("TileType", tileType) :
            new ObjectParameter("TileType", typeof(string));


        var tileCaptionParameter = tileCaption != null ?
            new ObjectParameter("TileCaption", tileCaption) :
            new ObjectParameter("TileCaption", typeof(string));


        var tilesXParameter = tilesX.HasValue ?
            new ObjectParameter("TilesX", tilesX) :
            new ObjectParameter("TilesX", typeof(int));


        var tilesYParameter = tilesY.HasValue ?
            new ObjectParameter("TilesY", tilesY) :
            new ObjectParameter("TilesY", typeof(int));


        var tilesWideParameter = tilesWide.HasValue ?
            new ObjectParameter("TilesWide", tilesWide) :
            new ObjectParameter("TilesWide", typeof(int));


        var tilesHighParameter = tilesHigh.HasValue ?
            new ObjectParameter("TilesHigh", tilesHigh) :
            new ObjectParameter("TilesHigh", typeof(int));


        var widgetDefXMLParameter = widgetDefXML != null ?
            new ObjectParameter("WidgetDefXML", widgetDefXML) :
            new ObjectParameter("WidgetDefXML", typeof(string));


        var base64PictureParameter = base64Picture != null ?
            new ObjectParameter("Base64Picture", base64Picture) :
            new ObjectParameter("Base64Picture", typeof(string));


        var minScriptNumberParameter = minScriptNumber.HasValue ?
            new ObjectParameter("MinScriptNumber", minScriptNumber) :
            new ObjectParameter("MinScriptNumber", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSave_DashboardTile_Result>("spSave_DashboardTile", userNameParameter, widgetGUIDParameter, widgetNameParameter, aboutSummaryParameter, aboutDetailsParameter, widgetCategoryParameter, libraryTypeParameter, userGroupParameter, pageParameter, tileTypeParameter, tileCaptionParameter, tilesXParameter, tilesYParameter, tilesWideParameter, tilesHighParameter, widgetDefXMLParameter, base64PictureParameter, minScriptNumberParameter, iD, sUCCESS);
    }


    public virtual ObjectResult<string> spUpdate_DashboardPageName(string userName, Nullable<int> pageNo, string pageName, Nullable<int> pageSequence, Nullable<bool> autoPage, Nullable<int> intervalS, ObjectParameter sUCCESS)
    {

        var userNameParameter = userName != null ?
            new ObjectParameter("UserName", userName) :
            new ObjectParameter("UserName", typeof(string));


        var pageNoParameter = pageNo.HasValue ?
            new ObjectParameter("PageNo", pageNo) :
            new ObjectParameter("PageNo", typeof(int));


        var pageNameParameter = pageName != null ?
            new ObjectParameter("PageName", pageName) :
            new ObjectParameter("PageName", typeof(string));


        var pageSequenceParameter = pageSequence.HasValue ?
            new ObjectParameter("PageSequence", pageSequence) :
            new ObjectParameter("PageSequence", typeof(int));


        var autoPageParameter = autoPage.HasValue ?
            new ObjectParameter("AutoPage", autoPage) :
            new ObjectParameter("AutoPage", typeof(bool));


        var intervalSParameter = intervalS.HasValue ?
            new ObjectParameter("IntervalS", intervalS) :
            new ObjectParameter("IntervalS", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spUpdate_DashboardPageName", userNameParameter, pageNoParameter, pageNameParameter, pageSequenceParameter, autoPageParameter, intervalSParameter, sUCCESS);
    }


    public virtual ObjectResult<spUpdate_Deliveries_Result> spUpdate_Deliveries(string update_Insert, string item_Type, Nullable<int> delivery_Reference, Nullable<double> quantity_Expected, Nullable<double> quantity_Received, Nullable<decimal> unit_Cost, Nullable<double> quantity_In_Stock, string batch_Number, string coC, string supplier_Batch_Number, string advice_Note, string notes, string source, string source_Reference, string supplier_Name, Nullable<System.DateTime> received_Date, Nullable<int> pItem_Reference, Nullable<int> common_Reference, Nullable<int> wOrder_Reference, Nullable<int> customer_Reference, Nullable<int> client_Reference, Nullable<System.DateTime> date_Created, Nullable<System.DateTime> date_Last_Modified, Nullable<double> cost_Quantity, Nullable<double> quantity_Rejected, Nullable<bool> quarantined, string location, Nullable<bool> consolidated, Nullable<System.DateTime> expiry_Date, Nullable<int> numFileAttachments, Nullable<int> numBrokenLinks, Nullable<bool> scrapped, Nullable<bool> bulkMode, Nullable<int> pIA_Reference, ObjectParameter sUCCESS, ObjectParameter oUT_Delivery_Reference)
    {

        var update_InsertParameter = update_Insert != null ?
            new ObjectParameter("Update_Insert", update_Insert) :
            new ObjectParameter("Update_Insert", typeof(string));


        var item_TypeParameter = item_Type != null ?
            new ObjectParameter("Item_Type", item_Type) :
            new ObjectParameter("Item_Type", typeof(string));


        var delivery_ReferenceParameter = delivery_Reference.HasValue ?
            new ObjectParameter("Delivery_Reference", delivery_Reference) :
            new ObjectParameter("Delivery_Reference", typeof(int));


        var quantity_ExpectedParameter = quantity_Expected.HasValue ?
            new ObjectParameter("Quantity_Expected", quantity_Expected) :
            new ObjectParameter("Quantity_Expected", typeof(double));


        var quantity_ReceivedParameter = quantity_Received.HasValue ?
            new ObjectParameter("Quantity_Received", quantity_Received) :
            new ObjectParameter("Quantity_Received", typeof(double));


        var unit_CostParameter = unit_Cost.HasValue ?
            new ObjectParameter("Unit_Cost", unit_Cost) :
            new ObjectParameter("Unit_Cost", typeof(decimal));


        var quantity_In_StockParameter = quantity_In_Stock.HasValue ?
            new ObjectParameter("Quantity_In_Stock", quantity_In_Stock) :
            new ObjectParameter("Quantity_In_Stock", typeof(double));


        var batch_NumberParameter = batch_Number != null ?
            new ObjectParameter("Batch_Number", batch_Number) :
            new ObjectParameter("Batch_Number", typeof(string));


        var coCParameter = coC != null ?
            new ObjectParameter("CoC", coC) :
            new ObjectParameter("CoC", typeof(string));


        var supplier_Batch_NumberParameter = supplier_Batch_Number != null ?
            new ObjectParameter("Supplier_Batch_Number", supplier_Batch_Number) :
            new ObjectParameter("Supplier_Batch_Number", typeof(string));


        var advice_NoteParameter = advice_Note != null ?
            new ObjectParameter("Advice_Note", advice_Note) :
            new ObjectParameter("Advice_Note", typeof(string));


        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));


        var sourceParameter = source != null ?
            new ObjectParameter("Source", source) :
            new ObjectParameter("Source", typeof(string));


        var source_ReferenceParameter = source_Reference != null ?
            new ObjectParameter("Source_Reference", source_Reference) :
            new ObjectParameter("Source_Reference", typeof(string));


        var supplier_NameParameter = supplier_Name != null ?
            new ObjectParameter("Supplier_Name", supplier_Name) :
            new ObjectParameter("Supplier_Name", typeof(string));


        var received_DateParameter = received_Date.HasValue ?
            new ObjectParameter("Received_Date", received_Date) :
            new ObjectParameter("Received_Date", typeof(System.DateTime));


        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        var common_ReferenceParameter = common_Reference.HasValue ?
            new ObjectParameter("Common_Reference", common_Reference) :
            new ObjectParameter("Common_Reference", typeof(int));


        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var customer_ReferenceParameter = customer_Reference.HasValue ?
            new ObjectParameter("Customer_Reference", customer_Reference) :
            new ObjectParameter("Customer_Reference", typeof(int));


        var client_ReferenceParameter = client_Reference.HasValue ?
            new ObjectParameter("Client_Reference", client_Reference) :
            new ObjectParameter("Client_Reference", typeof(int));


        var date_CreatedParameter = date_Created.HasValue ?
            new ObjectParameter("Date_Created", date_Created) :
            new ObjectParameter("Date_Created", typeof(System.DateTime));


        var date_Last_ModifiedParameter = date_Last_Modified.HasValue ?
            new ObjectParameter("Date_Last_Modified", date_Last_Modified) :
            new ObjectParameter("Date_Last_Modified", typeof(System.DateTime));


        var cost_QuantityParameter = cost_Quantity.HasValue ?
            new ObjectParameter("Cost_Quantity", cost_Quantity) :
            new ObjectParameter("Cost_Quantity", typeof(double));


        var quantity_RejectedParameter = quantity_Rejected.HasValue ?
            new ObjectParameter("Quantity_Rejected", quantity_Rejected) :
            new ObjectParameter("Quantity_Rejected", typeof(double));


        var quarantinedParameter = quarantined.HasValue ?
            new ObjectParameter("Quarantined", quarantined) :
            new ObjectParameter("Quarantined", typeof(bool));


        var locationParameter = location != null ?
            new ObjectParameter("Location", location) :
            new ObjectParameter("Location", typeof(string));


        var consolidatedParameter = consolidated.HasValue ?
            new ObjectParameter("Consolidated", consolidated) :
            new ObjectParameter("Consolidated", typeof(bool));


        var expiry_DateParameter = expiry_Date.HasValue ?
            new ObjectParameter("Expiry_Date", expiry_Date) :
            new ObjectParameter("Expiry_Date", typeof(System.DateTime));


        var numFileAttachmentsParameter = numFileAttachments.HasValue ?
            new ObjectParameter("NumFileAttachments", numFileAttachments) :
            new ObjectParameter("NumFileAttachments", typeof(int));


        var numBrokenLinksParameter = numBrokenLinks.HasValue ?
            new ObjectParameter("NumBrokenLinks", numBrokenLinks) :
            new ObjectParameter("NumBrokenLinks", typeof(int));


        var scrappedParameter = scrapped.HasValue ?
            new ObjectParameter("Scrapped", scrapped) :
            new ObjectParameter("Scrapped", typeof(bool));


        var bulkModeParameter = bulkMode.HasValue ?
            new ObjectParameter("BulkMode", bulkMode) :
            new ObjectParameter("BulkMode", typeof(bool));


        var pIA_ReferenceParameter = pIA_Reference.HasValue ?
            new ObjectParameter("PIA_Reference", pIA_Reference) :
            new ObjectParameter("PIA_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spUpdate_Deliveries_Result>("spUpdate_Deliveries", update_InsertParameter, item_TypeParameter, delivery_ReferenceParameter, quantity_ExpectedParameter, quantity_ReceivedParameter, unit_CostParameter, quantity_In_StockParameter, batch_NumberParameter, coCParameter, supplier_Batch_NumberParameter, advice_NoteParameter, notesParameter, sourceParameter, source_ReferenceParameter, supplier_NameParameter, received_DateParameter, pItem_ReferenceParameter, common_ReferenceParameter, wOrder_ReferenceParameter, customer_ReferenceParameter, client_ReferenceParameter, date_CreatedParameter, date_Last_ModifiedParameter, cost_QuantityParameter, quantity_RejectedParameter, quarantinedParameter, locationParameter, consolidatedParameter, expiry_DateParameter, numFileAttachmentsParameter, numBrokenLinksParameter, scrappedParameter, bulkModeParameter, pIA_ReferenceParameter, sUCCESS, oUT_Delivery_Reference);
    }


    public virtual int spUpdate_Users_Access_Rights(Nullable<int> tUAR_Record_ID, Nullable<int> tAF_Record_ID, string record_Type, Nullable<int> user_Role_Reference, Nullable<bool> access_Rights_Value, ObjectParameter success, ObjectParameter message)
    {

        var tUAR_Record_IDParameter = tUAR_Record_ID.HasValue ?
            new ObjectParameter("TUAR_Record_ID", tUAR_Record_ID) :
            new ObjectParameter("TUAR_Record_ID", typeof(int));


        var tAF_Record_IDParameter = tAF_Record_ID.HasValue ?
            new ObjectParameter("TAF_Record_ID", tAF_Record_ID) :
            new ObjectParameter("TAF_Record_ID", typeof(int));


        var record_TypeParameter = record_Type != null ?
            new ObjectParameter("Record_Type", record_Type) :
            new ObjectParameter("Record_Type", typeof(string));


        var user_Role_ReferenceParameter = user_Role_Reference.HasValue ?
            new ObjectParameter("User_Role_Reference", user_Role_Reference) :
            new ObjectParameter("User_Role_Reference", typeof(int));


        var access_Rights_ValueParameter = access_Rights_Value.HasValue ?
            new ObjectParameter("Access_Rights_Value", access_Rights_Value) :
            new ObjectParameter("Access_Rights_Value", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_Users_Access_Rights", tUAR_Record_IDParameter, tAF_Record_IDParameter, record_TypeParameter, user_Role_ReferenceParameter, access_Rights_ValueParameter, success, message);
    }


    public virtual int spUpdate_Widget_Rights(string widgetGUID, Nullable<int> user_Record_ID, Nullable<int> role_Record_ID, string special, Nullable<bool> got_Rights, ObjectParameter message)
    {

        var widgetGUIDParameter = widgetGUID != null ?
            new ObjectParameter("WidgetGUID", widgetGUID) :
            new ObjectParameter("WidgetGUID", typeof(string));


        var user_Record_IDParameter = user_Record_ID.HasValue ?
            new ObjectParameter("User_Record_ID", user_Record_ID) :
            new ObjectParameter("User_Record_ID", typeof(int));


        var role_Record_IDParameter = role_Record_ID.HasValue ?
            new ObjectParameter("Role_Record_ID", role_Record_ID) :
            new ObjectParameter("Role_Record_ID", typeof(int));


        var specialParameter = special != null ?
            new ObjectParameter("Special", special) :
            new ObjectParameter("Special", typeof(string));


        var got_RightsParameter = got_Rights.HasValue ?
            new ObjectParameter("Got_Rights", got_Rights) :
            new ObjectParameter("Got_Rights", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdate_Widget_Rights", widgetGUIDParameter, user_Record_IDParameter, role_Record_IDParameter, specialParameter, got_RightsParameter, message);
    }


    public virtual int spUpdateLicenceRecord1(string licenceType, string licenceString, ObjectParameter success)
    {

        var licenceTypeParameter = licenceType != null ?
            new ObjectParameter("LicenceType", licenceType) :
            new ObjectParameter("LicenceType", typeof(string));


        var licenceStringParameter = licenceString != null ?
            new ObjectParameter("LicenceString", licenceString) :
            new ObjectParameter("LicenceString", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdateLicenceRecord1", licenceTypeParameter, licenceStringParameter, success);
    }


    public virtual ObjectResult<spWriteSession1_Result> spWriteSession1(Nullable<int> inID, string login_ID, string pC_Name, string client_Version, ObjectParameter iD, ObjectParameter sUCCESS)
    {

        var inIDParameter = inID.HasValue ?
            new ObjectParameter("inID", inID) :
            new ObjectParameter("inID", typeof(int));


        var login_IDParameter = login_ID != null ?
            new ObjectParameter("Login_ID", login_ID) :
            new ObjectParameter("Login_ID", typeof(string));


        var pC_NameParameter = pC_Name != null ?
            new ObjectParameter("PC_Name", pC_Name) :
            new ObjectParameter("PC_Name", typeof(string));


        var client_VersionParameter = client_Version != null ?
            new ObjectParameter("Client_Version", client_Version) :
            new ObjectParameter("Client_Version", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spWriteSession1_Result>("spWriteSession1", inIDParameter, login_IDParameter, pC_NameParameter, client_VersionParameter, iD, sUCCESS);
    }


    public virtual int TQ_Create_NCR(string nCR_Type, Nullable<int> wOrder_Reference, Nullable<int> wOWCentre_Reference, Nullable<int> wOTimes_Reference, Nullable<int> batch_Reference, Nullable<int> pItem_Reference, Nullable<int> mStock_Reference, Nullable<int> pStock_Reference, Nullable<int> sTrace_Reference, Nullable<int> tTrace_Reference, string company_Ref_No, string description, Nullable<double> qty, Nullable<int> created_By_Employee_Reference, Nullable<int> operator_Employee_Reference, ObjectParameter tQ_NCR_Reference, ObjectParameter success)
    {

        var nCR_TypeParameter = nCR_Type != null ?
            new ObjectParameter("NCR_Type", nCR_Type) :
            new ObjectParameter("NCR_Type", typeof(string));


        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        var wOTimes_ReferenceParameter = wOTimes_Reference.HasValue ?
            new ObjectParameter("WOTimes_Reference", wOTimes_Reference) :
            new ObjectParameter("WOTimes_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        var mStock_ReferenceParameter = mStock_Reference.HasValue ?
            new ObjectParameter("MStock_Reference", mStock_Reference) :
            new ObjectParameter("MStock_Reference", typeof(int));


        var pStock_ReferenceParameter = pStock_Reference.HasValue ?
            new ObjectParameter("PStock_Reference", pStock_Reference) :
            new ObjectParameter("PStock_Reference", typeof(int));


        var sTrace_ReferenceParameter = sTrace_Reference.HasValue ?
            new ObjectParameter("STrace_Reference", sTrace_Reference) :
            new ObjectParameter("STrace_Reference", typeof(int));


        var tTrace_ReferenceParameter = tTrace_Reference.HasValue ?
            new ObjectParameter("TTrace_Reference", tTrace_Reference) :
            new ObjectParameter("TTrace_Reference", typeof(int));


        var company_Ref_NoParameter = company_Ref_No != null ?
            new ObjectParameter("Company_Ref_No", company_Ref_No) :
            new ObjectParameter("Company_Ref_No", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var created_By_Employee_ReferenceParameter = created_By_Employee_Reference.HasValue ?
            new ObjectParameter("Created_By_Employee_Reference", created_By_Employee_Reference) :
            new ObjectParameter("Created_By_Employee_Reference", typeof(int));


        var operator_Employee_ReferenceParameter = operator_Employee_Reference.HasValue ?
            new ObjectParameter("Operator_Employee_Reference", operator_Employee_Reference) :
            new ObjectParameter("Operator_Employee_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TQ_Create_NCR", nCR_TypeParameter, wOrder_ReferenceParameter, wOWCentre_ReferenceParameter, wOTimes_ReferenceParameter, batch_ReferenceParameter, pItem_ReferenceParameter, mStock_ReferenceParameter, pStock_ReferenceParameter, sTrace_ReferenceParameter, tTrace_ReferenceParameter, company_Ref_NoParameter, descriptionParameter, qtyParameter, created_By_Employee_ReferenceParameter, operator_Employee_ReferenceParameter, tQ_NCR_Reference, success);
    }


    public virtual int TQ_Create_Reject(string reject_Type, Nullable<int> wOrder_Reference, Nullable<int> wOWCentre_Reference, Nullable<int> wOTimes_Reference, Nullable<int> batch_Reference, Nullable<int> pItem_Reference, Nullable<int> mStock_Reference, Nullable<int> pStock_Reference, Nullable<int> sTrace_Reference, Nullable<int> tTrace_Reference, string company_Ref_No, string description, Nullable<double> qty, Nullable<int> created_By_Employee_Reference, Nullable<int> operator_Employee_Reference, ObjectParameter tQ_Reject_Reference, ObjectParameter success)
    {

        var reject_TypeParameter = reject_Type != null ?
            new ObjectParameter("Reject_Type", reject_Type) :
            new ObjectParameter("Reject_Type", typeof(string));


        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        var wOWCentre_ReferenceParameter = wOWCentre_Reference.HasValue ?
            new ObjectParameter("WOWCentre_Reference", wOWCentre_Reference) :
            new ObjectParameter("WOWCentre_Reference", typeof(int));


        var wOTimes_ReferenceParameter = wOTimes_Reference.HasValue ?
            new ObjectParameter("WOTimes_Reference", wOTimes_Reference) :
            new ObjectParameter("WOTimes_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var pItem_ReferenceParameter = pItem_Reference.HasValue ?
            new ObjectParameter("PItem_Reference", pItem_Reference) :
            new ObjectParameter("PItem_Reference", typeof(int));


        var mStock_ReferenceParameter = mStock_Reference.HasValue ?
            new ObjectParameter("MStock_Reference", mStock_Reference) :
            new ObjectParameter("MStock_Reference", typeof(int));


        var pStock_ReferenceParameter = pStock_Reference.HasValue ?
            new ObjectParameter("PStock_Reference", pStock_Reference) :
            new ObjectParameter("PStock_Reference", typeof(int));


        var sTrace_ReferenceParameter = sTrace_Reference.HasValue ?
            new ObjectParameter("STrace_Reference", sTrace_Reference) :
            new ObjectParameter("STrace_Reference", typeof(int));


        var tTrace_ReferenceParameter = tTrace_Reference.HasValue ?
            new ObjectParameter("TTrace_Reference", tTrace_Reference) :
            new ObjectParameter("TTrace_Reference", typeof(int));


        var company_Ref_NoParameter = company_Ref_No != null ?
            new ObjectParameter("Company_Ref_No", company_Ref_No) :
            new ObjectParameter("Company_Ref_No", typeof(string));


        var descriptionParameter = description != null ?
            new ObjectParameter("Description", description) :
            new ObjectParameter("Description", typeof(string));


        var qtyParameter = qty.HasValue ?
            new ObjectParameter("Qty", qty) :
            new ObjectParameter("Qty", typeof(double));


        var created_By_Employee_ReferenceParameter = created_By_Employee_Reference.HasValue ?
            new ObjectParameter("Created_By_Employee_Reference", created_By_Employee_Reference) :
            new ObjectParameter("Created_By_Employee_Reference", typeof(int));


        var operator_Employee_ReferenceParameter = operator_Employee_Reference.HasValue ?
            new ObjectParameter("Operator_Employee_Reference", operator_Employee_Reference) :
            new ObjectParameter("Operator_Employee_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TQ_Create_Reject", reject_TypeParameter, wOrder_ReferenceParameter, wOWCentre_ReferenceParameter, wOTimes_ReferenceParameter, batch_ReferenceParameter, pItem_ReferenceParameter, mStock_ReferenceParameter, pStock_ReferenceParameter, sTrace_ReferenceParameter, tTrace_ReferenceParameter, company_Ref_NoParameter, descriptionParameter, qtyParameter, created_By_Employee_ReferenceParameter, operator_Employee_ReferenceParameter, tQ_Reject_Reference, success);
    }


    public virtual int TQ_CreateInspRec(Nullable<int> created_By, Nullable<int> wOTimes_Reference, Nullable<int> batch_Reference, Nullable<decimal> qty_Inspected, Nullable<decimal> qty_Accepted, Nullable<decimal> qty_Rejected, string notes, Nullable<int> reject_Reference, ObjectParameter inspRec_Reference, ObjectParameter message)
    {

        var created_ByParameter = created_By.HasValue ?
            new ObjectParameter("Created_By", created_By) :
            new ObjectParameter("Created_By", typeof(int));


        var wOTimes_ReferenceParameter = wOTimes_Reference.HasValue ?
            new ObjectParameter("WOTimes_Reference", wOTimes_Reference) :
            new ObjectParameter("WOTimes_Reference", typeof(int));


        var batch_ReferenceParameter = batch_Reference.HasValue ?
            new ObjectParameter("Batch_Reference", batch_Reference) :
            new ObjectParameter("Batch_Reference", typeof(int));


        var qty_InspectedParameter = qty_Inspected.HasValue ?
            new ObjectParameter("Qty_Inspected", qty_Inspected) :
            new ObjectParameter("Qty_Inspected", typeof(decimal));


        var qty_AcceptedParameter = qty_Accepted.HasValue ?
            new ObjectParameter("Qty_Accepted", qty_Accepted) :
            new ObjectParameter("Qty_Accepted", typeof(decimal));


        var qty_RejectedParameter = qty_Rejected.HasValue ?
            new ObjectParameter("Qty_Rejected", qty_Rejected) :
            new ObjectParameter("Qty_Rejected", typeof(decimal));


        var notesParameter = notes != null ?
            new ObjectParameter("Notes", notes) :
            new ObjectParameter("Notes", typeof(string));


        var reject_ReferenceParameter = reject_Reference.HasValue ?
            new ObjectParameter("Reject_Reference", reject_Reference) :
            new ObjectParameter("Reject_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TQ_CreateInspRec", created_ByParameter, wOTimes_ReferenceParameter, batch_ReferenceParameter, qty_InspectedParameter, qty_AcceptedParameter, qty_RejectedParameter, notesParameter, reject_ReferenceParameter, inspRec_Reference, message);
    }


    public virtual int TQ_CreateInspRight(Nullable<int> inspType_Reference, Nullable<int> employee_Reference, Nullable<bool> allowed, ObjectParameter inspTypeRight_Reference, ObjectParameter message)
    {

        var inspType_ReferenceParameter = inspType_Reference.HasValue ?
            new ObjectParameter("InspType_Reference", inspType_Reference) :
            new ObjectParameter("InspType_Reference", typeof(int));


        var employee_ReferenceParameter = employee_Reference.HasValue ?
            new ObjectParameter("Employee_Reference", employee_Reference) :
            new ObjectParameter("Employee_Reference", typeof(int));


        var allowedParameter = allowed.HasValue ?
            new ObjectParameter("Allowed", allowed) :
            new ObjectParameter("Allowed", typeof(bool));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TQ_CreateInspRight", inspType_ReferenceParameter, employee_ReferenceParameter, allowedParameter, inspTypeRight_Reference, message);
    }


    public virtual ObjectResult<string> UpdateWOTotals1(Nullable<int> wOrder_Reference, ObjectParameter success)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UpdateWOTotals1", wOrder_ReferenceParameter, success);
    }


    public virtual int WF_After_Create_COT_WO(Nullable<int> wOrder_Reference)
    {

        var wOrder_ReferenceParameter = wOrder_Reference.HasValue ?
            new ObjectParameter("WOrder_Reference", wOrder_Reference) :
            new ObjectParameter("WOrder_Reference", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WF_After_Create_COT_WO", wOrder_ReferenceParameter);
    }


    public virtual int WOToQCopyAdv(Nullable<int> wOrderRefToCopy, string user_Reference, Nullable<int> user_ID, Nullable<decimal> multiply_Qty, ObjectParameter sequence, Nullable<int> copyDocs)
    {

        var wOrderRefToCopyParameter = wOrderRefToCopy.HasValue ?
            new ObjectParameter("WOrderRefToCopy", wOrderRefToCopy) :
            new ObjectParameter("WOrderRefToCopy", typeof(int));


        var user_ReferenceParameter = user_Reference != null ?
            new ObjectParameter("User_Reference", user_Reference) :
            new ObjectParameter("User_Reference", typeof(string));


        var user_IDParameter = user_ID.HasValue ?
            new ObjectParameter("User_ID", user_ID) :
            new ObjectParameter("User_ID", typeof(int));


        var multiply_QtyParameter = multiply_Qty.HasValue ?
            new ObjectParameter("Multiply_Qty", multiply_Qty) :
            new ObjectParameter("Multiply_Qty", typeof(decimal));


        var copyDocsParameter = copyDocs.HasValue ?
            new ObjectParameter("CopyDocs", copyDocs) :
            new ObjectParameter("CopyDocs", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WOToQCopyAdv", wOrderRefToCopyParameter, user_ReferenceParameter, user_IDParameter, multiply_QtyParameter, sequence, copyDocsParameter);
    }

}

}

